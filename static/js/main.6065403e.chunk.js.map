{"version":3,"sources":["logo.svg","utils.js","components/Result.js","components/Start.js","components/Simulations.js","components/Academic.js","components/Management.js","components/Financing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","load_simulation","index","simulation_type","buffer","buffer_copy","col_headers","console","log","fill_col_headers","simulation","ATT_NUM","fetch","then","res","json","data","length","add_empty_rows","i","temp","j","slice","load_simulation_v2","col_head","push","num_row","num_att","searchResultTable","single_search_button","range_search_button","BPlusTree","require","layout_changes","layout_changed","changes","user_actions","recorded_time","dataMatrix","prev_scrolltop","data_display","chn_copy","change_detected","current_fetch_index","currently_editing","conflict_i","conflict_j","incoming_value","conflict_message","select_i","select_j","transaction_button","display_dataset_button","pending_changes","try_message","user","socket_id","Start","request_shared_lock","shared_lock_request","row","col","socket","emit","request_exclusive_lock","exclusive_lock_request","toggleNavbar","setState","collapsed","state","toggleExclusiveLockReject","isExclusiveLockRejectOpen","toggleSharedLockReject","isSharedLockRejectOpen","toggleConflictModal","isConflictModalOpen","toggleShowHistory","isShowHistoryOpen","toggleUserNamePrompt","isUserNamePromptOpen","fetchMoreData","items","Math","ceil","rows","hasMore","load_from_buffer_to_matrix","fetchMoreRows","jsonObj","item","text","id","setTimeout","concat","Array","from","display","transaction_mode","Button","size","className","color","onClick","end_transaction","start_transaction","data_original","redirect_import","redirect_import_page","handleScroll","e","target","scrollHeight","scrollTop","clientHeight","show_state","sendMessage","message","check_cell_change","feature","isNaN","user_name","y_coord","parseInt","x_coord","actual_value","cell_read_only","input_row","input_col","hotTableComponent","current","hotInstance","updateSettings","cells","prop","cellProperties","readOnly","hangleUsername","name","value","send_default_username","onUserNameSubmit","preventDefault","name_package","resolve_conflict","commit_transaction","requestOptions","method","headers","body","JSON","stringify","track_action","action_type","idle_duration","Date","now","prev_idle_time","pop","layout_change_type","layout_change_direction","change_index","scroll_diff","action_length","combine","key","store_training_data","action_package","React","createRef","cols","attri","hasMoreResult","resultItems","load_result_from_buffer_to_matrix","import_page_link","check_cell_update","test_block","users","user_text_block","edit_message","history","io","on","addMessage","change_id","shared_lock_reject","shared_lock_accept","display_shared_lock","exclusive_lock_reject","exclusive_lock_accept","display_exclusive_lock","change_current_user","addNewUser","free_cells_package","update_freed_cells","message_package","update_edit_message","new_message","free_cells","disconnect","location","cell_data","getDataAtCell","new_data","substring","setDataAtCell","current_users","charAt","new_user_text","change_table","x","bind","this","addHook","chn","src","column","row2","column2","preventScrolling","selectionLayerLevel","amount","source","physicalRows","document","addEventListener","handleEnter","to","onKeyUp","href","rel","media","Jumbotron","Navbar","light","NavbarToggler","Collapse","isOpen","navbar","Nav","tabs","NavItem","NavLink","Modal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","toggle","Table","striped","map","line","ModalFooter","block","onScroll","tabIndex","ref","Component","tree","arri_array","columns","single_search_display_matrix","first_time_upload","current_result_fetch_index","resultBuffer","num_attr","style","height","width","border","margin","padding","Result","toggleRemoveAckModal","isRemoveAckModalOpen","toggleSingleRemoveModal","isSingleRemoveModalOpen","toggleRangeRemoveModal","isRangeRemoveModalOpen","toggleErrorModal","isErrorModalOpen","toggleUploadAckModal","isUploadAckModalOpen","toggleSearchSelectionModal","isSearchSelectionModalOpen","toggleRangeSearchModal","isRangeSearchModalOpen","toggleSingleSearchModal","isSingelSearchModalOpen","onRetrieveSelectionClick","fillOutputTable","isResultPanelModalOpen","toggleResultPanelModal","toFrontPage","getFinalSingleSearchResult","resultMatrix","handleSearchIndexChange","onSingleSearchKeySubmit","a","single_search_index","onID","single_search_attribute","formResults","attribute","insertSearchTable","resultBufferMatrix","formResults_result_buffer","matrix","requestOptions_result","loadResultBuffer","onRangeSearchIndexSubmit","range_search_lower_index","range_search_upper_index","lowerBound","upperBound","Number","MIN_VALUE","MAX_VALUE","range_search_attribute","lower_index","upper_index","fillNewTable","Row","fileHandler","event","fileObj","files","deleteDBTable","ExcelRenderer","err","resp","row_copy","col_copy","fieldName","url","depth","createDBTable","deleteResultTable","fetchMoreResult","search_result_size","redirect_start","redirect_to_start","isSingleSearch","searchResult","single_remove_index","range_remove_lower_index","range_remove_upper_index","start_page_link","pattern","dataLength","next","loader","endMessage","textAlign","cssHeight","rowHeight","Simulation","toggleSelectionPrompt","isSelectPromptOpen","onSelectionSubmit","select_simulation","redirect_academic_page","redirect_management_page","redirect_financing_page","academic_page_link","management_page_link","financing_page_link","Col","sm","Card","CardTitle","tag","CardText","utils","attendance_display","greadebook_display","student_status_display","attendance_col_headers","grade_book_col_headers","student_status_col_headers","table_loaded","Academic","toggleRestartModal","isRestartModalOpen","toggleNameModal","isNameModalOpen","toggleRedirectConfirmModal","isRedirectConfirmOpen","toggleInstructionModal","isInstructionOpen","curr_table","redirect_link","tab","activeTab","load_tables","reload_tables","redirect","onNameSubmit","submitName","restart","hotTableComponent1","hotTableComponent2","ButtonDropdown","float","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","classnames","active","TabContent","TabPane","tabId","schedule_v1_display","schedule_v2_display","progress_display","schedule_v1_col_headers","schedule_v2_col_headers","progress_col_headers","Management","monthly_expense_display","monthly_income_display","check_book_display","monthly_expense_col_headers","monthly_income_col_headers","check_book_col_headers","Financing","App","basename","process","path","component","Simulations","exact","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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GAAKC,EAAKE,QAI1B,EAAKJ,eAAe,GAAIP,EAASP,EAAQC,Q,KAKrDI,iBAAmB,SAACe,EAAUrB,GACH,cAAnBA,IACAqB,EAASC,KAAK,MACdD,EAASC,KAAK,QACdD,EAASC,KAAK,UACdD,EAASC,KAAK,WACdD,EAASC,KAAK,aACdD,EAASC,KAAK,YACdD,EAASC,KAAK,UACdD,EAASC,KAAK,YACdD,EAASC,KAAK,WAEK,cAAnBtB,IACAqB,EAASC,KAAK,MACdD,EAASC,KAAK,QACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,QACdD,EAASC,KAAK,QACdD,EAASC,KAAK,QACdD,EAASC,KAAK,QACdD,EAASC,KAAK,QACdD,EAASC,KAAK,QACdD,EAASC,KAAK,QACdD,EAASC,KAAK,SACdD,EAASC,KAAK,SACdD,EAASC,KAAK,SACdD,EAASC,KAAK,YAEK,cAAnBtB,IACAqB,EAASC,KAAK,MACdD,EAASC,KAAK,UACdD,EAASC,KAAK,QACdD,EAASC,KAAK,eACdD,EAASC,KAAK,YACdD,EAASC,KAAK,WACdD,EAASC,KAAK,YAEK,mBAAnBtB,IACAqB,EAASC,KAAK,MACdD,EAASC,KAAK,YACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,QAEK,kBAAnBtB,IACAqB,EAASC,KAAK,MACdD,EAASC,KAAK,UACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,OACdD,EAASC,KAAK,QAEK,wBAAnBtB,IACAqB,EAASC,KAAK,eACdD,EAASC,KAAK,QACdD,EAASC,KAAK,UACdD,EAASC,KAAK,WACdD,EAASC,KAAK,aACdD,EAASC,KAAK,YACdD,EAASC,KAAK,UACdD,EAASC,KAAK,YACdD,EAASC,KAAK,WAEK,wBAAnBtB,IACAqB,EAASC,KAAK,aACdD,EAASC,KAAK,UACdD,EAASC,KAAK,WACdD,EAASC,KAAK,aACdD,EAASC,KAAK,YACdD,EAASC,KAAK,UACdD,EAASC,KAAK,YACdD,EAASC,KAAK,WAEK,gBAAnBtB,IACAqB,EAASC,KAAK,WACdD,EAASC,KAAK,QACdD,EAASC,KAAK,YACdD,EAASC,KAAK,eACdD,EAASC,KAAK,QACdD,EAASC,KAAK,eACdD,EAASC,KAAK,WAGK,kBAAnBtB,IACAqB,EAASC,KAAK,MACdD,EAASC,KAAK,QACdD,EAASC,KAAK,SACdD,EAASC,KAAK,UACdD,EAASC,KAAK,uBACdD,EAASC,KAAK,Y,KAItBP,eAAiB,SAACQ,EAASC,EAASvB,EAAQC,GACxCE,QAAQC,IAAI,qBACZ,IAAK,IAAIW,EAAI,EAAGA,EAAIO,EAASP,IAAK,CAE9B,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAIM,EAASN,IACzBD,EAAKK,KAAK,IAEdrB,EAAOA,EAAOa,QAAUG,EACxBf,EAAYA,EAAYY,QAAUG,EAAKE,Y,kJC3ZlCM,EAAmBC,EAAsBC,E,kYCOpDC,EAAYC,EAAQ,KAItBC,GAHO,IAAIF,EAGM,CACnBG,gBAAgB,EAChBC,QAAS,KAGP7B,EAAc,GAEd8B,EAAe,GACfC,EAAgB,EAILC,EAAa,GAAkBlC,EAAS,GAAIC,EAAc,GAIrEkC,EAAiB,EACjBC,EAAe,GACfC,GAAW,GACXC,IAAkB,EAElBC,GAAsB,GAKtBC,IAAoB,EAEpBC,IAAc,EACdC,IAAc,EACdC,GAAiB,GACjBC,GAAmB,GAEnBC,IAAY,EACZC,IAAY,EAEZC,GAAqB,GAErBC,GAAyB,GAEzBC,GAAkB,CACpBrC,KAAK,GACLsC,YAAa,yBACbC,KAAM,IAGJC,GAAY,GAEVC,G,kDAEJ,aAAe,IAAD,uBACZ,gBAkWFC,oBAAsB,WAEpB,IAAIC,EAAsB,CACxBC,IAAKX,GACLY,IAAKX,IAEP,EAAKY,OAAOC,KAAK,sBAAuBJ,IAzW5B,EA4WdK,uBAAyB,SAAC7C,EAAGE,GAE3B,IAAI4C,EAAyB,CAC3BL,IAAKzC,EACL0C,IAAKxC,GAEP,EAAKyC,OAAOC,KAAK,yBAA0BE,IAlX/B,EAyXdC,aAAe,WACb,EAAKC,SAAS,CACZC,WAAY,EAAKC,MAAMD,aA3Xb,EA+XdE,0BAA4B,WAC1B,EAAKH,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAjY7B,EAqYdC,uBAAyB,WACvB,EAAKL,SAAS,CACZM,wBAAyB,EAAKJ,MAAMI,0BAvY1B,EA2YdC,oBAAsB,WACpB,EAAKP,SAAS,CACZQ,qBAAsB,EAAKN,MAAMM,uBA7YvB,EAiZdC,kBAAoB,WAClB,EAAKT,SAAS,CACZU,mBAAoB,EAAKR,MAAMQ,qBAnZrB,EAuZdC,qBAAuB,WACrB,EAAKX,SAAS,CACZY,sBAAuB,EAAKV,MAAMU,wBAzZxB,EA6ZdC,cAAgB,WACd,GAAI,EAAKX,MAAMY,MAAMhE,QAAUiE,KAAKC,KAAK,EAAKd,MAAMe,KAAKnE,OAAS,IAGhE,OAFA,EAAKkD,SAAS,CAAEkB,SAAS,SACzB9E,QAAQC,IAAI,gCAAkC0E,KAAKC,KAAK,EAAKd,MAAMe,KAAKnE,OAAS,KAKnF,GAA6C,GAAzC,EAAKoD,MAAMiB,2BACb,EAAKnB,SAAS,CACZmB,4BAA4B,IAIT,GAAjBlF,EAAOa,QACT,EAAKsE,cAjdO,QAmdT,CAGL,IAAK,IAAIpE,EAAI,EAAGA,EAtdF,GAsdqBA,IACjC,GAAIA,EAAIf,EAAOa,OAAQ,CAErB,IADA,IAAIuE,EAAU,GACLnE,EAAI,EAAGA,GAhdX,EAgd0BA,IAC7B,GAAS,GAALA,EAAQ,CACV,IAAIoE,EAAO,CAACC,KAAMtF,EAAOe,GAAGwE,IAC5BH,EAAO,GAASC,MACX,CACL,IAAIA,EAAO,CAACC,KAAMtF,EAAOe,GAAG,YAAcE,IAC1CmE,EAAQ,OAASnE,GAAKoE,EAG1BnD,EAAWnB,GAAKqE,MACX,CACLjF,QAAQC,IAAI,4BACZ,IAAIgF,EAAU,GACd,IAASnE,EAAI,EAAGA,GA7dX,EA6d0BA,IAC7B,GAAS,GAALA,EAAQ,CAEVmE,EAAO,GADI,CAACE,KAAM,QAEb,CAELF,EAAQ,OAASnE,GADN,CAACqE,KAAM,IAItBpD,EAAWnB,GAAKqE,EAKpB,EAAKD,cAAc5C,IACnBA,IArfc,GAufdpC,QAAQC,IAAI,uCACZD,QAAQC,IAAI8B,GAKdsD,YAAW,WACT,EAAKzB,SAAS,CACZc,MAAO,EAAKZ,MAAMY,MAAMY,OAAOC,MAAMC,KAAK,CAAE9E,OAAQ,SAErD,OA5dS,EA+ddsE,cAAgB,SAACrF,GACfE,EAAS,GACTC,EAAc,GAEZO,MADQ,8BAAgCV,GAEvCW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAKC,OACPV,QAAQC,IAAI,iDACH,MACJ,EACI,EAET,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IAAK,CAEpC,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,GAjhBd,EAihB4BA,IAC5BD,EAAKC,EAAI,GAAKL,EAAKG,GAAG,YAAcE,GAEtCjB,EAAOe,GAAKC,EACZf,EAAYc,GAAKC,EAAKE,QAExBf,QAAQC,IAAI,mBACZD,QAAQC,IAAIJ,QArfN,EA0fd4F,QAAU,WAeR,GAdA5C,GAAyB,GAEvBD,GADE,EAAKkB,MAAM4B,iBACQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,mBAEA,kBAACL,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,qBAEvB,EAAKrC,SAAS,CACZsC,cAAe,EAAKpC,MAAMoC,cAAcZ,OAAOzF,KAEjDoC,EAAeA,EAAaqD,OAAOxF,GACnC,EAAKkF,cAAc5C,IACnBA,IAAuB,GAGG,GAAtBrC,EAAYW,OACd,IAAK,IAAIE,EAAI,EAAGA,EAAIqB,EAAa,GAAGvB,OAAQE,IAC1Cb,EAAYa,GAAKqB,EAAa,GAAGrB,IA3gBzB,EAghBduF,gBAAkB,WAChB,EAAKvC,SAAU,CACbwC,sBAAsB,KAlhBZ,EAshBdC,aAAe,SAACC,GACCA,EAAEC,OAAOC,aAAeF,EAAEC,OAAOE,YAAcH,EAAEC,OAAOG,cAErE,EAAKjB,UAEPzD,EAAiBsE,EAAEC,OAAOE,WA3hBd,EA8hBdE,WAAa,WACX3G,QAAQC,IAAIiC,IACZlC,QAAQC,IAAIkC,KAhiBA,EAmiBdyE,YAAc,SAACC,GACb,EAAKtD,OAAOC,KAAK,eAAgBqD,IApiBrB,EAuiBdC,kBAAoB,WAElB,GAAI3E,GAAiB,CAGnB,IAAI2B,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIiD,EAAU,GAEZA,EADEC,MAAM9E,GAAS,GAAG,IACV,MAEA,QAIZL,EAAaX,KAAK,CAAC,YAAagB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI6E,EAAS7E,GAAS,GAAG,GAAK,EAAGnC,EAAYmC,GAAS,GAAG,IAAK4B,IAE1H9D,QAAQC,IAAI,oEAAqEiC,IACjF,EAAKuB,uBAAuBvB,GAAS,GAAG,GAAIA,GAAS,GAAG,IAExDY,GAAgBE,KAAO,EAAKc,MAAMmD,UAElC,IAAIpG,EAAO,GACPqG,EAAUC,SAASjF,GAAS,GAAG,IAAM,EACrCkF,EAAUD,SAASjF,GAAS,GAAG,IAAM,EACrCmF,EAAenF,GAAS,GAAG,GAC/BrB,EAAK,GAAKuG,EACVvG,EAAK,GAAKwG,EACVxG,EAAK,GAAKqG,EACVpE,GAAgBrC,KAAKS,KAAKL,GAC1Bb,QAAQC,IAAI,2BAA4B6C,IAExCX,IAAkB,OAElBnC,QAAQC,IAAI,wBA7kBF,EAilBdqH,eAAiB,SAACC,EAAWC,GAE3B,EAAKC,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAIrB,OAHK1E,GAAOkE,GAAajE,GAAOkE,IAC5BO,EAAeC,SAAW,QAEvBD,MAzlBE,EA+lBdE,eAAiB,SAAC3B,GAChB,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SAjmBlB,EAqmBdC,sBAAwB,WAItB,EAAK7E,OAAOC,KAAK,gBAHE,CACjByD,UAAW,mBAGb,EAAK1C,wBA1mBO,EA6mBd8D,iBAAmB,SAAC/B,GAChBA,EAAEgC,iBACFtI,QAAQC,IAAI,iBACZ,IAAIsI,EAAe,CACjBtB,UAAW,EAAKnD,MAAMmD,WAExB,EAAK1D,OAAOC,KAAK,gBAAiB+E,GAClC,EAAKhE,wBApnBK,EAunBdiE,iBAAmB,SAAClC,GAChBA,EAAEgC,iBACFrG,EAAaK,IAAYC,IAAcC,GACvC,EAAKsB,MAAMoC,cAAc5D,IAAYC,IAAcC,GAGnDF,IAAc,EACdC,IAAc,EACdC,IAAkB,EAClBC,GAAmB,GACnB,EAAK0B,uBAjoBK,EAooBd8B,kBAAoB,WAClBnD,GAAgBrC,KAAO,GACvB,EAAKmD,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,oBAzoBT,EA6oBdyC,mBAAqB,WAEjB,GADAzI,QAAQC,IAAI,2BAA4B6C,IACpCA,GAAgBrC,KAAKC,OAAS,EAAG,CAEnC,EAAKkG,YAAY9D,IAEjB,IAAM4F,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACjG,sBAExBzC,MAAM,2BAA4BqI,KAxpB1B,EA4pBd1C,gBAAkB,WAChBX,YAAW,WACT,EAAKoD,uBACJ,KACH,EAAK7E,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,qBAIrB,EAAK1C,OAAOC,KAAK,uBAvqBL,EA0qBdwF,aAAe,SAAC1C,EAAG2C,GAGjB,IAAInF,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIoF,EAAiBC,KAAKC,MAAQ,IAAQtH,EAE1C,GADAA,EAAiBqH,KAAKC,MAAQ,IAC1BF,EAAgB,EAGlB,GAAIrH,EAAanB,OAAS,GAAiD,QAA5CmB,EAAaA,EAAanB,OAAS,GAAG,GAAc,CACjF,IAAI2I,EAAiBxH,EAAaA,EAAanB,OAAS,GAAG,GAC3DmB,EAAayH,MACbzH,EAAaX,KAAK,CAAC,OAAQiG,SAAS+B,GAAiBG,EAAgB,KAAM,KAAM,KAAM,KAAMvF,SAE7FjC,EAAaX,KAAK,CAAC,OAAQiG,SAAS+B,GAAgB,KAAM,KAAM,KAAM,KAAMpF,IAKhF,GAAIpC,EAAeC,eAAgB,CAG7BE,EAAanB,OAAS,GAAiD,QAA5CmB,EAAaA,EAAanB,OAAS,GAAG,IACnEmB,EAAayH,MAIf,IAAK,IAAI1I,EAAI,EAAGA,EAAIc,EAAeE,QAAQlB,OAAQE,IAAK,CACtD,IAAI2I,EAAqB7H,EAAeE,QAAQhB,GAAG,GAC/C4I,EAA0B9H,EAAeE,QAAQhB,GAAG,GACpD6I,EAAe/H,EAAeE,QAAQhB,GAAG,GAC7CiB,EAAaX,KAAK,CAACqI,EAAoBE,EAAcD,EAAyB,KAAM,KAAM,KAAM1F,IAIlGpC,EAAeE,QAAQlB,OAAS,EAChCgB,EAAeC,gBAAiB,EAIlC,GAAmB,UAAfsH,EAAyB,CAE3B,IAAIS,EAAc1H,EAAiBsE,EAAEC,OAAOE,UACxCkD,EAAgB9H,EAAanB,OAGjC,GAAIgJ,EAAc,EAGhB,GAAIC,GAAiB,GAA4C,gBAAvC9H,EAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GA7wBC,EA6wB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EA/wBR,EA+wByBA,IAC7B,GAA+C,gBAA3CiB,EAAa8H,EAAgB,EAAI/I,GAAG,GAAsB,CAC5DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EAvxBV,EAuxB2BA,IAC7BiB,EAAayH,MAEjBzH,EAAaX,KAAK,CAAC,cAAe,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAIhEjC,EAAaX,KAAK,CAAC,cAAe,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAKlEjC,EAAaX,KAAK,CAAC,cAAe,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAG7D,GAAI4F,EAAc,EAGvB,GAAIC,GAAiB,GAA4C,kBAAvC9H,EAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GA9yBC,EA8yB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EAhzBR,EAgzByBA,IAC7B,GAA+C,kBAA3CiB,EAAa8H,EAAgB,EAAI/I,GAAG,GAAwB,CAC9DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EAxzBV,EAwzB2BA,IAC7BiB,EAAayH,MAEjBzH,EAAaX,KAAK,CAAC,gBAAiB,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAIlEjC,EAAaX,KAAK,CAAC,gBAAiB,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAKpEjC,EAAaX,KAAK,CAAC,gBAAiB,KAAM,KAAM,KAAM,KAAM,KAAM4C,IAGtE,EAAKuC,aAAaC,OAII,SAAf2C,GAEH5G,IAAqB,EAAKyB,MAAM4B,mBAG9B/C,GAAW,EACbd,EAAaX,KAAK,CAAC,WAAYwB,GAAU,KAAM,KAAM,KAAM,KAAMoB,IAI1DpB,GAAW,EAClBb,EAAaX,KAAK,CAAC,WAAYyB,GAAU,KAAM,KAAM,KAAM,KAAMmB,IAKjEjC,EAAaX,KAAK,CAAC+H,EAAavG,GAAUC,GAAU,KAAMD,GAAW,EAAG3C,EAAY4C,IAAWmB,IAEjGzB,IAAoB,GAEtB,EAAKyE,qBAIiB,aAAfmC,IAEH9G,KAEW,SAATmE,EAAEuD,IACJhI,EAAaX,KAAK,CAAC,iBAAkBgB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAMA,GAAS,GAAG,GAAK,EAAGnC,EAAYmC,GAAS,GAAG,IAAK4B,IAI5G,OAATwC,EAAEuD,IACThI,EAAaX,KAAK,CAAC,eAAgBgB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAMA,GAAS,GAAG,GAAK,EAAGnC,EAAYmC,GAAS,GAAG,IAAK4B,IAK1HjC,EAAaX,KAAK,CAAC,WAAYgB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAMA,GAAS,GAAG,GAAK,EAAGnC,EAAYmC,GAAS,GAAG,IAAK4B,KAG1H,EAAKgD,qBAEP9G,QAAQC,IAAI4B,IA/0BA,EAk1BdiI,oBAAsB,WACpBjI,EAAaX,KAAK,CAAC,oBAAqB,KAAM,KAAM,KAAM,KAAM,KAAM,QACtE,IAAI6I,EAAiB,CACnBlI,aAAcA,GAGV6G,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACgB,oBAExB1J,MAAM,+BAAgCqI,IA31BtC,EAAKtD,GAAK,MACV,EAAKqC,kBAAoBuC,IAAMC,YAC/B,EAAKnG,MAAQ,CACXD,WAAW,EACXgB,KAAM,GACNqF,KAAM,GACNC,MAAO,GACPzF,MAAOa,MAAMC,KAAK,CAAE9E,OAAQ,IAC5BoE,SAAS,EACTC,4BAA4B,EAG5BqF,eAAe,EACfC,YAAa9E,MAAMC,KAAK,CAAE9E,OAAQ,IAClC4J,mCAAmC,EAEnClE,sBAAsB,EACtBmE,iBAAkB,UAElBrE,cAAe,GACfsE,mBAAmB,EAEnBC,WAAY,mBACZC,MAAM,GACNC,gBAAiB,GAEjBnG,sBAAsB,EACtByC,UAAW,GAEX2D,aAAc,iCACdC,QAAS,GACTvG,mBAAmB,EAEnBF,qBAAqB,EAErBsB,kBAAkB,EAClBxB,wBAAwB,EACxBF,2BAA2B,GAG7B,EAAKT,OAASuH,IAAG,kBAEjB,EAAKvH,OAAOwH,GAAG,mBAAmB,SAAStK,GACzCuK,EAAWvK,MAGb,EAAK8C,OAAOwH,GAAG,cAAc,SAAS3F,GACpC6F,EAAU7F,MAGZ,EAAK7B,OAAOwH,GAAG,yBAAyB,SAASG,GAC/CjH,EAAuBiH,MAGzB,EAAK3H,OAAOwH,GAAG,yBAAyB,SAASI,GAC/C,IAAI9H,EAAM8H,EAAmB9H,IACzBC,EAAM6H,EAAmB7H,IAE7B8H,EAAoB/H,EAAKC,MAG3B,EAAKC,OAAOwH,GAAG,4BAA4B,SAASM,GAClD,IAAIhI,EAAMgI,EAAsBhI,IAC5BC,EAAM+H,EAAsB/H,IAEhCS,EAA0BV,EAAKC,MAGjC,EAAKC,OAAOwH,GAAG,4BAA4B,SAASO,GAClD,IAAIjI,EAAMiI,EAAsBjI,IAC5BC,EAAMgI,EAAsBhI,IACvBgI,EAAsBlG,KAEpBnC,IACTsI,EAAuBlI,EAAKC,MAIhC,EAAKC,OAAOwH,GAAG,uBAAuB,SAAStK,GAC7C+K,EAAoB/K,MAGtB,EAAK8C,OAAOwH,GAAG,gBAAgB,SAAStK,GACtCgL,EAAWhL,MAGb,EAAK8C,OAAOwH,GAAG,uBAAuB,SAASW,GAC7CC,EAAmBD,MAGrB,EAAKnI,OAAOwH,GAAG,uBAAuB,SAASa,GAC7CC,EAAoBD,MAGtB,IAAMC,EAAsB,SAAAD,GAC1B,EAAKhI,SAAS,CACZgH,aAAcgB,EAAgBE,YAC9BjB,QAASe,EAAgBf,WAIvBc,EAAqB,SAAAD,GAEzB,IAAIK,EAAaL,EAAmBK,WAChCC,EAAaN,EAAmBM,WAEpChM,QAAQC,IAAI,sBAAuB8L,GAEnC,IAAK,IAAInL,EAAI,EAAGA,EAAImL,EAAWrL,OAAQE,IAAK,CAC1C,IAAIqL,EAAWF,EAAWnL,GAC1B,GAAIqL,EAAS,GAAKhK,EAAavB,OAAQ,CAErC,IAAIwL,EAAY,EAAKzE,kBAAkBC,QAAQC,YAAYwE,cAAcF,EAAS,GAAIA,EAAS,IAG/F,GAAoB,KAAhBC,EAAU,GAAW,CACvB,IAAIE,EAAWF,EAAUG,UAAU,GACnC,EAAK5E,kBAAkBC,QAAQC,YAAY2E,cAAcL,EAAS,GAAIA,EAAS,GAAIG,GAGpE,SAAbF,GAAsC,GAAdF,IAC1B/J,GAAagK,EAAS,GAAIA,EAAS,KAAM,EAAKnI,MAAMoC,eAAc+F,EAAS,GAAIA,EAAS,OAI9F3E,KAGI2D,EAAY,SAAA7F,GAChBnC,GAAYmC,GAGRqG,EAAa,SAAAhL,GACjB,EAAKmD,SAAS,CACZiH,QAASpK,EAAKoK,UAEhBW,EAAoB/K,EAAK8L,gBAGrBjF,EAAiB,WACrBtH,QAAQC,IAAI,2BACZ,EAAKwH,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAIrB,OAHgC,OAA3B9F,EAAaoB,GAAKC,IAA4C,SAA1BrB,EAAaoB,GAAKC,IAAwD,MAArCrB,EAAaoB,GAAKC,GAAKkJ,OAAO,KACxGzE,EAAeC,SAAW,QAEvBD,MAKNqD,EAAsB,SAAC/H,EAAKC,GAChC,GAAID,EAAMpB,EAAavB,OAAQ,CAE7B,IAAIwL,EAAY,EAAKzE,kBAAkBC,QAAQC,YAAYwE,cAAc9I,EAAKC,GAG9E,GAA4B,MAAxB4I,EAAUM,OAAO,GACnB,OAEA,IAAIJ,EAAW,IAAMF,EACrB,EAAKzE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAAK8I,GAErE9E,MAIEiE,EAAyB,SAAClI,EAAKC,GACnC,GAAID,EAAMpB,EAAavB,OAAQ,CAC7BV,QAAQC,IAAIoD,GACZrD,QAAQC,IAAIqD,GAEZ,EAAKmE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAD9C,SAEhBgE,MAIErD,EAAyB,SAAAxD,GAC7B,EAAKmD,SAAS,CACZM,wBAAyB,EAAKJ,MAAMI,0BAIlCH,EAA4B,SAAAtD,GAChC,EAAKmD,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAIrCwH,EAAsB,SAAA/K,GAC1B,EAAKmD,SAAS,CACZ8G,MAAOjK,IAGT,IADA,IAAIgM,EAAgB,qBACX7L,EAAI,EAAGA,EAAI,EAAKkD,MAAM4G,MAAMhK,OAAQE,IACvCA,GAAK,EAAKkD,MAAM4G,MAAMhK,OAAS,EACjC+L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAElC6L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAAK,KAG3C,EAAKgD,SAAS,CACZ+G,gBAAiB8B,KAIfzB,EAAa,SAAAvK,GAGf,IADA,IAAIiM,EAAejM,EAAKA,KACfkM,EAAI,EAAGA,EAAID,EAAahM,OAAQiM,IAAK,CAE5C,IAAI7L,EAAI4L,EAAaC,GAAG,GAAK,EACzBxE,EAAQuE,EAAaC,GAAG,GACxB/L,EAAI8L,EAAaC,GAAG,GAAK,EAGzB/L,EAAIqB,EAAavB,QACnBuB,EAAarB,GAAGE,GAAKqH,EACrB,EAAKrE,MAAMoC,cAActF,GAAGE,GAAKqH,GAIzBvH,EAAI,EAAKwB,KACjBxB,IACId,EAAYc,EAxQR,GAwQ4BwB,IAAqBtB,IAAMqH,IAC7DrI,EAAYc,EAzQN,GAyQ0BwB,IAAqBtB,GAAKqH,EAC1DtI,EAAOe,EA1QD,GA0QqBwB,IAAqBtB,GAAKqH,IAI3DnI,QAAQC,IAAI,iCAAkCH,GAC9C,EAAK8D,SAAS,CACZ6G,WAAYhK,EAAKsC,eA3OX,OA+OZ,EAAKwB,qBAAuB,EAAKA,qBAAqBqI,OACtD,EAAKvI,kBAAoB,EAAKA,kBAAkBuI,OAChD,EAAKzI,oBAAsB,EAAKA,oBAAoByI,OACpD,EAAKjJ,aAAe,EAAKA,aAAaiJ,OACtC,EAAK3I,uBAAyB,EAAKA,uBAAuB2I,OAC1D,EAAK7I,0BAA4B,EAAKA,0BAA0B6I,OApPpD,E,0KAyPZ9K,EAAgBqH,KAAKC,MAAQ,IAE7BvG,GAAyB,kBAAC8C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS8G,KAAKpH,SAA3E,mBAEzBoH,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GAClE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGxED,EACAC,KAKduJ,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG1H3K,GAAWW,EACXV,GAAWsK,EAEX5K,IAAoB,KAGtBwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,EAAeC,gBAAiB,EAChCD,EAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,EAAeC,gBAAiB,EAChCD,EAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,EAAeC,gBAAiB,EAChCD,EAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,EAAeC,gBAAiB,EAChCD,EAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,EAAeC,gBAAiB,EAChCD,EAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAMjDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,EAAeC,gBAAiB,EAChCD,EAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAMjD8N,SAASC,iBAAiB,UAAWb,KAAKc,aAAa,GAEvD9N,EAAS,GACTC,EAAc,GACJ,+BACRO,MADQ,gCAEPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAKC,OACPV,QAAQC,IAAI,iDACH,MACJ,EACI,EAET,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IAAK,CAEpC,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,GA1Xd,EA0X4BA,IAC5BD,EAAKC,EAAI,GAAKL,EAAKG,GAAG,YAAcE,GAEtCjB,EAAOe,GAAKC,EACZf,EAAYc,GAAKC,EAAKE,QAExBf,QAAQC,IAAI,mBACZD,QAAQC,IAAIJ,O,oJAwBlBgN,KAAKtJ,OAAOyI,e,+BA0eJ,IAAD,SACP,OAAIa,KAAK/I,MAAMsC,qBACN,kBAAC,IAAD,CAAUwH,GAAIf,KAAK/I,MAAMyG,mBAGhC,yBAAKxE,QAAS,SAAAO,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,UAAUuH,QAAS,SAAAvH,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,cAAcT,UAAU,OAC3G,4BAAQmH,IAAI,4DACZ,0BAAMc,KAAK,2DAA2DC,IAAI,aAAaC,MAAM,WAC5F,kBAACC,EAAA,EAAD,CAAWpI,UAAU,eAEpB,6BACA,kBAACoI,EAAA,EAAD,KAEM,kBAACC,EAAA,EAAD,CAAQpI,MAAM,QAAQqI,OAAK,GACzB,kBAACC,EAAA,EAAD,CAAerI,QAAS8G,KAAKlJ,aAAckC,UAAU,SACrD,kBAACwI,EAAA,EAAD,CAAUC,OAAQzB,KAAK/I,MAAMD,UAAW0K,QAAM,GAC5C,kBAACC,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASb,KAAK,WAAd,mBAKN,wBAAIjI,UAAU,aAAd,MAA8BgH,KAAK/I,MAAMmD,UAAzC,iCACA,uBAAGpB,UAAU,QAAb,4FACA,wBAAIA,UAAU,SACd,2BAAIgH,KAAK/I,MAAM6G,iBACf,uBAAG9E,UAAU,QACX,kBAACF,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKxI,mBAAxE,gBADF,mBAGGxB,GAHH,mBAKGD,GALH,mBAx4BgB,GAw4BhB,mBASE,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK/C,qBAAxE,wBAEF,2BAAI+C,KAAK/I,MAAM8G,cAGf,kBAACgE,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMU,sBAClC,kBAACqK,EAAA,EAAD,sFACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnC,KAAKxE,kBACnB,kBAAC4G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,uBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOnH,KAAK,YAAY9C,GAAG,YAAYkK,SAAU,SAAAhJ,GAAC,OAAI,EAAK2B,eAAe3B,OAExF,kBAACX,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBwJ,KAAK,UAAxE,WALF,IAKsG,IACpG,kBAAC1J,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBE,QAAS8G,KAAKzE,uBAAjF,oBANF,IAMqI,OAKzI,kBAACwG,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMQ,kBAAmBiL,OAAQ1C,KAAKxI,mBAClE,kBAACwK,EAAA,EAAD,CAAaU,OAAQ1C,KAAKxI,mBAA1B,qBACA,kBAACyK,EAAA,EAAD,KACE,kBAACU,EAAA,EAAD,CAAOC,SAAO,EAAC5J,UAAU,iBACvB,+BACKgH,KAAK/I,MAAM+G,QAAQ6E,KAAI,SAAAC,GAAI,OAC1B,wBAAI9F,IAAO8F,GACT,4BAAKA,UAMjB,kBAACC,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBE,QAAS8G,KAAKxI,mBAAjF,SADF,IACsH,MAIxH,kBAACuK,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMM,oBAAqBmL,OAAQ1C,KAAK1I,qBACpE,kBAAC0K,EAAA,EAAD,CAAaU,OAAQ1C,KAAK1I,qBAA1B,kDACA,kBAAC2K,EAAA,EAAD,KACGrM,IAEH,kBAACmN,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,yBAAyBE,QAAS8G,KAAKrE,iBAAkBqH,OAAK,GAA1G,2BADF,IAC+I,IAC7I,kBAAClK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,YAAYD,UAAU,yBAAyBE,QAAS8G,KAAK1I,oBAAqB0L,OAAK,GAA/G,6BAIJ,kBAACjB,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMI,uBAAwBqL,OAAQ1C,KAAK5I,wBACvE,kBAAC4K,EAAA,EAAD,CAAaU,OAAQ1C,KAAK5I,wBAA1B,2BACA,kBAAC6K,EAAA,EAAD,wEAGA,kBAACc,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,yBAAyBE,QAAS8G,KAAK5I,uBAAwB4L,OAAK,GAAhH,UADF,IACoI,MAItI,kBAACjB,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAME,0BAA2BuL,OAAQ1C,KAAK9I,2BAC1E,kBAAC8K,EAAA,EAAD,CAAaU,OAAQ1C,KAAK9I,2BAA1B,2BACA,kBAAC+K,EAAA,EAAD,sEAGA,kBAACc,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,yBAAyBE,QAAS8G,KAAK9I,0BAA2B8L,OAAK,GAAnH,UADF,IACuI,QAOnJ,6BAtGF,+BAyGE,yBAAKzK,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACnF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAMwB,EAAc+N,IAAKnD,KAAKpF,mBAArF,mBAA4GoF,KAAKzH,IAAjH,4BACc,GADd,4BAEc,GAFd,sBAGQ,QAHR,uBAIS,OAJT,0BAKY,QALZ,2BAMa,MANb,6BAOe,GAPf,0BAQY,GARZ,0BASayH,KAAK/I,MAAM4B,kBATxB,U,GAj9BUuK,aAm+BL/M,M,UDjiCT1B,GAAYC,EAAQ,KACtByO,GAAO,IAAI1O,GAIwE2O,GAAa,GAEhG1P,GAAO,GAAIsB,GAAa,GAAIqO,GAAU,GAAIvQ,GAAS,GAAIwQ,GAA+B,GACtFC,IAAoB,EASpBC,GAA6B,GAC7BC,GAAe,GAEfpO,GAAsB,GACtBqO,GAAW,EACTC,GAAQ,CACZC,OAAQ,KACRC,MAfc,KAgBdC,OAAQ,mBACRC,OAAQ,EACRC,QAAS,GAWLC,G,kDAEJ,aAAe,IAAD,8BACZ,gBAwDFC,qBAAuB,WACrB,EAAKrN,SAAS,CACZsN,sBAAuB,EAAKpN,MAAMoN,wBA3DxB,EA+DdC,wBAA0B,WACxB,EAAKvN,SAAS,CACZwN,yBAA0B,EAAKtN,MAAMsN,2BAjE3B,EAqEdC,uBAAyB,WACvB,EAAKzN,SAAS,CACZ0N,wBAAyB,EAAKxN,MAAMwN,0BAvE1B,EA2EdC,iBAAmB,WACjB,EAAK3N,SAAS,CACZ4N,kBAAmB,EAAK1N,MAAM0N,oBA7EpB,EAkFdC,qBAAuB,WACrB,EAAK7N,SAAS,CACZ8N,sBAAuB,EAAK5N,MAAM4N,wBApFxB,EAwFdC,2BAA6B,WAC3B,EAAK/N,SAAS,CACZgO,4BAA6B,EAAK9N,MAAM8N,8BA1F9B,EA8FdC,uBAAyB,WACvB,EAAKjO,SAAS,CACZkO,wBAAyB,EAAKhO,MAAMgO,uBACpCF,4BAA6B,EAAK9N,MAAM8N,8BAjG9B,EAqGdG,wBAA0B,WACxB,EAAKnO,SAAS,CACZoO,yBAA0B,EAAKlO,MAAMkO,2BAvG3B,EA4GdC,yBAA2B,WACzB,EAAKC,kBAEkC,GAAnC,EAAKpO,MAAM4N,sBACb,EAAKD,uBAIkC,GAArC,EAAK3N,MAAMqO,wBACb,EAAKC,yBAImC,GAAtC,EAAKtO,MAAMkO,yBACb,EAAKD,0BAIkC,GAArC,EAAKjO,MAAMgO,wBACb,EAAKD,0BA/HK,EAmIdQ,YAAc,WACZ,EAAKzO,SAAS,CACZuO,wBAAwB,EACxBL,wBAAwB,EACxBE,yBAAyB,EACzBJ,4BAA4B,EAC5BF,sBAAsB,KAzIZ,EA6IdY,2BAA6B,SAACC,GAE5BvS,QAAQC,IAAI,iCAAkCsS,GAE5ClR,EADyB,GAAvBkR,EAAa7R,OACK,kBAACuN,EAAA,EAAD,KACI,0DAKJ,kBAACA,EAAA,EAAD,KACE,4DAGC,6BACG,kBAAC,IAAD,CAAaxN,KAAM8R,MAI/C,EAAKH,0BAhKO,EAmKdA,uBAAyB,WACvB,EAAKxO,SAAS,CACZuO,wBAAyB,EAAKrO,MAAMqO,0BArK1B,EAyKdK,wBAA0B,SAAClM,GACzB,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SA3KlB,EA+KdsK,wBA/Kc,uCA+KY,WAAOnM,GAAP,mBAAAoM,EAAA,sDACxBpM,EAAEgC,iBAEoC,IAAlC,EAAKxE,MAAM6O,oBACb,EAAKpB,oBAEL,EAAKQ,0BAGDa,GAAO,EACgC,KAAvC,EAAK9O,MAAM+O,0BACbD,GAAO,GAELE,EAAc,CAChBC,UAAW,EAAKjP,MAAM+O,wBACtBlT,MAAO,EAAKmE,MAAM6O,oBAClBC,KAAMA,GAGFlK,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAC+J,iBAExBzS,MAAM,mCAAoCqI,GACzCpI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAKC,OAAc,CACrBV,QAAQC,IAAI,mDAEZ,EAAKqS,2BADc,QAEd,CAGL,IAAIC,EAAe,GACnBlR,EAAoB,GACpB,IAAK,IAAIT,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IAAK,CAEpC,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAI2P,GAAU3P,IAC5BD,EAAKC,EAAI,GAAK,CAAEqH,MAAO1H,EAAKG,GAAG,YAAcE,IAE/CyR,EAAa3R,GAAKC,EAEpB,EAAKyR,2BAA2BC,QA3Cd,2CA/KZ,wDAgOdS,kBAhOc,uCAgOM,WAAOvS,GAAP,yBAAAiS,EAAA,sDAKlB,IAHA1S,QAAQC,IAAI,+CACZD,QAAQC,IAAIQ,GACRwS,EAAqB,GAChBrS,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IAAK,CAEpC,IADIC,EAAO,GACFC,EAAI,EAAGA,GAAK2P,GAAU3P,IAC7BD,EAAKC,EAAI,GAAKL,EAAKG,GAAG,YAAcE,GAEtCmS,EAAmBrS,GAAKC,EAVR,OAYlBb,QAAQC,IAAI,0BACZD,QAAQC,IAAIgT,GACRC,EAA4B,CAC9BC,OAAQF,EACRxC,SAAUA,IAGN2C,EAAwB,CAC5BzK,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACmK,+BAtBN,UAwBZ7S,MAAM,kCAAmC+S,GAxB7B,QA2Bd3S,EAAKC,OAAS,KAChB,EAAK2S,iBAAiB9C,IACtBA,IA3Rc,IA+RhB,EAAK3M,SAAS,CACZwG,eAAe,EACfC,YAAa9E,MAAMC,KAAK,CAAE9E,OAAQ,MAEpC,EAAK4R,6BArCa,4CAhON,wDAwQdgB,yBAA2B,SAAChN,GAE1B,GADAA,EAAEgC,iBACyC,IAAvC,EAAKxE,MAAMyP,0BAAyE,IAAvC,EAAKzP,MAAM0P,yBAC1D,EAAKjC,uBACA,CAEL,IAAIkC,EAAYC,EADhB,EAAK7B,yBAIH4B,EADyC,IAAvC,EAAK3P,MAAMyP,yBACAI,OAAOC,UAEPD,OAAO,EAAK7P,MAAMyP,0BAI/BG,EADyC,IAAvC,EAAK5P,MAAM0P,yBACAG,OAAOE,UAEPF,OAAO,EAAK7P,MAAM0P,0BAGjC,IAAIZ,GAAO,EAC+B,KAAtC,EAAK9O,MAAMgQ,yBACblB,GAAO,GAIT,IAAIE,EAAc,CAChBC,UAAW,EAAKjP,MAAMgQ,uBACtBC,YAAaN,EACbO,YAAaN,EACbd,KAAMA,GAGFlK,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAC+J,iBAExBzS,MAAM,kCAAmCqI,GACxCpI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAKC,OAAc,CACrBV,QAAQC,IAAI,kDAEZ,EAAKqS,2BADc,QAEd,CAGL,IAAIC,EAAe,GACnBlR,EAAoB,GACpB,IAAK,IAAIT,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IAAK,CAEpC,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAAI2P,GAAU3P,IAC5BD,EAAKC,EAAI,GAAK,CAAEqH,MAAO1H,EAAKG,GAAG,YAAcE,IAE/CyR,EAAa3R,GAAKC,EAEpB,EAAKyR,2BAA2BC,SAjU1B,EAwUd0B,aAAe,WACC,kBAAChG,EAAA,EAAD,KACI,kBAACiG,GAAA,EAAD,qCAGA,kBAAC,IAAD,CAAazT,KAAMA,MAGrC,EAAKwQ,wBAhVO,EAmVdkD,YAnVc,uCAmVA,WAAOC,GAAP,eAAA1B,EAAA,6DACR2B,EAAUD,EAAM7N,OAAO+N,MAAM,GACjCtU,QAAQC,IAAI,gBACZD,QAAQC,IAAI,yBAA4BqQ,IACxCtQ,QAAQC,IAAIoU,GACZ,EAAKzQ,SAAS,CACZkB,SAAS,EACTC,4BAA4B,EAC5BL,MAAOa,MAAMC,KAAK,CAAE9E,OAAQ,MAE9B0B,GAAsB,GACR,GAGVkO,GACFA,IAAoB,EAEpB,EAAKiE,gBAGPrE,GAAO,IAAI1O,GApBC,UAuBNgT,wBAAcH,GAAS,SAACI,EAAKC,GAC9BD,EACDzU,QAAQC,IAAIwU,GAGZ,EAAK7Q,SAAS,CACZsG,KAAMwK,EAAKxK,KACXrF,KAAM6P,EAAK7P,UA9BL,WAqCqB,IAA3B,EAAKf,MAAMe,KAAKnE,OArCV,6EAyCZ,EAAK+Q,uBAzCO,4CAnVA,wDA+XdS,gBA/Xc,sBA+XI,8DAAAQ,EAAA,yDACZiC,EAAW,EAAK7Q,MAAMe,KACtB+P,EAAW,EAAK9Q,MAAMoG,KACH,GAAnByK,EAASjU,QAAkC,GAAnBkU,EAASlU,OAHrB,iBAQd,IAJAV,QAAQC,IAAI,WAAY0U,GACxB3U,QAAQC,IAAI,SAAU2U,GAGbhU,EAAI,EAAGA,EAAIgU,EAASlU,OAAQE,IACnCuP,GAAWvP,GAAK,CAAEuH,MAAOyM,EAAShU,GAAGsH,MAMvC,IAJAlI,QAAQC,IAAI,uBACZD,QAAQC,IAAIkQ,IAGHvP,EAAI,EAAGA,GAAKgU,EAASlU,OAAQE,IAElCwP,GAAQxP,GADD,GAALA,EACW,CAAEiU,UAAW,KAAMjE,OA/a1B,KA+a8CgE,EAASlU,OAAS,IAAMkU,EAASlU,OAAS,IAEjF,CAAEmU,UAAW,OAASjU,EAAGgQ,OAjbhC,KAiboDgE,EAASlU,OAAS,IAAMkU,EAASlU,OAAS,IAQxG,IALAV,QAAQC,IAAI,qBACZD,QAAQC,IAAImQ,IAIHxP,EAAI,EAAGA,EAxbF,GAwbqBA,IACjC,GAAS,GAALA,EAAQ,CAEV,IADIqE,EAAU,GACLnE,EAAI,EAAGA,GAAK8T,EAASlU,OAAQI,IAC3B,GAALA,GACEoE,EAAO,CAACC,KAAM,MAClBF,EAAO,GAASC,IAEZA,EAAO,CAACC,KAAM,YAAcrE,GAChCmE,EAAQ,OAASnE,GAAKoE,GAG1BnD,GAAWnB,GAAKqE,OACX,GAAIrE,EAAI+T,EAASjU,OAAQ,CAE9B,IADIuE,EAAU,GACLnE,EAAI,EAAGA,GAAK8T,EAASlU,OAAQI,IAC3B,GAALA,GACEoE,EAAO,CAACC,KAAMvE,GAClBqE,EAAO,GAASC,IAEZA,EAAO,CAACC,KAAMwP,EAAS/T,EAAI,GAAGE,EAAI,IACtCmE,EAAQ,OAASnE,GAAKoE,GAG1BnD,GAAWnB,GAAKqE,MACX,CAEL,IADIA,EAAU,GACLnE,EAAI,EAAGA,GAAK8T,EAASlU,OAAQI,IAC3B,GAALA,GACEoE,EAAO,CAACC,KAAM,IAClBF,EAAO,GAASC,IAEZA,EAAO,CAACC,KAAM,IAClBF,EAAQ,OAASnE,GAAKoE,GAG1BnD,GAAWnB,GAAKqE,EAUpB,IANAjF,QAAQC,IAAI,uCACZD,QAAQC,IAAI8B,IAGZtB,GAAO,GACPY,EAAoB,GACXT,EAAI,EAAGA,EAAI+T,EAASjU,OAAQE,IAAK,CAExC,IADIC,EAAO,GACFC,EAAI,EAAGA,EAAI8T,EAASlU,OAAQI,IACnCD,EAAKC,GAAK,CAAEqH,MAAOwM,EAAS/T,GAAGE,IAEjCL,GAAKG,GAAKC,EA9EE,OAkFdb,QAAQC,IAAI,8BACZwQ,GAAWmE,EAASlU,OAChBoU,EAAM,0BAA4BnB,OAAOlD,IApF/B,UAqFRpQ,MAAMyU,GArFE,eAwFVhC,EAAc,CAChBK,OAAQwB,EACRlE,SAAUmE,EAASlU,QAGfgI,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAC+J,iBAhGV,UAkGRzS,MAAM,2BAA4BqI,GAlG1B,aAqGViM,EAASjU,OAAS,IArGR,iBAuGHE,EAAIwB,GAvGD,aAuGsBxB,EAAI+T,EAASjU,QAvGnC,oBAwGNE,IAAMwB,GArgBA,GA6ZA,qDA4GV,IADI6C,EAAU,GACLnE,EAAI,EAAGA,GAAK8T,EAASlU,OAAQI,IAC3B,GAALA,EAEFmE,EAAO,GAASrE,EAAI,EAGpBqE,EAAQ,YAAcnE,GAAK6T,EAAS/T,EAAI,GAAGE,EAAI,GAGnDjB,GAAOe,EAAIwB,IAAuB6C,EArHxB,QAuG2CrE,IAvG3C,wBAuHZwB,IAphBY,GAqhBZpC,QAAQC,IAAI,iCAxHA,QA6HU,GAApBiQ,GAAK6E,OAAM,KACbxT,EAAsB,kBAACoE,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,sBAAsBC,MAAM,UAAUC,QAAS,EAAK8L,wBAAhF,yBACtBvQ,EAAuB,kBAACqE,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,uBAAuBC,MAAM,UAAUC,QAAS,EAAKgM,wBAAyB1C,KAAK,UAA/G,0BACA,kBAAC1J,EAAA,EAAD,CAAQG,MAAM,UAAUC,QAAS,EAAKoL,yBAAtC,wBAKvBnR,QAAQC,IAAI,uBAAwB0U,EAAS,GAAG,KAGlD,EAAK/Q,SAAS,CACZgO,4BAA2B,IAzIf,wBA6Id5R,QAAQC,IAAI,QACE,mBA9IA,4CA/XJ,EAihBd+U,cAAgB,SAACvE,GACfzQ,QAAQC,IAAI,8BAEZI,MADU,0BAA4BoQ,IAnhB1B,EAuhBd8D,cAAgB,SAACjO,GACftG,QAAQC,IAAI,8BACZI,MAAM,2BAzhBM,EA4hBd4U,kBAAoB,WAClBjV,QAAQC,IAAI,gCACZI,MAAM,kCA9hBM,EAiiBdoE,cAAgB,WACd,GAAI,EAAKX,MAAMY,MAAMhE,QAAUiE,KAAKC,KAAK,EAAKd,MAAMe,KAAKnE,OAAS,IAGhE,OAFA,EAAKkD,SAAS,CAAEkB,SAAS,SACzB9E,QAAQC,IAAI,gCAAkC0E,KAAKC,KAAK,EAAKd,MAAMe,KAAKnE,OAAS,KAKnF,GAA6C,GAAzC,EAAKoD,MAAMiB,2BACb,EAAKnB,SAAS,CACZmB,4BAA4B,IAIT,GAAjBlF,GAAOa,QACT,EAAKsE,cA9kBO,QAglBT,CAGL,IAAK,IAAIpE,EAAI,EAAGA,EAnlBF,GAmlBqBA,IACjC,GAAIA,EAAIf,GAAOa,OAAQ,CAErB,IADA,IAAIuE,EAAU,GACLnE,EAAI,EAAGA,GAAK2P,GAAU3P,IAC7B,GAAS,GAALA,EAAQ,CACV,IAAIoE,EAAO,CAACC,KAAMtF,GAAOe,GAAGwE,IAC5BH,EAAO,GAASC,MACX,CACL,IAAIA,EAAO,CAACC,KAAMtF,GAAOe,GAAG,YAAcE,IAC1CmE,EAAQ,OAASnE,GAAKoE,EAG1BnD,GAAWnB,GAAKqE,MACX,CACLjF,QAAQC,IAAI,4BACZ,IAAIgF,EAAU,GACd,IAASnE,EAAI,EAAGA,GAAK2P,GAAU3P,IAC7B,GAAS,GAALA,EAAQ,CAEVmE,EAAO,GADI,CAACE,KAAM,QAEb,CAELF,EAAQ,OAASnE,GADN,CAACqE,KAAM,IAItBpD,GAAWnB,GAAKqE,EAKpB,EAAKD,cAAc5C,IACnBA,IAlnBc,GAonBdpC,QAAQC,IAAI,uCACZD,QAAQC,IAAI8B,IAKdsD,YAAW,WACT,EAAKzB,SAAS,CACZc,MAAO,EAAKZ,MAAMY,MAAMY,OAAOC,MAAMC,KAAK,CAAE9E,OAAQ,SAErD,OAhmBS,EAmmBdwU,gBAAkB,WAChB,GAAI,EAAKpR,MAAMuG,YAAY3J,QAAUiE,KAAKC,KAAKuQ,GAC7C,EAAKvR,SAAS,CAAEwG,eAAe,QADjC,CAKA,GAAoD,GAAhD,EAAKtG,MAAMwG,kCACb,EAAK1G,SAAS,CACZ0G,mCAAmC,QAEhC,CAIL,IAAK,IAAI1J,EAAI,EAAGA,EA3oBY,GA2oBqBA,IAC/C,GAAIA,EAAI4P,GAAa9P,OAAQ,CAE3B,IADA,IAAIuE,EAAU,GACLnE,EAAI,EAAGA,GAAK2P,GAAU3P,IAC7B,GAAS,GAALA,EAAQ,CACV,IAAIoE,EAAO,CAACC,KAAMqL,GAAa5P,GAAGwE,IAClCH,EAAO,GAASC,MACX,CACL,IAAIA,EAAO,CAACC,KAAMqL,GAAa5P,GAAG,YAAcE,IAChDmE,EAAQ,OAASnE,GAAKoE,EAG1BmL,GAA6BzP,GAAKqE,MAC7B,CACL,IAAIA,EAAU,GACd,IAASnE,EAAI,EAAGA,GAAK2P,GAAU3P,IAC7B,GAAS,GAALA,EAAQ,CAEVmE,EAAO,GADI,CAACE,KAAM,QAEb,CAELF,EAAQ,OAASnE,GADN,CAACqE,KAAM,IAItBkL,GAA6BzP,GAAKqE,EAKtC,EAAKoO,iBAAiB9C,IACtBA,IAzqB4B,GA2qB5BvQ,QAAQC,IAAI,6CACZD,QAAQC,IAAIoQ,IAKdhL,YAAW,WACT,EAAKzB,SAAS,CACZyG,YAAa,EAAKvG,MAAMuG,YAAY/E,OAAOC,MAAMC,KAAK,CAAE9E,OAAQ,SAEjE,OA3pBS,EA8pBd2S,iBAAmB,SAAC1T,GAClBK,QAAQC,IAAI,4BACZuQ,GAAe,GAEbnQ,MADQ,4BAA8BV,GAErCW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAKC,OACPV,QAAQC,IAAI,sDACP,CAEL,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IAC/B4P,GAAa5P,GAAKH,EAAKG,GAEzBZ,QAAQC,IAAI,0BACZD,QAAQC,IAAIuQ,SA7qBN,EAkrBdxL,cAAgB,SAACrF,GACfE,GAAS,GAEPQ,MADQ,8BAAgCV,GAEvCW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,GAAoB,IAAhBA,EAAKC,OACPV,QAAQC,IAAI,iDACH,MACJ,EACI,EAET,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAKC,OAAQE,IAC/Bf,GAAOe,GAAKH,EAAKG,GAEnBZ,QAAQC,IAAI,mBACZD,QAAQC,IAAIJ,SAlsBN,EAusBduV,eAAiB,WACf,EAAKxR,SAAU,CACbyR,mBAAmB,KAvsBrB,EAAKvR,MAAQ,CAEXe,KAAM,GACNqF,KAAM,GACNC,MAAO,GACPyH,4BAA4B,EAC5BE,wBAAwB,EACxBE,yBAAyB,EAEzBN,sBAAsB,EACtBF,kBAAkB,EAElBmB,oBAAqB,GACrBE,wBAAyB,GACzBiB,uBAAuB,GAEvBwB,gBAAgB,EAEhBnD,wBAAwB,EACxBoD,aAAc,GAEdhC,yBAA0B,GAC1BC,yBAA0B,GAE1BgC,oBAAqB,GACrBC,yBAA0B,GAC1BC,yBAAyB,GACzBtE,yBAAyB,EACzBE,wBAAwB,EAExBJ,sBAAsB,EACtBxM,MAAOa,MAAMC,KAAK,CAAE9E,OAAQ,IAC5BoE,SAAS,EACTC,4BAA4B,EAG5BqF,eAAe,EACfC,YAAa9E,MAAMC,KAAK,CAAE9E,OAAQ,IAClC4J,mCAAmC,EAEnC+K,mBAAmB,EACnBM,gBAAiB,KAGnB,EAAKhE,2BAA6B,EAAKA,2BAA2B/E,OAClE,EAAKiF,uBAAyB,EAAKA,uBAAuBjF,OAC1D,EAAKmF,wBAA0B,EAAKA,wBAAwBnF,OAC5D,EAAK6E,qBAAuB,EAAKA,qBAAqB7E,OACtD,EAAKwF,uBAAyB,EAAKA,uBAAuBxF,OAC1D,EAAK2E,iBAAmB,EAAKA,iBAAiB3E,OAC9C,EAAKuE,wBAA0B,EAAKA,wBAAwBvE,OAC5D,EAAKyE,uBAAyB,EAAKA,uBAAuBzE,OAC1D,EAAKqE,qBAAuB,EAAKA,qBAAqBrE,OAtD1C,E,qDA8sBJ,IAAD,OACP,OAAIC,KAAK/I,MAAMuR,kBACN,kBAAC,IAAD,CAAUzH,GAAIf,KAAK/I,MAAM6R,kBAKhC,yBAAK9P,UAAU,OACZ,kBAACoI,EAAA,EAAD,CAAWpI,UAAU,eAGpB,6BAGA,kBAACoI,EAAA,EAAD,KAEQ,wBAAIpI,UAAU,aAAd,gCACA,uBAAGA,UAAU,QAAb,4FACA,wBAAIA,UAAU,SACd,mEACA,uBAAGA,UAAU,QACX,2BAAOwJ,KAAK,OAAOC,SAAUzC,KAAKsH,YAAYvH,KAAKC,MAAO6D,MAAO,CAAC,QAAU,UAE5E,kBAAC/K,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,kBAAkBC,MAAM,UAAUC,QAAS8G,KAAKuI,gBAA5E,iBAHF,mBAKE,kBAACzP,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,kBAAkBC,MAAM,UAAUC,QAAS8G,KAAK0H,eAA5E,iBAEDhT,EAbT,mBAeSD,EAKD,kBAACsN,EAAA,EAAD,CAAON,OAAQzB,KAAK/I,MAAM4N,qBAAsBnC,OAAQ1C,KAAK4E,sBAC3D,kBAAC5C,EAAA,EAAD,CAAaU,OAAQ1C,KAAK4E,sBAA1B,uBACA,kBAAC3C,EAAA,EAAD,KACE,kBAACnJ,EAAA,EAAD,CAAQG,MAAM,UAAUC,QAAS8G,KAAKoF,yBAA0B5C,KAAK,SAASQ,OAAK,GAAnF,yCADF,IACsI,QAIxI,kBAACjB,EAAA,EAAD,CAAON,OAAQzB,KAAK/I,MAAMoN,qBAAsB3B,OAAQ1C,KAAKoE,sBAC3D,kBAACpC,EAAA,EAAD,CAAaU,OAAQ1C,KAAKoE,sBAA1B,uBACA,kBAACnC,EAAA,EAAD,KACE,kBAACnJ,EAAA,EAAD,CAAQG,MAAM,UAAUC,QAAS8G,KAAKoH,aAAc5E,KAAK,UAAzD,oBADF,IAC+F,QAIjG,kBAACT,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMkO,wBAAyBzC,OAAQ1C,KAAKkF,yBACxE,kBAAClD,EAAA,EAAD,CAAaU,OAAQ1C,KAAKkF,yBAA1B,wDACA,kBAACjD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnC,KAAK4F,yBACnB,kBAACxD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,uBAAX,uBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOuG,QAAQ,SAAS1N,KAAK,sBAAsB9C,GAAG,sBAAsBkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKkM,wBAAwBlM,OAEtI,kBAAC2I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,2BAAX,yDACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOuG,QAAQ,SAAS1N,KAAK,0BAA0B9C,GAAG,0BAA0BkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKkM,wBAAwBlM,OAE9I,kBAACX,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBwJ,KAAK,UAAxE,UATF,IASqG,OAKzG,kBAACT,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMgO,uBAAwBvC,OAAQ1C,KAAKgF,wBACvE,kBAAChD,EAAA,EAAD,CAAaU,OAAQ1C,KAAKgF,wBAA1B,uEACA,kBAAC/C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnC,KAAKyG,0BACnB,kBAACrE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,4BAAX,eACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOuG,QAAQ,SAAS1N,KAAK,2BAA2B9C,GAAG,2BAA2BkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKkM,wBAAwBlM,OAEhJ,kBAAC2I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,4BAAX,eACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOuG,QAAQ,SAAS1N,KAAK,2BAA2B9C,GAAG,2BAA2BkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKkM,wBAAwBlM,OAEhJ,kBAAC2I,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,0BAAX,kDACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOuG,QAAQ,SAAS1N,KAAK,yBAAyB9C,GAAG,yBAAyBkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKkM,wBAAwBlM,OAE5I,kBAACX,EAAA,EAAD,CAAQG,MAAM,UAAUD,UAAU,sBAAsBwJ,KAAK,SAASQ,OAAK,GAA3E,UAbF,IAa+F,MAGjG,kBAACD,EAAA,EAAD,iJAEwB,IAFxB,6DAMF,kBAAChB,EAAA,EAAD,CAAON,OAAQzB,KAAK/I,MAAMqO,uBAAwB5C,OAAQ1C,KAAKuF,wBAC7D,kBAACvD,EAAA,EAAD,CAAaU,OAAQ1C,KAAKuF,wBAA1B,mDAGA,kBAACtD,EAAA,EAAD,KACI,kBAACnJ,EAAA,EAAD,CAAQG,MAAM,UAAUC,QAAS8G,KAAKwF,YAAahD,KAAK,SAASQ,OAAK,GAAtE,UAIN,kBAACjB,EAAA,EAAD,CAAON,OAAQzB,KAAK/I,MAAM0N,iBAAkBjC,OAAQ1C,KAAK0E,kBACvD,kBAAC1C,EAAA,EAAD,CAAaU,OAAQ1C,KAAK0E,kBAA1B,8DAGA,kBAACzC,EAAA,EAAD,KACI,kBAACnJ,EAAA,EAAD,CAAQG,MAAM,UAAUC,QAAS8G,KAAK0E,iBAAkBlC,KAAK,SAASQ,OAAK,GAA3E,iBAMfxO,EA0BD,6BAjIF,+BAmIE,kBAAC,IAAD,CACEwU,WAAYhJ,KAAK/I,MAAMY,MAAMhE,OAC7BoV,KAAMjJ,KAAKpI,cACXK,QAAS+H,KAAK/I,MAAMgB,QACpBiR,OAAQ,0CACRC,WACE,uBAAGtF,MAAO,CAAEuF,UAAW,WACrB,0DAIHpJ,KAAK/I,MAAMY,MAAMgL,KAAI,SAAC9O,EAAGjB,GAAJ,OACpB,yBAAK+Q,MAAOA,GAAO7G,IAAKlK,GACtB,kBAAC,kBAAD,CACoBuW,UAAW,SACX9F,QAASA,GACT3P,KAAMsB,GACNoU,UAAW,e,GA32BxBlG,aAq3BNe,M,wCE54BXpR,IANQ,IADE6B,EAAQ,MAKX,IADOA,EAAQ,MAGJ,IAGlBC,GAAiB,CACnBC,gBAAgB,EAChBC,QAAS,IAGP7B,GAAc,GAEd8B,GAAe,GACfC,GAAgB,EAI0BjC,GAAS,GAAIC,GAAc,GAIrEkC,GAAiB,EACjBC,GAAe,GACfC,GAAW,GACXC,IAAkB,EAOlBE,IAAoB,EAEpBC,IAAc,EACdC,IAAc,EACdC,GAAiB,GACjBC,GAAmB,GAEnBC,IAAY,EACZC,IAAY,EAEZC,GAAqB,GAErBC,GAAyB,GAEzBC,GAAkB,CACpBrC,KAAK,GACLsC,YAAa,yBACbC,KAAM,IAGJC,GAAY,GAu5BDmT,G,kDAn5Bb,aAAe,IAAD,uBACZ,gBAmVFjT,oBAAsB,WAEpB,IAAIC,EAAsB,CACxBC,IAAKX,GACLY,IAAKX,IAEP,EAAKY,OAAOC,KAAK,sBAAuBJ,IA1V5B,EA6VdK,uBAAyB,SAAC7C,EAAGE,GAE3B,IAAI4C,EAAyB,CAC3BL,IAAKzC,EACL0C,IAAKxC,GAEP,EAAKyC,OAAOC,KAAK,yBAA0BE,IAnW/B,EA0WdC,aAAe,WACb,EAAKC,SAAS,CACZC,WAAY,EAAKC,MAAMD,aA5Wb,EAgXdE,0BAA4B,WAC1B,EAAKH,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAlX7B,EAsXdC,uBAAyB,WACvB,EAAKL,SAAS,CACZM,wBAAyB,EAAKJ,MAAMI,0BAxX1B,EA4XdC,oBAAsB,WACpB,EAAKP,SAAS,CACZQ,qBAAsB,EAAKN,MAAMM,uBA9XvB,EAkYdC,kBAAoB,WAClB,EAAKT,SAAS,CACZU,mBAAoB,EAAKR,MAAMQ,qBApYrB,EAwYd+R,sBAAwB,WACtB,EAAKzS,SAAS,CACV0S,oBAAqB,EAAKxS,MAAMwS,sBA1YxB,EA8Yd7Q,QAAU,WACR5C,GAAyB,GAEvBD,GADE,EAAKkB,MAAM4B,iBACQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,mBAEA,kBAACL,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,qBAEvB,EAAKrC,SAAS,CACZsC,cAAe,EAAKpC,MAAMoC,cAAcZ,OAAOzF,MAItB,GAAvBoC,GAAavB,QACfuB,GAAaf,KAAKnB,IAEpBkC,GAAeA,GAAaqD,OAAOxF,IACnCE,QAAQC,IAAI,oBAAqBgC,KA9ZrB,EAiadkE,gBAAkB,WAChB,EAAKvC,SAAU,CACbwC,sBAAsB,KAnaZ,EAuadC,aAAe,SAACC,GACCA,EAAEC,OAAOC,aAAeF,EAAEC,OAAOE,UAAcH,EAAEC,OAAOG,aAIvE1E,GAAiBsE,EAAEC,OAAOE,WA5ad,EA+adE,WAAa,WACX3G,QAAQC,IAAIiC,IACZlC,QAAQC,IAAIkC,KAjbA,EAobdyE,YAAc,SAACC,GACb,EAAKtD,OAAOC,KAAK,eAAgBqD,IArbrB,EAwbdC,kBAAoB,WAElB,GAAI3E,GAAiB,CAGnB,IAAI2B,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIiD,EAAU,GAEZA,EADEC,MAAM9E,GAAS,GAAG,IACV,MAEA,QAIZL,GAAaX,KAAK,CAAC,YAAagB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI6E,EAAS7E,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAI1HhB,GAAgBE,KAAO,EAAKc,MAAMmD,UAElC,IAAIpG,EAAO,GACPqG,EAAUC,SAASjF,GAAS,GAAG,IAAM,EACrCkF,EAAUD,SAASjF,GAAS,GAAG,IAAM,EACrCmF,EAAenF,GAAS,GAAG,GAC/BrB,EAAK,GAAKuG,EACVvG,EAAK,GAAKwG,EACVxG,EAAK,GAAKqG,EACVpE,GAAgBrC,KAAKS,KAAKL,GAC1BsB,IAAkB,OAElBnC,QAAQC,IAAI,wBA3dF,EA+ddqH,eAAiB,SAACC,EAAWC,GAC3B,EAAKC,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAIrB,OAHK1E,GAAOkE,GAAajE,GAAOkE,IAC5BO,EAAeC,SAAW,QAEvBD,MAteE,EA4edE,eAAiB,SAAC3B,GAChB,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SA9elB,EAkfdC,sBAAwB,WAItB,EAAK7E,OAAOC,KAAK,gBAHE,CACjByD,UAAW,mBAGb,EAAK1C,wBAvfO,EA0fdgS,kBAAoB,SAACjQ,GACjBA,EAAEgC,iBACFtI,QAAQC,IAAI,iBACZ,IAAIsI,EAAe,CACjBtB,UAAW,EAAKnD,MAAMmD,WAExB,EAAK1D,OAAOC,KAAK,gBAAiB+E,GAClC,EAAKhE,wBAjgBK,EAogBdiE,iBAAmB,SAAClC,GAChBA,EAAEgC,iBACFrG,GAAaK,IAAYC,IAAcC,GACvC,EAAKsB,MAAMoC,cAAc5D,IAAYC,IAAcC,GAGnDF,IAAc,EACdC,IAAc,EACdC,IAAkB,EAClBC,GAAmB,GACnB,EAAK0B,uBA9gBK,EAihBd8B,kBAAoB,WAClBnD,GAAgBrC,KAAO,GACvB,EAAKmD,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,oBAthBT,EA0hBdA,gBAAkB,WAIhB,EAAKpC,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,sBAjiBT,EAuiBd+C,aAAe,SAAC1C,EAAG2C,GAGjB,IAAInF,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIoF,EAAiBC,KAAKC,MAAQ,IAAQtH,GAE1C,GADAA,GAAiBqH,KAAKC,MAAQ,IAC1BF,EAAgB,EAGlB,GAAIrH,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,GAAc,CACjF,IAAI2I,EAAiBxH,GAAaA,GAAanB,OAAS,GAAG,GAC3DmB,GAAayH,MACbzH,GAAaX,KAAK,CAAC,OAAQiG,SAAS+B,GAAiBG,EAAgB,KAAM,KAAM,KAAM,KAAMvF,SAE7FjC,GAAaX,KAAK,CAAC,OAAQiG,SAAS+B,GAAgB,KAAM,KAAM,KAAM,KAAMpF,IAKhF,GAAIpC,GAAeC,eAAgB,CAG7BE,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,IACnEmB,GAAayH,MAIf,IAAK,IAAI1I,EAAI,EAAGA,EAAIc,GAAeE,QAAQlB,OAAQE,IAAK,CACtD,IAAI2I,EAAqB7H,GAAeE,QAAQhB,GAAG,GAC/C4I,EAA0B9H,GAAeE,QAAQhB,GAAG,GACpD6I,EAAe/H,GAAeE,QAAQhB,GAAG,GAC7CiB,GAAaX,KAAK,CAACqI,EAAoBE,EAAcD,EAAyB,KAAM,KAAM,KAAM1F,IAIlGpC,GAAeE,QAAQlB,OAAS,EAChCgB,GAAeC,gBAAiB,EAIlC,GAAmB,UAAfsH,EAAyB,CAE3B,IAAIS,EAAc1H,GAAiBsE,EAAEC,OAAOE,UACxCkD,EAAgB9H,GAAanB,OAGjC,GAAIgJ,EAAc,EAGhB,GAAIC,GAAiB,GAA4C,gBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GA1oBC,EA0oB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EA5oBR,EA4oByBA,IAC7B,GAA+C,gBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAsB,CAC5DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EAppBV,EAopB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,cAAe,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAIhEjC,GAAaX,KAAK,CAAC,cAAe,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAKlEjC,GAAaX,KAAK,CAAC,cAAe,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAG7D,GAAI4F,EAAc,EAGvB,GAAIC,GAAiB,GAA4C,kBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GA3qBC,EA2qB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EA7qBR,EA6qByBA,IAC7B,GAA+C,kBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAwB,CAC9DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EArrBV,EAqrB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,gBAAiB,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAIlEjC,GAAaX,KAAK,CAAC,gBAAiB,KAAM,KAAM,KAAM,KAAM,KAAM4C,SAKpEjC,GAAaX,KAAK,CAAC,gBAAiB,KAAM,KAAM,KAAM,KAAM,KAAM4C,IAGtE,EAAKuC,aAAaC,OAII,SAAf2C,GAEH5G,KAGEM,GAAW,EACbd,GAAaX,KAAK,CAAC,WAAYwB,GAAU,KAAM,KAAM,KAAM,KAAMoB,IAI1DpB,GAAW,EAClBb,GAAaX,KAAK,CAAC,WAAYyB,GAAU,KAAM,KAAM,KAAM,KAAMmB,IAKjEjC,GAAaX,KAAK,CAAC+H,EAAavG,GAAUC,GAAU,KAAMD,GAAW,EAAG3C,GAAY4C,IAAWmB,IAEjGzB,IAAoB,GAEtB,EAAKyE,qBAIiB,aAAfmC,IAEH9G,KAEW,SAATmE,EAAEuD,IACJhI,GAAaX,KAAK,CAAC,iBAAkBgB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAMA,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAI5G,OAATwC,EAAEuD,IACThI,GAAaX,KAAK,CAAC,eAAgBgB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAMA,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAK1HjC,GAAaX,KAAK,CAAC,WAAYgB,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAMA,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,KAG1H,EAAKgD,qBAEP9G,QAAQC,IAAI4B,KA5sBA,EA+sBdiI,oBAAsB,WACpBjI,GAAaX,KAAK,CAAC,oBAAqB,KAAM,KAAM,KAAM,KAAM,KAAM,QACtE,IAAI6I,EAAiB,CACnBlI,aAAcA,IAGV6G,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACgB,oBAExB1J,MAAM,gCAAkCT,GAAiB8I,IA1tB7C,EA6tBd8N,kBAAoB,SAAClQ,GACnBA,EAAEgC,iBAEqB,aADvB1I,GAAkB0G,EAAEC,OAAO2B,OAEzB,EAAKtE,SAAS,CACZ6S,wBAAwB,IAGL,cAAnB7W,IACF,EAAKgE,SAAS,CACZ8S,0BAA0B,IAGP,aAAnB9W,IACF,EAAKgE,SAAS,CACZ+S,yBAAyB,KA1uB7B,EAAKvR,GAAK,MACV,EAAKqC,kBAAoBuC,IAAMC,YAC/B,EAAKnG,MAAQ,CACXD,WAAW,EACXgB,KAAM,GACNqF,KAAM,GACNC,MAAO,GACPzF,MAAOa,MAAMC,KAAK,CAAE9E,OAAQ,IAC5BoE,SAAS,EACTC,4BAA4B,EAG5BqF,eAAe,EACfC,YAAa9E,MAAMC,KAAK,CAAE9E,OAAQ,IAClC4J,mCAAmC,EAEnClE,sBAAsB,EACtBmE,iBAAkB,UAElBkM,wBAAwB,EACxBG,mBAAoB,YAEpBF,0BAA0B,EAC1BG,qBAAsB,cAEtBF,yBAAyB,EACzBG,oBAAqB,aAErB5Q,cAAe,GACfsE,mBAAmB,EAEnBC,WAAY,mBACZC,MAAM,GACNC,gBAAiB,GAEjB2L,oBAAoB,EACpBrP,UAAW,GAEX2D,aAAc,iCACdC,QAAS,GACTvG,mBAAmB,EAEnBF,qBAAqB,EAErBsB,kBAAkB,EAClBxB,wBAAwB,EACxBF,2BAA2B,GAK7B,EAAKT,OAASuH,IAAG,kBAEjB,EAAKvH,OAAOwH,GAAG,mBAAmB,SAAStK,GACzCuK,EAAWvK,MAGb,EAAK8C,OAAOwH,GAAG,cAAc,SAAS3F,GACpC6F,EAAU7F,MAGZ,EAAK7B,OAAOwH,GAAG,yBAAyB,SAASG,GAC/CjH,EAAuBiH,MAGzB,EAAK3H,OAAOwH,GAAG,yBAAyB,SAASI,GAC/C,IAAI9H,EAAM8H,EAAmB9H,IACzBC,EAAM6H,EAAmB7H,IAE7B8H,EAAoB/H,EAAKC,MAG3B,EAAKC,OAAOwH,GAAG,4BAA4B,SAASM,GAClD,IAAIhI,EAAMgI,EAAsBhI,IAC5BC,EAAM+H,EAAsB/H,IAEhCS,EAA0BV,EAAKC,MAGjC,EAAKC,OAAOwH,GAAG,4BAA4B,SAASO,GAClD,IAAIjI,EAAMiI,EAAsBjI,IAC5BC,EAAMgI,EAAsBhI,IACvBgI,EAAsBlG,KAEpBnC,IACTsI,EAAuBlI,EAAKC,MAIhC,EAAKC,OAAOwH,GAAG,uBAAuB,SAAStK,GAC7C+K,EAAoB/K,MAGtB,EAAK8C,OAAOwH,GAAG,gBAAgB,SAAStK,GACtCgL,EAAWhL,MAGb,EAAK8C,OAAOwH,GAAG,uBAAuB,SAASW,GAC7CC,EAAmBD,MAGrB,EAAKnI,OAAOwH,GAAG,uBAAuB,SAASa,GAC7CC,EAAoBD,MAGtB,IAAMC,EAAsB,SAAAD,GAC1B,EAAKhI,SAAS,CACZgH,aAAcgB,EAAgBE,YAC9BjB,QAASe,EAAgBf,WAIvBc,EAAqB,SAAAD,GAEzB,IAAIK,EAAaL,EAAmBK,WAChCC,EAAaN,EAAmBM,WAEpChM,QAAQC,IAAI,sBAAuB8L,GAEnC,IAAK,IAAInL,EAAI,EAAGA,EAAImL,EAAWrL,OAAQE,IAAK,CAC1C,IAAIqL,EAAWF,EAAWnL,GAC1B,GAAIqL,EAAS,GAAKhK,GAAavB,OAAQ,CAErC,IAAIwL,EAAY,EAAKzE,kBAAkBC,QAAQC,YAAYwE,cAAcF,EAAS,GAAIA,EAAS,IAG/F,GAAoB,KAAhBC,EAAU,GAAW,CACvB,IAAIE,EAAWF,EAAUG,UAAU,GACnC,EAAK5E,kBAAkBC,QAAQC,YAAY2E,cAAcL,EAAS,GAAIA,EAAS,GAAIG,GAGpE,SAAbF,GAAsC,GAAdF,IAC1B/J,IAAagK,EAAS,GAAIA,EAAS,KAAM,EAAKnI,MAAMoC,eAAc+F,EAAS,GAAIA,EAAS,OAI9F3E,KAGI2D,EAAY,SAAA7F,GAChBnC,GAAYmC,GAGRqG,EAAa,SAAAhL,GACjB,EAAKmD,SAAS,CACZiH,QAASpK,EAAKoK,UAEhBW,EAAoB/K,EAAK8L,gBAGrBjF,EAAiB,WACrBtH,QAAQC,IAAI,2BACZ,EAAKwH,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAKrB,OAJA/H,QAAQC,IAAI,iBAAkBgC,GAAaoB,GAAKC,GAAM,IAAKD,EAAK,IAAKC,GACrC,OAA3BrB,GAAaoB,GAAKC,IAAmD,IAAlCrB,GAAaoB,GAAKC,GAAK5C,QAA4C,SAA1BuB,GAAaoB,GAAKC,IAAwD,MAArCrB,GAAaoB,GAAKC,GAAKkJ,OAAO,KAChJzE,EAAeC,SAAW,QAEvBD,MAKNqD,EAAsB,SAAC/H,EAAKC,GAChC,GAAID,EAAMpB,GAAavB,OAAQ,CAE7B,IAAIwL,EAAY,EAAKzE,kBAAkBC,QAAQC,YAAYwE,cAAc9I,EAAKC,GAG9E,GAA4B,MAAxB4I,EAAUM,OAAO,GACnB,OAEA,IAAIJ,EAAW,IAAMF,EACrB,EAAKzE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAAK8I,GAErE9E,MAIEiE,EAAyB,SAAClI,EAAKC,GACnC,GAAID,EAAMpB,GAAavB,OAAQ,CAC7BV,QAAQC,IAAIoD,GACZrD,QAAQC,IAAIqD,GAEZ,EAAKmE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAD9C,SAEhBgE,MAIErD,EAAyB,SAAAxD,GAC7B,EAAKmD,SAAS,CACZM,wBAAyB,EAAKJ,MAAMI,0BAIlCH,EAA4B,SAAAtD,GAChC,EAAKmD,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAIrCwH,EAAsB,SAAA/K,GAC1B,EAAKmD,SAAS,CACZ8G,MAAOjK,IAGT,IADA,IAAIgM,EAAgB,qBACX7L,EAAI,EAAGA,EAAI,EAAKkD,MAAM4G,MAAMhK,OAAQE,IACvCA,GAAK,EAAKkD,MAAM4G,MAAMhK,OAAS,EACjC+L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAElC6L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAAK,KAG3C,EAAKgD,SAAS,CACZ+G,gBAAiB8B,KAIfzB,EAAa,SAAAvK,GAGf,IADA,IAAIiM,EAAejM,EAAKA,KACfkM,EAAI,EAAGA,EAAID,EAAahM,OAAQiM,IAAK,CAE5C,IAAI7L,EAAI4L,EAAaC,GAAG,GAAK,EACzBxE,EAAQuE,EAAaC,GAAG,GACxB/L,EAAI8L,EAAaC,GAAG,GAAK,EAGzB/L,EAAIqB,GAAavB,QACnBuB,GAAarB,GAAGE,GAAKqH,EACrB,EAAKrE,MAAMoC,cAActF,GAAGE,GAAKqH,GAIzBvH,EAAI,EA1QE,IA2QdA,IACId,GAAYc,EApRR,GAQM,GA4Q2CE,IAAMqH,IAC7DrI,GAAYc,EArRN,GAQM,GA6QyCE,GAAKqH,EAC1DtI,GAAOe,EAtRD,GAQM,GA8QoCE,GAAKqH,IAI3DnI,QAAQC,IAAI,iCAAkCH,IAC9C,EAAK8D,SAAS,CACZ6G,WAAYhK,EAAKsC,eAvPX,OA2PZ,EAAKsT,sBAAwB,EAAKA,sBAAsBzJ,OACxD,EAAKvI,kBAAoB,EAAKA,kBAAkBuI,OAChD,EAAKzI,oBAAsB,EAAKA,oBAAoByI,OACpD,EAAKjJ,aAAe,EAAKA,aAAaiJ,OACtC,EAAK3I,uBAAyB,EAAKA,uBAAuB2I,OAC1D,EAAK7I,0BAA4B,EAAKA,0BAA0B6I,OAhQpD,E,0KAqQZ9K,GAAgBqH,KAAKC,MAAQ,IAE7BvG,GAAyB,kBAAC8C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS8G,KAAKpH,SAA3E,mBAEzBoH,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GAClE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGxED,EACAC,KAKduJ,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG1H3K,GAAWW,EACXV,GAAWsK,EAEX5K,IAAoB,KAGtBwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAMjDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,O,mJA0BjDkN,KAAKtJ,OAAOyI,e,+BAiZJ,IAAD,SACP,OAAIa,KAAK/I,MAAMsC,qBACN,kBAAC,IAAD,CAAUwH,GAAIf,KAAK/I,MAAMyG,mBAE9BsC,KAAK/I,MAAM2S,uBACN,kBAAC,IAAD,CAAU7I,GAAIf,KAAK/I,MAAM8S,qBAE9B/J,KAAK/I,MAAM4S,yBACN,kBAAC,IAAD,CAAU9I,GAAIf,KAAK/I,MAAM+S,uBAE9BhK,KAAK/I,MAAM6S,wBACN,kBAAC,IAAD,CAAU/I,GAAIf,KAAK/I,MAAMgT,sBAGhC,yBAAK/Q,QAAS,SAAAO,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,UAAUuH,QAAS,SAAAvH,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,cAAcT,UAAU,OAC3G,4BAAQmH,IAAI,4DACZ,0BAAMc,KAAK,2DAA2DC,IAAI,aAAaC,MAAM,WAC5F,kBAACC,EAAA,EAAD,CAAWpI,UAAU,eAEpB,6BACA,kBAACoI,EAAA,EAAD,KAEM,kBAACC,EAAA,EAAD,CAAQpI,MAAM,QAAQqI,OAAK,GACzB,kBAACC,EAAA,EAAD,CAAerI,QAAS8G,KAAKlJ,aAAckC,UAAU,SACrD,kBAACwI,EAAA,EAAD,CAAUC,OAAQzB,KAAK/I,MAAMD,UAAW0K,QAAM,GAC5C,kBAACC,EAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASb,KAAK,WAAd,mBAKN,wBAAIjI,UAAU,aAAd,MAA8BgH,KAAK/I,MAAMmD,UAAzC,iCACA,uBAAGpB,UAAU,QAAb,4FACA,wBAAIA,UAAU,SACd,2BAAIgH,KAAK/I,MAAM6G,iBACf,uBAAG9E,UAAU,QACX,kBAACF,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKxI,mBAAxE,gBADF,mBAGGxB,GAHH,mBAKGD,GALH,mBAzyBgB,GAyyBhB,mBASE,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK/C,qBAAxE,wBAEF,2BAAI+C,KAAK/I,MAAM8G,cAGf,kBAACgE,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMwS,oBAClC,kBAACzH,EAAA,EAAD,gDACA,kBAACC,EAAA,EAAD,KACI,kBAACoF,GAAA,EAAD,KACI,kBAAC6C,GAAA,EAAD,CAAKC,GAAG,KACJ,kBAACC,GAAA,EAAD,CAAMpO,MAAI,GACV,kBAACqO,GAAA,EAAD,CAAWC,IAAI,MAAf,uBACA,kBAACC,GAAA,EAAD,qDACA,kBAACzR,EAAA,EAAD,CAAQG,MAAM,UAAUoC,KAAK,WAAW9C,GAAG,WAAWW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAA3F,6BAGJ,kBAACyQ,GAAA,EAAD,CAAKC,GAAG,KACJ,kBAACC,GAAA,EAAD,CAAMpO,MAAI,GACV,kBAACqO,GAAA,EAAD,CAAWC,IAAI,MAAf,yBACA,kBAACC,GAAA,EAAD,4EACA,kBAACzR,EAAA,EAAD,CAAQG,MAAM,OAAOoC,KAAK,aAAa9C,GAAG,aAAaW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAA5F,6BAIR,kBAAC4N,GAAA,EAAD,KACI,kBAAC6C,GAAA,EAAD,CAAKC,GAAG,KACJ,kBAACC,GAAA,EAAD,CAAMpO,MAAI,GACV,kBAACqO,GAAA,EAAD,CAAWC,IAAI,MAAf,wBACA,kBAACC,GAAA,EAAD,+EACA,kBAACzR,EAAA,EAAD,CAAQG,MAAM,UAAUoC,KAAK,YAAY9C,GAAG,YAAYW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAA7F,+BAOd,kBAACsI,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMQ,kBAAmBiL,OAAQ1C,KAAKxI,mBAClE,kBAACwK,EAAA,EAAD,CAAaU,OAAQ1C,KAAKxI,mBAA1B,qBACA,kBAACyK,EAAA,EAAD,KACE,kBAACU,EAAA,EAAD,CAAOC,SAAO,EAAC5J,UAAU,iBACvB,+BACKgH,KAAK/I,MAAM+G,QAAQ6E,KAAI,SAAAC,GAAI,OAC1B,wBAAI9F,IAAO8F,GACT,4BAAKA,UAMjB,kBAACC,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBE,QAAS8G,KAAKxI,mBAAjF,SADF,IACsH,MAIxH,kBAACuK,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMM,oBAAqBmL,OAAQ1C,KAAK1I,qBACpE,kBAAC0K,EAAA,EAAD,CAAaU,OAAQ1C,KAAK1I,qBAA1B,kDACA,kBAAC2K,EAAA,EAAD,KACGrM,IAEH,kBAACmN,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,yBAAyBE,QAAS8G,KAAKrE,iBAAkBqH,OAAK,GAA1G,2BADF,IAC+I,IAC7I,kBAAClK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,YAAYD,UAAU,yBAAyBE,QAAS8G,KAAK1I,oBAAqB0L,OAAK,GAA/G,6BAIJ,kBAACjB,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMI,uBAAwBqL,OAAQ1C,KAAK5I,wBACvE,kBAAC4K,EAAA,EAAD,CAAaU,OAAQ1C,KAAK5I,wBAA1B,2BACA,kBAAC6K,EAAA,EAAD,wEAGA,kBAACc,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,yBAAyBE,QAAS8G,KAAK5I,uBAAwB4L,OAAK,GAAhH,UADF,IACoI,MAItI,kBAACjB,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAME,0BAA2BuL,OAAQ1C,KAAK9I,2BAC1E,kBAAC8K,EAAA,EAAD,CAAaU,OAAQ1C,KAAK9I,2BAA1B,2BACA,kBAAC+K,EAAA,EAAD,sEAGA,kBAACc,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,yBAAyBE,QAAS8G,KAAK9I,0BAA2B8L,OAAK,GAAnH,UADF,IACuI,QAOnJ,6BAvHF,+BA0HE,yBAAKzK,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACnF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAMwB,GAAc+N,IAAKnD,KAAKpF,mBAArF,mBAA4GoF,KAAKzH,IAAjH,4BACc,GADd,4BAEc,GAFd,sBAGQ,QAHR,uBAIS,OAJT,0BAKY,QALZ,2BAMa,MANb,6BAOe,GAPf,0BAQY,GARZ,0BASayH,KAAK/I,MAAM4B,kBATxB,U,GAn4BeuK,a,gFCvDrBoH,GAAQ,IADE5V,EAAQ,MAGlB6V,GAAqB,GACrBC,GAAqB,GACrBC,GAAyB,GASzB9V,IALO,IADOD,EAAQ,MAML,CACnBE,gBAAgB,EAChBC,QAAS,KAGP7B,GAAc,GACd0X,GAAyB,GACzBC,GAAyB,GACzBC,GAA6B,GAC7BC,IAAe,EAEf/V,GAAe,GACfC,GAAgB,EAI0BjC,GAAS,GAAIC,GAAc,GAIrEkC,GAAiB,EACjBC,GAAe,GACfC,GAAW,GACXC,IAAkB,EAOlBE,IAAoB,EAEpBC,IAAc,EACdC,IAAc,EACdC,GAAiB,GAGjBE,IAAY,EACZC,IAAY,EAEZC,GAAqB,GAIrBE,GAAkB,CACpBrC,KAAK,GACLsC,YAAa,yBACbC,KAAM,IAGJC,GAAY,GA0oCD4U,G,kDAloCb,aAAe,IAAD,uBACZ,gBAwbFC,mBAAqB,WACnB,EAAKlU,SAAS,CACZmU,oBAAqB,EAAKjU,MAAMiU,sBA3btB,EA+bdC,gBAAkB,WAChB,EAAKpU,SAAS,CACZqU,iBAAkB,EAAKnU,MAAMmU,mBAjcnB,EAqcdC,2BAA6B,WAC3B,EAAKtU,SAAS,CACZuU,uBAAwB,EAAKrU,MAAMqU,yBAvczB,EA2cdxU,aAAe,WACb,EAAKC,SAAS,CACZC,WAAY,EAAKC,MAAMD,aA7cb,EAiddE,0BAA4B,WAC1B,EAAKH,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAnd7B,EAuddK,kBAAoB,WAClB,EAAKT,SAAS,CACZU,mBAAoB,EAAKR,MAAMQ,qBAzdrB,EA6dd+R,sBAAwB,WACtB,EAAKzS,SAAS,CACV0S,oBAAqB,EAAKxS,MAAMwS,sBA/dxB,EAmed8B,uBAAyB,WACrB,EAAKxU,SAAS,CACVyU,mBAAoB,EAAKvU,MAAMuU,qBArezB,EAyed5S,QAAU,WACiB,GAEvB7C,GADE,EAAKkB,MAAM4B,iBACQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,mBAEA,kBAACL,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,qBAEvB,EAAKrC,SAAS,CACZsC,cAAe,EAAKpC,MAAMoC,cAAcZ,OAAOzF,MAItB,GAAvBoC,GAAavB,QACfuB,GAAaf,KAAKnB,IAEpBkC,GAAeA,GAAaqD,OAAOxF,IACnCE,QAAQC,IAAI,oBAAqBgC,KAzfrB,EA4fdkE,gBAAkB,WAChB,EAAKvC,SAAU,CACbwC,sBAAsB,KA9fZ,EAkgBdC,aAAe,SAACC,GACCA,EAAEC,OAAOC,aAAeF,EAAEC,OAAOE,UAAcH,EAAEC,OAAOG,aAIvE1E,GAAiBsE,EAAEC,OAAOE,WAvgBd,EA0gBdE,WAAa,WACX3G,QAAQC,IAAIiC,IACZlC,QAAQC,IAAIkC,KA5gBA,EA+gBdyE,YAAc,SAACC,GACb,EAAKtD,OAAOC,KAAK,eAAgBqD,IAhhBrB,EAmhBdC,kBAAoB,WAElB,GAAI3E,GAAiB,CAGnB,IAAI2B,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIiD,EAAU,GAEZA,EADEC,MAAM9E,GAAS,GAAG,IACV,MAEA,QAIZL,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,YAAahG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI6E,EAAS,EAAKjD,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAElKhB,GAAgBE,KAAO,EAAKc,MAAMmD,UAElC,IAAIpG,EAAO,GACPqG,EAAUC,SAASjF,GAAS,GAAG,IAAM,EACrCkF,EAAUD,SAASjF,GAAS,GAAG,IAAM,EACrCmF,EAAenF,GAAS,GAAG,GAC/BrB,EAAK,GAAKuG,EACVvG,EAAK,GAAKwG,EACVxG,EAAK,GAAKqG,EACVpE,GAAgBrC,KAAKS,KAAKL,GAC1BsB,IAAkB,OAElBnC,QAAQC,IAAI,wBApjBF,EAwjBdqH,eAAiB,SAACC,EAAWC,GAC3B,EAAKC,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAIrB,OAHK1E,GAAOkE,GAAajE,GAAOkE,IAC5BO,EAAeC,SAAW,QAEvBD,MA/jBE,EAqkBdE,eAAiB,SAAC3B,GAChB,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SAvkBlB,EA2kBdC,sBAAwB,WAItB,EAAK7E,OAAOC,KAAK,gBAHE,CACjByD,UAAW,mBAGb,EAAK1C,wBAhlBO,EAmlBdgS,kBAAoB,SAACjQ,GACjBA,EAAEgC,iBACFtI,QAAQC,IAAI,iBACZ,IAAIsI,EAAe,CACjBtB,UAAW,EAAKnD,MAAMmD,WAExB,EAAK1D,OAAOC,KAAK,gBAAiB+E,GAClC,EAAKhE,wBA1lBK,EA6lBdiE,iBAAmB,SAAClC,GAChBA,EAAEgC,iBACFrG,GAAaK,IAAYC,IAAcC,GACvC,EAAKsB,MAAMoC,cAAc5D,IAAYC,IAAcC,GAGnDF,IAAc,EACdC,IAAc,EACdC,IAAkB,EACC,GACnB,EAAK2B,uBAvmBK,EA0mBd8B,kBAAoB,WAClBnD,GAAgBrC,KAAO,GACvB,EAAKmD,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,oBA/mBT,EAmnBdA,gBAAkB,WAIhB,EAAKpC,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,sBA1nBT,EA6nBd+C,aAAe,SAAC1C,EAAG2C,GAGjB,IAAInF,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIoF,EAAiBC,KAAKC,MAAQ,IAAQtH,GAE1C,GADAA,GAAiBqH,KAAKC,MAAQ,IAC1BF,EAAgB,EAGlB,GAAIrH,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,GAAc,CACjF,IAAI2I,EAAiBxH,GAAaA,GAAanB,OAAS,GAAG,GAC3DmB,GAAayH,MACbzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,OAAQf,SAAS+B,GAAiBG,EAAgB,KAAM,KAAM,EAAKvF,MAAMwU,WAAY,KAAM,KAAMxU,SAErIjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,OAAQf,SAAS+B,GAAgB,KAAM,KAAM,EAAKpF,MAAMwU,WAAY,KAAM,KAAMxU,IAKxH,GAAIpC,GAAeC,eAAgB,CAG7BE,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,IACnEmB,GAAayH,MAIf,IAAK,IAAI1I,EAAI,EAAGA,EAAIc,GAAeE,QAAQlB,OAAQE,IAAK,CACtD,IAAI2I,EAAqB7H,GAAeE,QAAQhB,GAAG,GAC/C4I,EAA0B9H,GAAeE,QAAQhB,GAAG,GACpD6I,EAAe/H,GAAeE,QAAQhB,GAAG,GAC7CiB,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAMqB,EAAoBE,EAAcD,EAAyB,KAAM,EAAK1F,MAAMwU,WAAY,KAAM,KAAMxU,IAI1IpC,GAAeE,QAAQlB,OAAS,EAChCgB,GAAeC,gBAAiB,EAIlC,GAAmB,UAAfsH,EAAyB,CAE3B,IAAIS,EAAc1H,GAAiBsE,EAAEC,OAAOE,UACxCkD,EAAgB9H,GAAanB,OAGjC,GAAIgJ,EAAc,EAGhB,GAAIC,GAAiB,GAA4C,gBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GApuBC,EAouB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EAtuBR,EAsuByBA,IAC7B,GAA+C,gBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAsB,CAC5DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EA9uBV,EA8uB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAIxGjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAK1GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAGrG,GAAI4F,EAAc,EAGvB,GAAIC,GAAiB,GAA4C,kBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GArwBC,EAqwB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EAvwBR,EAuwByBA,IAC7B,GAA+C,kBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAwB,CAC9DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EA/wBV,EA+wB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAI1GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAK5GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,IAG9G,EAAKuC,aAAaC,OAII,SAAf2C,GAEH5G,KAGEM,GAAW,EACbd,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYxF,GAAU,KAAM,KAAM,EAAKoB,MAAMwU,WAAY,KAAM,KAAMxU,IAIlGpB,GAAW,EAClBb,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYvF,GAAU,KAAM,KAAM,EAAKmB,MAAMwU,WAAY,KAAM,KAAMxU,IAKzGjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAMe,EAAavG,GAAUC,GAAU,KAAM,EAAKmB,MAAMwU,WAAY5V,GAAW,EAAG3C,GAAY4C,IAAWmB,IAEzIzB,IAAoB,GAEtB,EAAKyE,qBAIiB,aAAfmC,IAEH9G,KAEW,SAATmE,EAAEuD,IACJhI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,iBAAkBhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAIpJ,OAATwC,EAAEuD,IACThI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,eAAgBhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAKlKjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,KAGlK,EAAKgD,qBAEP9G,QAAQC,IAAI4B,KAlyBA,EAqyBdiI,oBAAsB,WACpBjI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,oBAAqB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAM,QAC9G,IAAIvO,EAAiB,CACnBlI,aAAcA,IAGV6G,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACgB,oBAExB1J,MAAM,wCAAyCqI,IAhzBnC,EAmzBd8N,kBAAoB,SAAClQ,GAEnBtG,QAAQC,IAAI,8BAA+BqG,EAAEC,OAAO2B,MAC/B,YAAjB5B,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,cAGE,aAAjBjS,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,eAGE,cAAjBjS,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,gBAGnB,EAAKL,8BAr0BO,EAw0Bd3I,OAAS,SAACiJ,GACJ,EAAK1U,MAAM2U,YAAcD,GACzB,EAAK5U,SAAS,CAAE6U,UAAWD,IAEnB,MAARA,GACF,EAAK5U,SAAS,CACZ0U,WAAY,eAEdvY,GAAc0X,IAEG,MAARe,GACT,EAAK5U,SAAS,CACZ0U,WAAY,oBAEdvY,GAAc2X,IAEG,MAARc,IACT,EAAK5U,SAAS,CACZ0U,WAAY,mBAEdvY,GAAc4X,KA51BJ,EAg2Bde,YAAc,SAACpS,GACbA,EAAEgC,iBACEsP,GACF,EAAKQ,0BAELR,IAAe,EACfP,GAAMrW,mBAAmB,EAAG,aAAcsW,GAAoBxX,GAAa2X,IAC3EJ,GAAMrW,mBAAmB,EAAG,aAAcuW,GAAoBzX,GAAa4X,IAC3EL,GAAMrW,mBAAmB,EAAG,iBAAkBwW,GAAwB1X,GAAa6X,IACnFtS,YAAW,WACPiS,GAAqB,CAACG,IAAwBnS,OAAOgS,IACrDC,GAAqB,CAACG,IAAwBpS,OAAOiS,IACrDC,GAAyB,CAACG,IAA4BrS,OAAOkS,IAE7D,EAAK5T,SAAS,CACZyU,mBAAmB,MAEtB,KACHtY,GAAc0X,GAEd,EAAK7T,SAAS,CACZqU,iBAAiB,MAr3BT,EA03BdU,cAAgB,WACdf,IAAe,EACfP,GAAMrW,mBAAmB,EAAG,aAAcsW,GAAoBxX,GAAa2X,IAC3EJ,GAAMrW,mBAAmB,EAAG,aAAcuW,GAAoBzX,GAAa4X,IAC3EL,GAAMrW,mBAAmB,EAAG,iBAAkBwW,GAAwB1X,GAAa6X,IACnFtS,YAAW,WACPiS,GAAqB,CAACG,IAAwBnS,OAAOgS,IACrDC,GAAqB,CAACG,IAAwBpS,OAAOiS,IACrDC,GAAyB,CAACG,IAA4BrS,OAAOkS,MAC9D,KACHzX,GAAc0X,IAp4BF,EAu4BdmB,SAAW,SAACtS,GACVA,EAAEgC,iBACF,EAAK1E,SAAS,CACZgV,UAAU,KA14BA,EA84BdC,aAAe,SAACvS,GACd,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SAh5BlB,EAo5Bd2Q,WAAa,SAACxS,GACZA,EAAEgC,iBACFtI,QAAQC,IAAI,kBAAmB,EAAK6D,MAAMoE,MAC1C,EAAK8P,mBAv5BO,EA05Bde,QAAU,WAERzB,GAAqB,GACrBC,GAAqB,GACrBC,GAAyB,GACzBC,GAAyB,GACzBC,GAAyB,GACzBC,GAA6B,GAG7B,EAAKgB,gBAGL9W,GAAe,GAGf,EAAK+B,SAAS,CACZ6U,UAAW,MAEb,EAAKlJ,OAAO,KAGZ,EAAKuI,sBA96BL,EAAK1S,GAAK,MACV,EAAKqC,kBAAoBuC,IAAMC,YAC/B,EAAK+O,mBAAqBhP,IAAMC,YAChC,EAAKgP,mBAAqBjP,IAAMC,YAChC,EAAKnG,MAAQ,CACXD,WAAW,EACXa,MAAOa,MAAMC,KAAK,CAAE9E,OAAQ,IAC5BoE,SAAS,EACTC,4BAA4B,EAG5BqF,eAAe,EACfC,YAAa9E,MAAMC,KAAK,CAAE9E,OAAQ,IAClC4J,mCAAmC,EAEnClE,sBAAsB,EACtBmE,iBAAkB,UAElBrE,cAAe,GACfsE,mBAAmB,EAEnBC,WAAY,mBACZC,MAAM,GACNC,gBAAiB,GAEjB2L,oBAAoB,EACpBrP,UAAW,GAEX2D,aAAc,iCACdC,QAAS,GACTvG,mBAAmB,EAEnBoB,kBAAkB,EAClBxB,wBAAwB,EACxBF,2BAA2B,EAE3BqU,mBAAmB,EACnBI,UAAW,IAEXF,cAAe,GACfJ,uBAAuB,EACvBS,UAAU,EAEVX,iBAAiB,EACjB/P,KAAM,GACNoQ,WAAY,aAEZP,oBAAoB,GAGtB,EAAKxU,OAASuH,IAAG,kBAEjB,EAAKvH,OAAOwH,GAAG,mBAAmB,SAAStK,GACzCuK,EAAWvK,MAGb,EAAK8C,OAAOwH,GAAG,cAAc,SAAS3F,GACpC6F,EAAU7F,MAGZ,EAAK7B,OAAOwH,GAAG,yBAAyB,SAASG,GAC/CjH,EAAuBiH,MAGzB,EAAK3H,OAAOwH,GAAG,yBAAyB,SAASI,GAC/C,IAAI9H,EAAM8H,EAAmB9H,IACzBC,EAAM6H,EAAmB7H,IAE7B8H,EAAoB/H,EAAKC,MAG3B,EAAKC,OAAOwH,GAAG,4BAA4B,SAASM,GAClD,IAAIhI,EAAMgI,EAAsBhI,IAC5BC,EAAM+H,EAAsB/H,IAEhCS,EAA0BV,EAAKC,MAGjC,EAAKC,OAAOwH,GAAG,4BAA4B,SAASO,GAClD,IAAIjI,EAAMiI,EAAsBjI,IAC5BC,EAAMgI,EAAsBhI,IACvBgI,EAAsBlG,KAEpBnC,IACTsI,EAAuBlI,EAAKC,MAIhC,EAAKC,OAAOwH,GAAG,uBAAuB,SAAStK,GAC7C+K,EAAoB/K,MAGtB,EAAK8C,OAAOwH,GAAG,gBAAgB,SAAStK,GACtCgL,EAAWhL,MAGb,EAAK8C,OAAOwH,GAAG,uBAAuB,SAASa,GAC7CC,EAAoBD,MAGtB,IAAMC,EAAsB,SAAAD,GAC1B,EAAKhI,SAAS,CACZgH,aAAcgB,EAAgBE,YAC9BjB,QAASe,EAAgBf,WAIvBI,EAAY,SAAA7F,GAChBnC,GAAYmC,GAGRqG,EAAa,SAAAhL,GACjB,EAAKmD,SAAS,CACZiH,QAASpK,EAAKoK,UAEhBW,EAAoB/K,EAAK8L,gBAGrBjF,EAAiB,WACrBtH,QAAQC,IAAI,2BACZ,EAAKwH,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAKrB,OAJA/H,QAAQC,IAAI,iBAAkBgC,GAAaoB,GAAKC,GAAM,IAAKD,EAAK,IAAKC,GACrC,OAA3BrB,GAAaoB,GAAKC,IAAmD,IAAlCrB,GAAaoB,GAAKC,GAAK5C,QAA4C,SAA1BuB,GAAaoB,GAAKC,IAAwD,MAArCrB,GAAaoB,GAAKC,GAAKkJ,OAAO,KAChJzE,EAAeC,SAAW,QAEvBD,MAKNqD,EAAsB,SAAC/H,EAAKC,GAChC,GAAID,EAAMpB,GAAavB,OAAQ,CAE7B,IAAIwL,EAAY,EAAKzE,kBAAkBC,QAAQC,YAAYwE,cAAc9I,EAAKC,GAG9E,GAA4B,MAAxB4I,EAAUM,OAAO,GACnB,OAEA,IAAIJ,EAAW,IAAMF,EACrB,EAAKzE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAAK8I,GAErE9E,MAIEiE,EAAyB,SAAClI,EAAKC,GACnC,GAAID,EAAMpB,GAAavB,OAAQ,CAC7BV,QAAQC,IAAIoD,GACZrD,QAAQC,IAAIqD,GAEZ,EAAKmE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAD9C,SAEhBgE,MAIErD,EAAyB,SAAAxD,GAC7B,EAAKmD,SAAS,CACZM,wBAAyB,EAAKJ,MAAMI,0BAIlCH,EAA4B,SAAAtD,GAChC,EAAKmD,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAIrCwH,EAAsB,SAAA/K,GAC1B,EAAKmD,SAAS,CACZ8G,MAAOjK,IAGT,IADA,IAAIgM,EAAgB,qBACX7L,EAAI,EAAGA,EAAI,EAAKkD,MAAM4G,MAAMhK,OAAQE,IACvCA,GAAK,EAAKkD,MAAM4G,MAAMhK,OAAS,EACjC+L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAElC6L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAAK,KAG3C,EAAKgD,SAAS,CACZ+G,gBAAiB8B,KAIfzB,EAAa,SAAAvK,GAGf,IADA,IAAIiM,EAAejM,EAAKA,KACfkM,EAAI,EAAGA,EAAID,EAAahM,OAAQiM,IAAK,CAE5C,IAAI7L,EAAI4L,EAAaC,GAAG,GAAK,EACzBxE,EAAQuE,EAAaC,GAAG,GACxB/L,EAAI8L,EAAaC,GAAG,GAAK,EAGzB/L,EAAIqB,GAAavB,QACnBuB,GAAarB,GAAGE,GAAKqH,EACrB,EAAKrE,MAAMoC,cAActF,GAAGE,GAAKqH,GAIzBvH,EAAI,EA9OE,IA+OdA,IACId,GAAYc,EAxPR,GAQM,GAgP2CE,IAAMqH,IAC7DrI,GAAYc,EAzPN,GAQM,GAiPyCE,GAAKqH,EAC1DtI,GAAOe,EA1PD,GAQM,GAkPoCE,GAAKqH,IAI3DnI,QAAQC,IAAI,iCAAkCH,IAC9C,EAAK8D,SAAS,CACZ6G,WAAYhK,EAAKsC,eAvNX,OA2NZ,EAAKsT,sBAAwB,EAAKA,sBAAsBzJ,OACxD,EAAKvI,kBAAoB,EAAKA,kBAAkBuI,OAChD,EAAKjJ,aAAe,EAAKA,aAAaiJ,OACtC,EAAK7I,0BAA4B,EAAKA,0BAA0B6I,OAChE,EAAKwL,uBAAyB,EAAKA,uBAAuBxL,OAC1D,EAAKsL,2BAA6B,EAAKA,2BAA2BtL,OAClE,EAAKoL,gBAAkB,EAAKA,gBAAgBpL,OAC5C,EAAKkL,mBAAqB,EAAKA,mBAAmBlL,OAlOtC,E,0KAwOZ9K,GAAgBqH,KAAKC,MAAQ,IAG7BxG,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS8G,KAAK5G,mBAA3E,qBAIrB4G,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GAClE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGxED,EACAC,KAGduJ,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG1H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAIjDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GACnE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGzED,EACAC,KAGduJ,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG3H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAIjDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GACnE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGzED,EACAC,KAGduJ,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG3H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,O,oJAKjDkN,KAAKtJ,OAAOyI,e,+BA6fJ,IAAD,aACP,OAAIa,KAAK/I,MAAM8U,SACN,kBAAC,IAAD,CAAUhL,GAAIf,KAAK/I,MAAMyU,gBAIhC,yBAAKxS,QAAS,SAAAO,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,UAAUuH,QAAS,SAAAvH,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,cAAcT,UAAU,OAC3G,4BAAQmH,IAAI,4DACZ,0BAAMc,KAAK,2DAA2DC,IAAI,aAAaC,MAAM,WAC5F,kBAACC,EAAA,EAAD,CAAWpI,UAAU,cACpB,kBAACqT,GAAA,EAAD,CAAgB5K,OAAQzB,KAAK/I,MAAMD,UAAW0L,OAAQ1C,KAAKlJ,aAAc+M,MAAO,CAACyI,MAAO,QAAStT,UAAU,iBACrG,kBAACuT,GAAA,EAAD,CAAgBtT,MAAM,UAAWuT,OAAK,EAAC3I,MAAO,CAACyI,MAAO,UAAtD,qBAGA,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAcrR,KAAK,YAAY9C,GAAG,YAAYW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAAnF,wBACA,kBAACiT,GAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,GAAA,EAAD,CAAcrR,KAAK,aAAa9C,GAAG,aAAaW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAArF,4BAIR,6BACE,kBAAC2H,EAAA,EAAD,KACM,wBAAIpI,UAAU,aAAd,MAA8BgH,KAAK/I,MAAMmD,UAAzC,qCACA,uBAAGpB,UAAU,QAAb,4FACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QAAb,mBAGGjD,GAHH,mBAKE,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK/C,qBAAxE,uBALF,mBAOE,kBAACnE,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKkM,SAAxE,sBAPF,mBASE,kBAACpT,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKuL,wBAAxE,gBAGF,kBAACxJ,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMuU,mBAElC,kBAACvJ,EAAA,EAAD,KACI,uCADJ,kRAII,wBAAIjJ,UAAU,SAEd,uBAAGA,UAAU,cACb,sCADA,qtCAYA,sCAZA,6OAgBA,wBAAIA,UAAU,SAEd,sCAxBJ,2pCAmCA,kBAAC+J,EAAA,EAAD,KACI,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK6L,aAAxE,aAIN,kBAAC9J,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMqU,sBAAuB5I,OAAQ1C,KAAKqL,4BACtE,kBAACrJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKqL,4BAA1B,6CACA,kBAACpJ,EAAA,EAAD,sHAGA,kBAACc,EAAA,EAAD,KACA,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK+L,UAAxE,WADA,IACoG,IACpG,kBAACjT,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKqL,4BAAxE,YAIF,kBAACtJ,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMmU,gBAAiB1I,OAAQ1C,KAAKmL,iBAChE,kBAACnJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKmL,iBAA1B,+BACA,kBAAClJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnC,KAAKiM,YACnB,kBAAC7J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,mBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOnH,KAAK,OAAO9C,GAAG,OAAOkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKuS,aAAavS,OAE5E,kBAACX,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBwJ,KAAK,UAAxE,WALF,IAKsG,OAK1G,kBAACT,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMiU,mBAAoBxI,OAAQ1C,KAAKiL,oBACnE,kBAACjJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKiL,oBAA1B,+BACA,kBAAChJ,EAAA,EAAD,0GAGA,kBAACc,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKiL,oBAAxE,cASd,kBAACtJ,EAAA,EAAD,CAAKC,MAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,qBAMJ,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,cAMJ,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,oBAOR,kBAACoK,GAAA,EAAD,CAAYlB,UAAW5L,KAAK/I,MAAM2U,WAC9B,kBAACmB,GAAA,EAAD,CAASC,MAAM,KACX,0CAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAM6W,GAAoBtH,IAAKnD,KAAKpF,mBAA3F,mBAAkHoF,KAAKzH,IAAvH,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,MAcR,kBAACkU,GAAA,EAAD,CAASC,MAAM,KACX,yCAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAM8W,GAAoBvH,IAAKnD,KAAKmM,oBAA3F,mBAAmHnM,KAAKzH,IAAxH,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,MAcR,kBAACkU,GAAA,EAAD,CAASC,MAAM,KACX,oDAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAM+W,GAAwBxH,IAAKnD,KAAKoM,oBAA/F,mBAAuHpM,KAAKzH,IAA5H,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,Y,GA/mCGuK,aCrEnBoH,GAAQ,IADE5V,EAAQ,MAGlBqY,GAAsB,GACtBC,GAAsB,GACtBC,GAAmB,GACnBpC,IAAe,EASflW,IALO,IADOD,EAAQ,MAML,CACnBE,gBAAgB,EAChBC,QAAS,KAGP7B,GAAc,GACdka,GAA0B,GAC1BC,GAA0B,GAC1BC,GAAuB,GAEvBtY,GAAe,GACfC,GAAgB,EAI0BjC,GAAS,GAAIC,GAAc,GAIrEkC,GAAiB,EACjBC,GAAe,GACfC,GAAW,GACXC,IAAkB,EAOlBE,IAAoB,EAEpBC,IAAc,EACdC,IAAc,EACdC,GAAiB,GAGjBE,IAAY,EACZC,IAAY,EAEZC,GAAqB,GAIrBE,GAAkB,CACpBrC,KAAK,GACLsC,YAAa,yBACbC,KAAM,IAGJC,GAAY,GA8nCDmX,G,kDA1nCb,aAAe,IAAD,uBACZ,gBA8aFjX,oBAAsB,WAEpB,IAAIC,EAAsB,CACxBC,IAAKX,GACLY,IAAKX,IAEP,EAAKY,OAAOC,KAAK,sBAAuBJ,IArb5B,EAwbdK,uBAAyB,SAAC7C,EAAGE,GAE3B,IAAI4C,EAAyB,CAC3BL,IAAKzC,EACL0C,IAAKxC,GAEP,EAAKyC,OAAOC,KAAK,yBAA0BE,IA9b/B,EAqcdoU,mBAAqB,WACnB,EAAKlU,SAAS,CACZmU,oBAAqB,EAAKjU,MAAMiU,sBAvctB,EA2cdC,gBAAkB,WAChB,EAAKpU,SAAS,CACZqU,iBAAkB,EAAKnU,MAAMmU,mBA7cnB,EAiddC,2BAA6B,WAC3B,EAAKtU,SAAS,CACZuU,uBAAwB,EAAKrU,MAAMqU,yBAndzB,EAuddxU,aAAe,WACb,EAAKC,SAAS,CACZC,WAAY,EAAKC,MAAMD,aAzdb,EA6ddE,0BAA4B,WAC1B,EAAKH,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BA/d7B,EAmedK,kBAAoB,WAClB,EAAKT,SAAS,CACZU,mBAAoB,EAAKR,MAAMQ,qBArerB,EAyed+R,sBAAwB,WACtB,EAAKzS,SAAS,CACV0S,oBAAqB,EAAKxS,MAAMwS,sBA3exB,EA+ed8B,uBAAyB,WACrB,EAAKxU,SAAS,CACVyU,mBAAoB,EAAKvU,MAAMuU,qBAjfzB,EAqfd5S,QAAU,WACiB,GAEvB7C,GADE,EAAKkB,MAAM4B,iBACQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,mBAEA,kBAACL,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,qBAEvB,EAAKrC,SAAS,CACZsC,cAAe,EAAKpC,MAAMoC,cAAcZ,OAAOzF,MAItB,GAAvBoC,GAAavB,QACfuB,GAAaf,KAAKnB,IAEpBkC,GAAeA,GAAaqD,OAAOxF,IACnCE,QAAQC,IAAI,oBAAqBgC,KArgBrB,EAwgBdkE,gBAAkB,WAChB,EAAKvC,SAAU,CACbwC,sBAAsB,KA1gBZ,EA8gBdC,aAAe,SAACC,GACCA,EAAEC,OAAOC,aAAeF,EAAEC,OAAOE,UAAcH,EAAEC,OAAOG,aAIvE1E,GAAiBsE,EAAEC,OAAOE,WAnhBd,EAshBdE,WAAa,WACX3G,QAAQC,IAAIiC,IACZlC,QAAQC,IAAIkC,KAxhBA,EA2hBdyE,YAAc,SAACC,GACb,EAAKtD,OAAOC,KAAK,eAAgBqD,IA5hBrB,EA+hBdC,kBAAoB,WAElB,GAAI3E,GAAiB,CAGnB,IAAI2B,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIiD,EAAU,GAEZA,EADEC,MAAM9E,GAAS,GAAG,IACV,MAEA,QAIZL,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,YAAahG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI6E,EAAS,EAAKjD,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAElKhB,GAAgBE,KAAO,EAAKc,MAAMmD,UAElC,IAAIpG,EAAO,GACPqG,EAAUC,SAASjF,GAAS,GAAG,IAAM,EACrCkF,EAAUD,SAASjF,GAAS,GAAG,IAAM,EACrCmF,EAAenF,GAAS,GAAG,GAC/BrB,EAAK,GAAKuG,EACVvG,EAAK,GAAKwG,EACVxG,EAAK,GAAKqG,EACVpE,GAAgBrC,KAAKS,KAAKL,GAC1BsB,IAAkB,OAElBnC,QAAQC,IAAI,wBAhkBF,EAokBdqH,eAAiB,SAACC,EAAWC,GAC3B,EAAKC,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAIrB,OAHK1E,GAAOkE,GAAajE,GAAOkE,IAC5BO,EAAeC,SAAW,QAEvBD,MA3kBE,EAilBdE,eAAiB,SAAC3B,GAChB,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SAnlBlB,EAulBdC,sBAAwB,WAItB,EAAK7E,OAAOC,KAAK,gBAHE,CACjByD,UAAW,mBAGb,EAAK1C,wBA5lBO,EA+lBdgS,kBAAoB,SAACjQ,GACjBA,EAAEgC,iBACFtI,QAAQC,IAAI,iBACZ,IAAIsI,EAAe,CACjBtB,UAAW,EAAKnD,MAAMmD,WAExB,EAAK1D,OAAOC,KAAK,gBAAiB+E,GAClC,EAAKhE,wBAtmBK,EAymBdiE,iBAAmB,SAAClC,GAChBA,EAAEgC,iBACFrG,GAAaK,IAAYC,IAAcC,GACvC,EAAKsB,MAAMoC,cAAc5D,IAAYC,IAAcC,GAGnDF,IAAc,EACdC,IAAc,EACdC,IAAkB,EACC,GACnB,EAAK2B,uBAnnBK,EAsnBd8B,kBAAoB,WAClBnD,GAAgBrC,KAAO,GACvB,EAAKmD,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,oBA3nBT,EA8nBdA,gBAAkB,WAChB,EAAKpC,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,sBAloBT,EAqoBd+C,aAAe,SAAC1C,EAAG2C,GAGjB,IAAInF,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIoF,EAAiBC,KAAKC,MAAQ,IAAQtH,GAE1C,GADAA,GAAiBqH,KAAKC,MAAQ,IAC1BF,EAAgB,EAGlB,GAAIrH,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,GAAc,CACjF,IAAI2I,EAAiBxH,GAAaA,GAAanB,OAAS,GAAG,GAC3DmB,GAAayH,MACbzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,OAAQf,SAAS+B,GAAiBG,EAAgB,KAAM,KAAM,EAAKvF,MAAMwU,WAAY,KAAM,KAAMxU,SAErIjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,OAAQf,SAAS+B,GAAgB,KAAM,KAAM,EAAKpF,MAAMwU,WAAY,KAAM,KAAMxU,IAKxH,GAAIpC,GAAeC,eAAgB,CAG7BE,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,IACnEmB,GAAayH,MAIf,IAAK,IAAI1I,EAAI,EAAGA,EAAIc,GAAeE,QAAQlB,OAAQE,IAAK,CACtD,IAAI2I,EAAqB7H,GAAeE,QAAQhB,GAAG,GAC/C4I,EAA0B9H,GAAeE,QAAQhB,GAAG,GACpD6I,EAAe/H,GAAeE,QAAQhB,GAAG,GAC7CiB,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAMqB,EAAoBE,EAAcD,EAAyB,KAAM,EAAK1F,MAAMwU,WAAY,KAAM,KAAMxU,IAI1IpC,GAAeE,QAAQlB,OAAS,EAChCgB,GAAeC,gBAAiB,EAIlC,GAAmB,UAAfsH,EAAyB,CAE3B,IAAIS,EAAc1H,GAAiBsE,EAAEC,OAAOE,UACxCkD,EAAgB9H,GAAanB,OAGjC,GAAIgJ,EAAc,EAGhB,GAAIC,GAAiB,GAA4C,gBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GAxuBC,EAwuB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EA1uBR,EA0uByBA,IAC7B,GAA+C,gBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAsB,CAC5DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EAlvBV,EAkvB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAIxGjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAK1GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAGrG,GAAI4F,EAAc,EAGvB,GAAIC,GAAiB,GAA4C,kBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GAzwBC,EAywB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EA3wBR,EA2wByBA,IAC7B,GAA+C,kBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAwB,CAC9DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EAnxBV,EAmxB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAI1GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAK5GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,IAG9G,EAAKuC,aAAaC,OAII,SAAf2C,GAEH5G,KAGEM,GAAW,EACbd,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYxF,GAAU,KAAM,KAAM,EAAKoB,MAAMwU,WAAY,KAAM,KAAMxU,IAIlGpB,GAAW,EAClBb,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYvF,GAAU,KAAM,KAAM,EAAKmB,MAAMwU,WAAY,KAAM,KAAMxU,IAKzGjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAMe,EAAavG,GAAUC,GAAU,KAAM,EAAKmB,MAAMwU,WAAY5V,GAAW,EAAG3C,GAAY4C,IAAWmB,IAEzIzB,IAAoB,GAEtB,EAAKyE,qBAIiB,aAAfmC,IAEH9G,KAEW,SAATmE,EAAEuD,IACJhI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,iBAAkBhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAIpJ,OAATwC,EAAEuD,IACThI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,eAAgBhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAKlKjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,KAGlK,EAAKgD,qBAEP9G,QAAQC,IAAI4B,KA1yBA,EA6yBdiI,oBAAsB,WACpBjI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,oBAAqB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAM,QAC9G,IAAIvO,EAAiB,CACnBlI,aAAcA,IAGV6G,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACgB,oBAExB1J,MAAM,0CAA2CqI,IAxzBrC,EA2zBd8N,kBAAoB,SAAClQ,GAGE,YAAjBA,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,cAGE,aAAjBjS,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,eAGE,cAAjBjS,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,gBAGnB,EAAKL,8BA70BO,EAg1Bd3I,OAAS,SAACiJ,GACJ,EAAK1U,MAAM2U,YAAcD,GACzB,EAAK5U,SAAS,CAAE6U,UAAWD,IAEnB,MAARA,GACF,EAAK5U,SAAS,CACZ0U,WAAY,gBAEdvY,GAAcka,IAEG,MAARzB,GACT,EAAK5U,SAAS,CACZ0U,WAAY,gBAEdvY,GAAcma,IAEG,MAAR1B,IACT,EAAK5U,SAAS,CACZ0U,WAAY,iBAEdvY,GAAcoa,KAp2BJ,EAw2BdzB,YAAc,SAACpS,GACbA,EAAEgC,iBACEsP,GACF,EAAKQ,0BAELR,IAAe,EACfP,GAAMrW,mBAAmB,EAAG,uBAAwB8Y,GAAqBha,GAAama,IACtF5C,GAAMrW,mBAAmB,EAAG,uBAAwB+Y,GAAqBja,GAAaoa,IACtF7C,GAAMrW,mBAAmB,EAAG,eAAgBgZ,GAAkBla,GAAaqa,IAC3E9U,YAAW,WACPyU,GAAsB,CAACG,IAAyB3U,OAAOwU,IACvDC,GAAsB,CAACG,IAAyB5U,OAAOyU,IACvDC,GAAmB,CAACG,IAAsB7U,OAAO0U,IACjD,EAAK5B,2BACN,KACHrY,GAAcka,GACd,EAAKjC,oBAx3BK,EA43BdW,cAAgB,WACdtB,GAAMrW,mBAAmB,EAAG,uBAAwB8Y,GAAqBha,GAAama,IACtF5C,GAAMrW,mBAAmB,EAAG,uBAAwB+Y,GAAqBja,GAAaoa,IACtF7C,GAAMrW,mBAAmB,EAAG,eAAgBgZ,GAAkBla,GAAaqa,IAC3E9U,YAAW,WACPyU,GAAsB,CAACG,IAAyB3U,OAAOwU,IACvDC,GAAsB,CAACG,IAAyB5U,OAAOyU,IACvDC,GAAmB,CAACG,IAAsB7U,OAAO0U,MAClD,KACHja,GAAcka,IAr4BF,EAw4BdrB,SAAW,SAACtS,GACVA,EAAEgC,iBACF,EAAK1E,SAAS,CACZgV,UAAU,KA34BA,EA+4BdC,aAAe,SAACvS,GACd,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SAj5BlB,EAq5Bd2Q,WAAa,SAACxS,GACZA,EAAEgC,iBACFtI,QAAQC,IAAI,kBAAmB,EAAK6D,MAAMoE,MAC1C,EAAK8P,mBAx5BO,EA25Bde,QAAU,WAERe,GAAsB,GACtBC,GAAsB,GACtBC,GAAmB,GACnBC,GAA0B,GAC1BC,GAA0B,GAC1BC,GAAuB,GAGvB,EAAKxB,gBAGL9W,GAAe,GAGf,EAAK+B,SAAS,CACZ6U,UAAW,MAEb,EAAKlJ,OAAO,KAGZ,EAAKuI,sBA/6BL,EAAK1S,GAAK,MACV,EAAKqC,kBAAoBuC,IAAMC,YAC/B,EAAK+O,mBAAqBhP,IAAMC,YAChC,EAAKgP,mBAAqBjP,IAAMC,YAChC,EAAKnG,MAAQ,CACXD,WAAW,EACXa,MAAOa,MAAMC,KAAK,CAAE9E,OAAQ,IAC5BoE,SAAS,EACTC,4BAA4B,EAG5BqF,eAAe,EACfC,YAAa9E,MAAMC,KAAK,CAAE9E,OAAQ,IAClC4J,mCAAmC,EAEnClE,sBAAsB,EACtBmE,iBAAkB,UAElBrE,cAAe,GACfsE,mBAAmB,EAEnBC,WAAY,mBACZC,MAAM,GACNC,gBAAiB,GAEjB2L,oBAAoB,EACpBrP,UAAW,GAEX2D,aAAc,iCACdC,QAAS,GACTvG,mBAAmB,EAEnBoB,kBAAkB,EAClBxB,wBAAwB,EACxBF,2BAA2B,EAE3BqU,mBAAmB,EACnBI,UAAW,IAEXF,cAAe,GACfJ,uBAAuB,EACvBS,UAAU,EAEVb,oBAAoB,GAGtB,EAAKxU,OAASuH,IAAG,kBAEjB,EAAKvH,OAAOwH,GAAG,mBAAmB,SAAStK,GACzCuK,EAAWvK,MAGb,EAAK8C,OAAOwH,GAAG,cAAc,SAAS3F,GACpC6F,EAAU7F,MAGZ,EAAK7B,OAAOwH,GAAG,yBAAyB,SAASG,GAC/CjH,EAAuBiH,MAGzB,EAAK3H,OAAOwH,GAAG,yBAAyB,SAASI,GAC/C,IAAI9H,EAAM8H,EAAmB9H,IACzBC,EAAM6H,EAAmB7H,IAE7B8H,EAAoB/H,EAAKC,MAG3B,EAAKC,OAAOwH,GAAG,4BAA4B,SAASM,GAClD,IAAIhI,EAAMgI,EAAsBhI,IAC5BC,EAAM+H,EAAsB/H,IAEhCS,EAA0BV,EAAKC,MAGjC,EAAKC,OAAOwH,GAAG,4BAA4B,SAASO,GAClD,IAAIjI,EAAMiI,EAAsBjI,IAC5BC,EAAMgI,EAAsBhI,IACvBgI,EAAsBlG,KAEpBnC,IACTsI,EAAuBlI,EAAKC,MAIhC,EAAKC,OAAOwH,GAAG,uBAAuB,SAAStK,GAC7C+K,EAAoB/K,MAGtB,EAAK8C,OAAOwH,GAAG,gBAAgB,SAAStK,GACtCgL,EAAWhL,MAGb,EAAK8C,OAAOwH,GAAG,uBAAuB,SAASa,GAC7CC,EAAoBD,MAGtB,IAAMC,EAAsB,SAAAD,GAC1B,EAAKhI,SAAS,CACZgH,aAAcgB,EAAgBE,YAC9BjB,QAASe,EAAgBf,WAIvBI,EAAY,SAAA7F,GAChBnC,GAAYmC,GAGRqG,EAAa,SAAAhL,GACjB,EAAKmD,SAAS,CACZiH,QAASpK,EAAKoK,UAEhBW,EAAoB/K,EAAK8L,gBAGrBjF,EAAiB,WACrBtH,QAAQC,IAAI,2BACZ,EAAKwH,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAKrB,OAJA/H,QAAQC,IAAI,iBAAkBgC,GAAaoB,GAAKC,GAAM,IAAKD,EAAK,IAAKC,GACrC,OAA3BrB,GAAaoB,GAAKC,IAAmD,IAAlCrB,GAAaoB,GAAKC,GAAK5C,QAA4C,SAA1BuB,GAAaoB,GAAKC,IAAwD,MAArCrB,GAAaoB,GAAKC,GAAKkJ,OAAO,KAChJzE,EAAeC,SAAW,QAEvBD,MAKNqD,EAAsB,SAAC/H,EAAKC,GAChC,GAAID,EAAMpB,GAAavB,OAAQ,CAE7B,IAAIwL,EAAY,EAAKzE,kBAAkBC,QAAQC,YAAYwE,cAAc9I,EAAKC,GAG9E,GAA4B,MAAxB4I,EAAUM,OAAO,GACnB,OAEA,IAAIJ,EAAW,IAAMF,EACrB,EAAKzE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAAK8I,GAErE9E,MAIEiE,EAAyB,SAAClI,EAAKC,GACnC,GAAID,EAAMpB,GAAavB,OAAQ,CAC7BV,QAAQC,IAAIoD,GACZrD,QAAQC,IAAIqD,GAEZ,EAAKmE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAD9C,SAEhBgE,MAIErD,EAAyB,SAAAxD,GAC7B,EAAKmD,SAAS,CACZM,wBAAyB,EAAKJ,MAAMI,0BAIlCH,EAA4B,SAAAtD,GAChC,EAAKmD,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAIrCwH,EAAsB,SAAA/K,GAC1B,EAAKmD,SAAS,CACZ8G,MAAOjK,IAGT,IADA,IAAIgM,EAAgB,qBACX7L,EAAI,EAAGA,EAAI,EAAKkD,MAAM4G,MAAMhK,OAAQE,IACvCA,GAAK,EAAKkD,MAAM4G,MAAMhK,OAAS,EACjC+L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAElC6L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAAK,KAG3C,EAAKgD,SAAS,CACZ+G,gBAAiB8B,KAIfzB,EAAa,SAAAvK,GAGf,IADA,IAAIiM,EAAejM,EAAKA,KACfkM,EAAI,EAAGA,EAAID,EAAahM,OAAQiM,IAAK,CAE5C,IAAI7L,EAAI4L,EAAaC,GAAG,GAAK,EACzBxE,EAAQuE,EAAaC,GAAG,GACxB/L,EAAI8L,EAAaC,GAAG,GAAK,EAGzB/L,EAAIqB,GAAavB,QACnBuB,GAAarB,GAAGE,GAAKqH,EACrB,EAAKrE,MAAMoC,cAActF,GAAGE,GAAKqH,GAIzBvH,EAAI,EAtOE,IAuOdA,IACId,GAAYc,EAhPR,GAQM,GAwO2CE,IAAMqH,IAC7DrI,GAAYc,EAjPN,GAQM,GAyOyCE,GAAKqH,EAC1DtI,GAAOe,EAlPD,GAQM,GA0OoCE,GAAKqH,IAI3DnI,QAAQC,IAAI,iCAAkCH,IAC9C,EAAK8D,SAAS,CACZ6G,WAAYhK,EAAKsC,eAnNX,OAuNZ,EAAKsT,sBAAwB,EAAKA,sBAAsBzJ,OACxD,EAAKvI,kBAAoB,EAAKA,kBAAkBuI,OAChD,EAAKjJ,aAAe,EAAKA,aAAaiJ,OACtC,EAAK7I,0BAA4B,EAAKA,0BAA0B6I,OAChE,EAAKwL,uBAAyB,EAAKA,uBAAuBxL,OAC1D,EAAKsL,2BAA6B,EAAKA,2BAA2BtL,OAClE,EAAKoL,gBAAkB,EAAKA,gBAAgBpL,OAC5C,EAAKkL,mBAAqB,EAAKA,mBAAmBlL,OA9NtC,E,0KAmOZ9K,GAAgBqH,KAAKC,MAAQ,IAG7BxG,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS8G,KAAK5G,mBAA3E,qBAGrB4G,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GAClE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGxED,EACAC,KAGduJ,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG1H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAIjDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GACnE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGzED,EACAC,KAGduJ,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG3H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAIjDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GACnE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGzED,EACAC,KAGduJ,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG3H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,O,oJAuBjDkN,KAAKtJ,OAAOyI,e,+BAkfJ,IAAD,aACP,OAAIa,KAAK/I,MAAM8U,SACN,kBAAC,IAAD,CAAUhL,GAAIf,KAAK/I,MAAMyU,gBAGhC,yBAAKxS,QAAS,SAAAO,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,UAAUuH,QAAS,SAAAvH,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,cAAcT,UAAU,OAC3G,4BAAQmH,IAAI,4DACZ,0BAAMc,KAAK,2DAA2DC,IAAI,aAAaC,MAAM,WAC5F,kBAACC,EAAA,EAAD,CAAWpI,UAAU,cACrB,kBAACqT,GAAA,EAAD,CAAgB5K,OAAQzB,KAAK/I,MAAMD,UAAW0L,OAAQ1C,KAAKlJ,aAAc+M,MAAO,CAACyI,MAAO,QAAStT,UAAU,iBACtG,kBAACuT,GAAA,EAAD,CAAgBtT,MAAM,UAAWuT,OAAK,EAAC3I,MAAO,CAACyI,MAAO,UAAtD,qBAGA,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAcrR,KAAK,WAAW9C,GAAG,WAAWW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAAjF,uBACA,kBAACiT,GAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,GAAA,EAAD,CAAcrR,KAAK,YAAY9C,GAAG,YAAYW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAAnF,2BAIN,6BACE,kBAAC2H,EAAA,EAAD,KAEM,wBAAIpI,UAAU,aAAd,MAA8BgH,KAAK/I,MAAMmD,UAAzC,uCACA,uBAAGpB,UAAU,QAAb,4FACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QAAb,mBAGGjD,GAHH,mBAKE,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK/C,qBAAxE,uBALF,mBAOE,kBAACnE,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKkM,SAAxE,sBAPF,mBASE,kBAACpT,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKuL,wBAAxE,gBAGF,kBAACxJ,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMuU,mBAElC,kBAACvJ,EAAA,EAAD,KACI,uCADJ,8RAKI,wBAAIjJ,UAAU,SAEd,uBAAGA,UAAU,cACb,sCADA,iRAIA,sCAJA,qQAQA,wBAAIA,UAAU,SAEd,uBAAGA,UAAU,cACb,sCADA,6LAIA,sCAJA,0KAUJ,kBAAC+J,EAAA,EAAD,KACI,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK6L,aAAxE,aAIN,kBAAC9J,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMqU,sBAAuB5I,OAAQ1C,KAAKqL,4BACtE,kBAACrJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKqL,4BAA1B,6CACA,kBAACpJ,EAAA,EAAD,sHAGA,kBAACc,EAAA,EAAD,KACA,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK+L,UAAxE,WADA,IACoG,IACpG,kBAACjT,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKqL,4BAAxE,YAIF,kBAACtJ,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMmU,gBAAiB1I,OAAQ1C,KAAKmL,iBAChE,kBAACnJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKmL,iBAA1B,+BACA,kBAAClJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnC,KAAKiM,YACnB,kBAAC7J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,mBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOnH,KAAK,OAAO9C,GAAG,OAAOkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKuS,aAAavS,OAE5E,kBAACX,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBwJ,KAAK,UAAxE,WALF,IAKsG,OAK1G,kBAACT,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMiU,mBAAoBxI,OAAQ1C,KAAKiL,oBACnE,kBAACjJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKiL,oBAA1B,+BACA,kBAAChJ,EAAA,EAAD,0GAGA,kBAACc,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKiL,oBAAxE,cAQd,kBAACtJ,EAAA,EAAD,CAAKC,MAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,sBAMJ,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,oBAMJ,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,eAOR,kBAACoK,GAAA,EAAD,CAAYlB,UAAW5L,KAAK/I,MAAM2U,WAC9B,kBAACmB,GAAA,EAAD,CAASC,MAAM,KACX,wDAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAMqZ,GAAqB9J,IAAKnD,KAAKpF,mBAA5F,mBAAmHoF,KAAKzH,IAAxH,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,MAcR,kBAACkU,GAAA,EAAD,CAASC,MAAM,KACX,wDAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAMsZ,GAAqB/J,IAAKnD,KAAKmM,oBAA5F,mBAAoHnM,KAAKzH,IAAzH,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,MAcR,kBAACkU,GAAA,EAAD,CAASC,MAAM,KACX,uDAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAMuZ,GAAkBhK,IAAKnD,KAAKoM,oBAAzF,mBAAiHpM,KAAKzH,IAAtH,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,Y,GAvmCKuK,aCjErBoH,GAAQ,IADE5V,EAAQ,MAGlB4Y,GAA0B,GAC1BC,GAAyB,GACzBC,GAAqB,GACrB3C,IAAe,EASflW,IALO,IADOD,EAAQ,MAML,CACnBE,gBAAgB,EAChBC,QAAS,KAGP7B,GAAc,GACdya,GAA8B,GAC9BC,GAA6B,GAC7BC,GAAyB,GAEzB7Y,GAAe,GACfC,GAAgB,EAI0BjC,GAAS,GAAIC,GAAc,GAIrEkC,GAAiB,EACjBC,GAAe,GACfC,GAAW,GACXC,IAAkB,EAOlBE,IAAoB,EAEpBC,IAAc,EACdC,IAAc,EACdC,GAAiB,GAGjBE,IAAY,EACZC,IAAY,EAEZC,GAAqB,GAIrBE,GAAkB,CACpBrC,KAAK,GACLsC,YAAa,yBACbC,KAAM,IAGJC,GAAY,GA2pCD0X,G,kDAvpCb,aAAe,IAAD,uBACZ,gBA4cFxX,oBAAsB,WAEpB,IAAIC,EAAsB,CACxBC,IAAKX,GACLY,IAAKX,IAEP,EAAKY,OAAOC,KAAK,sBAAuBJ,IAnd5B,EAsddK,uBAAyB,SAAC7C,EAAGE,GAE3B,IAAI4C,EAAyB,CAC3BL,IAAKzC,EACL0C,IAAKxC,GAEP,EAAKyC,OAAOC,KAAK,yBAA0BE,IA5d/B,EAmedoU,mBAAqB,WACnB,EAAKlU,SAAS,CACZmU,oBAAqB,EAAKjU,MAAMiU,sBAretB,EAyedC,gBAAkB,WAChB,EAAKpU,SAAS,CACZqU,iBAAkB,EAAKnU,MAAMmU,mBA3enB,EA+edC,2BAA6B,WAC3B,EAAKtU,SAAS,CACZuU,uBAAwB,EAAKrU,MAAMqU,yBAjfzB,EAqfdxU,aAAe,WACb,EAAKC,SAAS,CACZC,WAAY,EAAKC,MAAMD,aAvfb,EA2fdE,0BAA4B,WAC1B,EAAKH,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BA7f7B,EAigBdK,kBAAoB,WAClB,EAAKT,SAAS,CACZU,mBAAoB,EAAKR,MAAMQ,qBAngBrB,EAugBd+R,sBAAwB,WACtB,EAAKzS,SAAS,CACV0S,oBAAqB,EAAKxS,MAAMwS,sBAzgBxB,EA6gBd8B,uBAAyB,WACrB,EAAKxU,SAAS,CACVyU,mBAAoB,EAAKvU,MAAMuU,qBA/gBzB,EAmhBd5S,QAAU,WACiB,GAEvB7C,GADE,EAAKkB,MAAM4B,iBACQ,kBAACC,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,mBAEA,kBAACL,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,qBAEvB,EAAKrC,SAAS,CACZsC,cAAe,EAAKpC,MAAMoC,cAAcZ,OAAOzF,MAItB,GAAvBoC,GAAavB,QACfuB,GAAaf,KAAKnB,IAEpBkC,GAAeA,GAAaqD,OAAOxF,IACnCE,QAAQC,IAAI,oBAAqBgC,KAniBrB,EAsiBdkE,gBAAkB,WAChB,EAAKvC,SAAU,CACbwC,sBAAsB,KAxiBZ,EA4iBdC,aAAe,SAACC,GACCA,EAAEC,OAAOC,aAAeF,EAAEC,OAAOE,UAAcH,EAAEC,OAAOG,aAIvE1E,GAAiBsE,EAAEC,OAAOE,WAjjBd,EAojBdE,WAAa,WACX3G,QAAQC,IAAIiC,IACZlC,QAAQC,IAAIkC,KAtjBA,EAyjBdyE,YAAc,SAACC,GACb,EAAKtD,OAAOC,KAAK,eAAgBqD,IA1jBrB,EA6jBdC,kBAAoB,WAElB,GAAI3E,GAAiB,CAGnB,IAAI2B,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIiD,EAAU,GAEZA,EADEC,MAAM9E,GAAS,GAAG,IACV,MAEA,QAIZL,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,YAAahG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI6E,EAAS,EAAKjD,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAIlKhB,GAAgBE,KAAO,EAAKc,MAAMmD,UAElC,IAAIpG,EAAO,GACPqG,EAAUC,SAASjF,GAAS,GAAG,IAAM,EACrCkF,EAAUD,SAASjF,GAAS,GAAG,IAAM,EACrCmF,EAAenF,GAAS,GAAG,GAC/BrB,EAAK,GAAKuG,EACVvG,EAAK,GAAKwG,EACVxG,EAAK,GAAKqG,EACVpE,GAAgBrC,KAAKS,KAAKL,GAC1BsB,IAAkB,OAElBnC,QAAQC,IAAI,wBAhmBF,EAomBdqH,eAAiB,SAACC,EAAWC,GAC3B,EAAKC,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAIrB,OAHK1E,GAAOkE,GAAajE,GAAOkE,IAC5BO,EAAeC,SAAW,QAEvBD,MA3mBE,EAinBdE,eAAiB,SAAC3B,GAChB,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SAnnBlB,EAunBdC,sBAAwB,WAItB,EAAK7E,OAAOC,KAAK,gBAHE,CACjByD,UAAW,mBAGb,EAAK1C,wBA5nBO,EA+nBdgS,kBAAoB,SAACjQ,GACjBA,EAAEgC,iBACFtI,QAAQC,IAAI,iBACZ,IAAIsI,EAAe,CACjBtB,UAAW,EAAKnD,MAAMmD,WAExB,EAAK1D,OAAOC,KAAK,gBAAiB+E,GAClC,EAAKhE,wBAtoBK,EAyoBdiE,iBAAmB,SAAClC,GAChBA,EAAEgC,iBACFrG,GAAaK,IAAYC,IAAcC,GACvC,EAAKsB,MAAMoC,cAAc5D,IAAYC,IAAcC,GAGnDF,IAAc,EACdC,IAAc,EACdC,IAAkB,EACC,GACnB,EAAK2B,uBAnpBK,EAspBd8B,kBAAoB,WAClBnD,GAAgBrC,KAAO,GACvB,EAAKmD,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKC,iBAA3E,oBA3pBT,EA+pBdA,gBAAkB,WAIhB,EAAKpC,SAAS,CACZ8B,kBAAkB,IAEpB9C,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS,EAAKE,mBAA3E,sBAtqBT,EAyqBd+C,aAAe,SAAC1C,EAAG2C,GAGjB,IAAInF,EAAQ,IACP,EAAKA,MAAM4B,mBACd5B,EAAQ,KAIV,IAAIoF,EAAiBC,KAAKC,MAAQ,IAAQtH,GAE1C,GADAA,GAAiBqH,KAAKC,MAAQ,IAC1BF,EAAgB,EAGlB,GAAIrH,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,GAAc,CACjF,IAAI2I,EAAiBxH,GAAaA,GAAanB,OAAS,GAAG,GAC3DmB,GAAayH,MACbzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,OAAQf,SAAS+B,GAAiBG,EAAgB,KAAM,KAAM,EAAKvF,MAAMwU,WAAY,KAAM,KAAMxU,SAErIjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,OAAQf,SAAS+B,GAAgB,KAAM,KAAM,EAAKpF,MAAMwU,WAAY,KAAM,KAAMxU,IAKxH,GAAIpC,GAAeC,eAAgB,CAG7BE,GAAanB,OAAS,GAAiD,QAA5CmB,GAAaA,GAAanB,OAAS,GAAG,IACnEmB,GAAayH,MAIf,IAAK,IAAI1I,EAAI,EAAGA,EAAIc,GAAeE,QAAQlB,OAAQE,IAAK,CACtD,IAAI2I,EAAqB7H,GAAeE,QAAQhB,GAAG,GAC/C4I,EAA0B9H,GAAeE,QAAQhB,GAAG,GACpD6I,EAAe/H,GAAeE,QAAQhB,GAAG,GAC7CiB,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAMqB,EAAoBE,EAAcD,EAAyB,KAAM,EAAK1F,MAAMwU,WAAY,KAAM,KAAMxU,IAI1IpC,GAAeE,QAAQlB,OAAS,EAChCgB,GAAeC,gBAAiB,EAIlC,GAAmB,UAAfsH,EAAyB,CAE3B,IAAIS,EAAc1H,GAAiBsE,EAAEC,OAAOE,UACxCkD,EAAgB9H,GAAanB,OAGjC,GAAIgJ,EAAc,EAGhB,GAAIC,GAAiB,GAA4C,gBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GA5wBC,EA4wB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EA9wBR,EA8wByBA,IAC7B,GAA+C,gBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAsB,CAC5DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EAtxBV,EAsxB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAIxGjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAK1GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,cAAe,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAGrG,GAAI4F,EAAc,EAGvB,GAAIC,GAAiB,GAA4C,kBAAvC9H,GAAa8H,EAAgB,GAAG,SAKrD,GAAIA,GA7yBC,EA6yB6B,CACrC,IAAIC,GAAU,EACd,IAAShJ,EAAI,EAAGA,EA/yBR,EA+yByBA,IAC7B,GAA+C,kBAA3CiB,GAAa8H,EAAgB,EAAI/I,GAAG,GAAwB,CAC9DgJ,GAAU,EACV,MAIN,GAAIA,EAAS,CACX,IAAShJ,EAAI,EAAGA,EAvzBV,EAuzB2BA,IAC7BiB,GAAayH,MAEjBzH,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAI1GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,SAK5GjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,gBAAiB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAMxU,IAG9G,EAAKuC,aAAaC,OAII,SAAf2C,GAEH5G,KAGEM,GAAW,EACbd,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYxF,GAAU,KAAM,KAAM,EAAKoB,MAAMwU,WAAY,KAAM,KAAMxU,IAIlGpB,GAAW,EAClBb,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYvF,GAAU,KAAM,KAAM,EAAKmB,MAAMwU,WAAY,KAAM,KAAMxU,IAKzGjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAMe,EAAavG,GAAUC,GAAU,KAAM,EAAKmB,MAAMwU,WAAY5V,GAAW,EAAG3C,GAAY4C,IAAWmB,IAEzIzB,IAAoB,GAEtB,EAAKyE,qBAIiB,aAAfmC,IAEH9G,KAEW,SAATmE,EAAEuD,IACJhI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,iBAAkBhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAIpJ,OAATwC,EAAEuD,IACThI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,eAAgBhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,IAKlKjC,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,WAAYhG,GAAS,GAAG,GAAIA,GAAS,GAAG,GAAI,KAAM,EAAK4B,MAAMwU,WAAYpW,GAAS,GAAG,GAAK,EAAGnC,GAAYmC,GAAS,GAAG,IAAK4B,KAGlK,EAAKgD,qBAEP9G,QAAQC,IAAI4B,KA90BA,EAi1BdiI,oBAAsB,WACpBjI,GAAaX,KAAK,CAAC,EAAK4C,MAAMoE,KAAM,oBAAqB,KAAM,KAAM,KAAM,EAAKpE,MAAMwU,WAAY,KAAM,KAAM,QAC9G,IAAIvO,EAAiB,CACnBlI,aAAcA,IAGV6G,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACgB,oBAExB1J,MAAM,yCAA0CqI,IA51BpC,EA+1Bd8N,kBAAoB,SAAClQ,GAEE,YAAjBA,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,cAGE,aAAjBjS,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,eAGE,cAAjBjS,EAAEC,OAAO2B,MACX,EAAKtE,SAAS,CACZ2U,cAAe,gBAGnB,EAAKL,8BAh3BO,EAm3Bd3I,OAAS,SAACiJ,GACJ,EAAK1U,MAAM2U,YAAcD,GACzB,EAAK5U,SAAS,CAAE6U,UAAWD,IAEnB,MAARA,GACF,EAAK5U,SAAS,CACZ0U,WAAY,qBAEdvY,GAAcya,IAEG,MAARhC,GACT,EAAK5U,SAAS,CACZ0U,WAAY,kBAEdvY,GAAc0a,IAEG,MAARjC,IACT,EAAK5U,SAAS,CACZ0U,WAAY,eAEdvY,GAAc2a,KAv4BJ,EA24BdhC,YAAc,SAACpS,GACbA,EAAEgC,iBACEsP,GACF,EAAKQ,0BAELR,IAAe,EACfP,GAAMrW,mBAAmB,EAAG,kBAAmBqZ,GAAyBva,GAAa0a,IACrFnD,GAAMrW,mBAAmB,EAAG,iBAAkBsZ,GAAwBxa,GAAa2a,IACnFpD,GAAMrW,mBAAmB,EAAG,aAAcuZ,GAAoBza,GAAa4a,IAC3ErV,YAAW,WACPgV,GAA0B,CAACG,IAA6BlV,OAAO+U,IAC/DC,GAAyB,CAACG,IAA4BnV,OAAOgV,IAC7DC,GAAqB,CAACG,IAAwBpV,OAAOiV,IACrD,EAAKnC,2BACN,KACHrY,GAAcya,GACd,EAAKxC,oBA35BK,EA+5BdW,cAAgB,WACdtB,GAAMrW,mBAAmB,EAAG,kBAAmBqZ,GAAyBva,GAAa0a,IACrFnD,GAAMrW,mBAAmB,EAAG,iBAAkBsZ,GAAwBxa,GAAa2a,IACnFpD,GAAMrW,mBAAmB,EAAG,aAAcuZ,GAAoBza,GAAa4a,IAC3ErV,YAAW,WACPgV,GAA0B,CAACG,IAA6BlV,OAAO+U,IAC/DC,GAAyB,CAACG,IAA4BnV,OAAOgV,IAC7DC,GAAqB,CAACG,IAAwBpV,OAAOiV,MACtD,KACHxa,GAAcya,IAx6BF,EA26Bd5B,SAAW,SAACtS,GACVA,EAAEgC,iBACF,EAAK1E,SAAS,CACZgV,UAAU,KA96BA,EAk7BdC,aAAe,SAACvS,GACd,EAAK1C,SAAL,eACK0C,EAAEC,OAAO2B,KAAO5B,EAAEC,OAAO4B,SAp7BlB,EAw7Bd2Q,WAAa,SAACxS,GACZA,EAAEgC,iBACFtI,QAAQC,IAAI,kBAAmB,EAAK6D,MAAMoE,MAC1C,EAAK8P,mBA37BO,EA87Bde,QAAU,WAERsB,GAA0B,GAC1BC,GAAyB,GACzBC,GAAqB,GACrBC,GAA8B,GAC9BC,GAA6B,GAC7BC,GAAyB,GAGzB,EAAK/B,gBAGL9W,GAAe,GAGf,EAAK+B,SAAS,CACZ6U,UAAW,MAEb,EAAKlJ,OAAO,KAGZ,EAAKuI,sBAl9BL,EAAK1S,GAAK,MACV,EAAKqC,kBAAoBuC,IAAMC,YAC/B,EAAK+O,mBAAqBhP,IAAMC,YAChC,EAAKgP,mBAAqBjP,IAAMC,YAChC,EAAKnG,MAAQ,CACXD,WAAW,EACXa,MAAOa,MAAMC,KAAK,CAAE9E,OAAQ,IAC5BoE,SAAS,EACTC,4BAA4B,EAG5BqF,eAAe,EACfC,YAAa9E,MAAMC,KAAK,CAAE9E,OAAQ,IAClC4J,mCAAmC,EAEnClE,sBAAsB,EACtBmE,iBAAkB,UAElBrE,cAAe,GACfsE,mBAAmB,EAEnBC,WAAY,mBACZC,MAAM,GACNC,gBAAiB,GAEjB2L,oBAAoB,EACpBrP,UAAW,GAEX2D,aAAc,iCACdC,QAAS,GACTvG,mBAAmB,EAEnBoB,kBAAkB,EAClBxB,wBAAwB,EACxBF,2BAA2B,EAE3BqU,mBAAmB,EACnBI,UAAW,IAEXF,cAAe,GACfJ,uBAAuB,EACvBS,UAAU,EAEVb,oBAAoB,GAGtB,EAAKxU,OAASuH,IAAG,kBAEjB,EAAKvH,OAAOwH,GAAG,mBAAmB,SAAStK,GACzCuK,EAAWvK,MAGb,EAAK8C,OAAOwH,GAAG,cAAc,SAAS3F,GACpC6F,EAAU7F,MAGZ,EAAK7B,OAAOwH,GAAG,yBAAyB,SAASG,GAC/CjH,EAAuBiH,MAGzB,EAAK3H,OAAOwH,GAAG,yBAAyB,SAASI,GAC/C,IAAI9H,EAAM8H,EAAmB9H,IACzBC,EAAM6H,EAAmB7H,IAE7B8H,EAAoB/H,EAAKC,MAG3B,EAAKC,OAAOwH,GAAG,4BAA4B,SAASM,GAClD,IAAIhI,EAAMgI,EAAsBhI,IAC5BC,EAAM+H,EAAsB/H,IAEhCS,EAA0BV,EAAKC,MAGjC,EAAKC,OAAOwH,GAAG,4BAA4B,SAASO,GAClD,IAAIjI,EAAMiI,EAAsBjI,IAC5BC,EAAMgI,EAAsBhI,IACvBgI,EAAsBlG,KAEpBnC,IACTsI,EAAuBlI,EAAKC,MAIhC,EAAKC,OAAOwH,GAAG,uBAAuB,SAAStK,GAC7C+K,EAAoB/K,MAGtB,EAAK8C,OAAOwH,GAAG,gBAAgB,SAAStK,GACtCgL,EAAWhL,MAOb,EAAK8C,OAAOwH,GAAG,uBAAuB,SAASa,GAC7CC,EAAoBD,MAGtB,IAAMC,EAAsB,SAAAD,GAC1B,EAAKhI,SAAS,CACZgH,aAAcgB,EAAgBE,YAC9BjB,QAASe,EAAgBf,WA+BvBI,EAAY,SAAA7F,GAChBnC,GAAYmC,GAGRqG,EAAa,SAAAhL,GACjB,EAAKmD,SAAS,CACZiH,QAASpK,EAAKoK,UAEhBW,EAAoB/K,EAAK8L,gBAGrBjF,EAAiB,WACrBtH,QAAQC,IAAI,2BACZ,EAAKwH,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,MAAO,SAASxE,EAAKC,EAAKwE,GACzB,IAAIC,EAAiB,GAKrB,OAJA/H,QAAQC,IAAI,iBAAkBgC,GAAaoB,GAAKC,GAAM,IAAKD,EAAK,IAAKC,GACrC,OAA3BrB,GAAaoB,GAAKC,IAAmD,IAAlCrB,GAAaoB,GAAKC,GAAK5C,QAA4C,SAA1BuB,GAAaoB,GAAKC,IAAwD,MAArCrB,GAAaoB,GAAKC,GAAKkJ,OAAO,KAChJzE,EAAeC,SAAW,QAEvBD,MAKNqD,EAAsB,SAAC/H,EAAKC,GAChC,GAAID,EAAMpB,GAAavB,OAAQ,CAE7B,IAAIwL,EAAY,EAAKzE,kBAAkBC,QAAQC,YAAYwE,cAAc9I,EAAKC,GAG9E,GAA4B,MAAxB4I,EAAUM,OAAO,GACnB,OAEA,IAAIJ,EAAW,IAAMF,EACrB,EAAKzE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAAK8I,GAErE9E,MAIEiE,EAAyB,SAAClI,EAAKC,GACnC,GAAID,EAAMpB,GAAavB,OAAQ,CAC7BV,QAAQC,IAAIoD,GACZrD,QAAQC,IAAIqD,GAEZ,EAAKmE,kBAAkBC,QAAQC,YAAY2E,cAAcjJ,EAAKC,EAD9C,SAEhBgE,MAIErD,EAAyB,SAAAxD,GAC7B,EAAKmD,SAAS,CACZM,wBAAyB,EAAKJ,MAAMI,0BAIlCH,EAA4B,SAAAtD,GAChC,EAAKmD,SAAS,CACZI,2BAA4B,EAAKF,MAAME,6BAIrCwH,EAAsB,SAAA/K,GAC1B,EAAKmD,SAAS,CACZ8G,MAAOjK,IAGT,IADA,IAAIgM,EAAgB,qBACX7L,EAAI,EAAGA,EAAI,EAAKkD,MAAM4G,MAAMhK,OAAQE,IACvCA,GAAK,EAAKkD,MAAM4G,MAAMhK,OAAS,EACjC+L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAElC6L,GAAiB,EAAK3I,MAAM4G,MAAM9J,GAAK,KAG3C,EAAKgD,SAAS,CACZ+G,gBAAiB8B,KAIfzB,EAAa,SAAAvK,GAGf,IADA,IAAIiM,EAAejM,EAAKA,KACfkM,EAAI,EAAGA,EAAID,EAAahM,OAAQiM,IAAK,CAE5C,IAAI7L,EAAI4L,EAAaC,GAAG,GAAK,EACzBxE,EAAQuE,EAAaC,GAAG,GACxB/L,EAAI8L,EAAaC,GAAG,GAAK,EAGzB/L,EAAIqB,GAAavB,QACnBuB,GAAarB,GAAGE,GAAKqH,EACrB,EAAKrE,MAAMoC,cAActF,GAAGE,GAAKqH,GAIzBvH,EAAI,EArQE,IAsQdA,IACId,GAAYc,EA/QR,GAQM,GAuQ2CE,IAAMqH,IAC7DrI,GAAYc,EAhRN,GAQM,GAwQyCE,GAAKqH,EAC1DtI,GAAOe,EAjRD,GAQM,GAyQoCE,GAAKqH,IAI3DnI,QAAQC,IAAI,iCAAkCH,IAC9C,EAAK8D,SAAS,CACZ6G,WAAYhK,EAAKsC,eAlPX,OAsPZ,EAAKsT,sBAAwB,EAAKA,sBAAsBzJ,OACxD,EAAKvI,kBAAoB,EAAKA,kBAAkBuI,OAChD,EAAKjJ,aAAe,EAAKA,aAAaiJ,OACtC,EAAK7I,0BAA4B,EAAKA,0BAA0B6I,OAChE,EAAKwL,uBAAyB,EAAKA,uBAAuBxL,OAC1D,EAAKsL,2BAA6B,EAAKA,2BAA2BtL,OAClE,EAAKoL,gBAAkB,EAAKA,gBAAgBpL,OAC5C,EAAKkL,mBAAqB,EAAKA,mBAAmBlL,OA7PtC,E,0KAkQZ9K,GAAgBqH,KAAKC,MAAQ,IAE7BxG,GAAqB,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,UAAUC,QAAS8G,KAAK5G,mBAA3E,qBAGrB4G,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GAClE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGxED,EACAC,KAGduJ,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG1H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC3FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKpF,kBAAkBC,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GACzG7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAIjDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GACnE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGzED,EACAC,KAGduJ,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG3H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKmM,mBAAmBtR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAIjDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,eAAe,SAASC,EAAKC,GACnE,SAARA,IACFhN,QAAQC,IAAI8M,GAGRA,EAAI,GAAG,KAAOA,EAAI,GAAG,IAA8B,MAAxBA,EAAI,GAAG,GAAGP,OAAO,IAA4B,UAAdO,EAAI,GAAG,KACnE/M,QAAQC,IAAI,WACZiC,GAAW6K,EACX5K,IAAkB,GAGL,GACA,EACbE,IAAoB,OAK1BwK,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,qBAAqB,SAASzJ,EAAKC,GAGzED,EACAC,KAGduJ,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASzJ,EAAK4J,EAAQC,EAAMC,EAASC,EAAkBC,GAG3H3K,GAAWW,EACXV,GAAWsK,EACX5K,IAAoB,KAGtBwK,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,wBAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,QAItDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQC,GAC5FvN,QAAQC,IAAI,oBAAqBN,GACnB,2BAAV4N,GACF7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,QAASvB,MAElD+B,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,OAAQvB,QAIrDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,OAGjDkN,KAAKoM,mBAAmBvR,QAAQC,YAAYmF,QAAQ,kBAAkB,SAASnN,EAAO2N,EAAQE,EAAcD,GAC1G7L,GAAeC,gBAAiB,EAChCD,GAAeE,QAAQV,KAAK,CAAC,WAAY,KAAMvB,O,oJAuBjDkN,KAAKtJ,OAAOyI,e,+BAufJ,IAAD,aACP,OAAIa,KAAK/I,MAAM8U,SACN,kBAAC,IAAD,CAAUhL,GAAIf,KAAK/I,MAAMyU,gBAGhC,yBAAKxS,QAAS,SAAAO,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,UAAUuH,QAAS,SAAAvH,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,cAAcT,UAAU,OAC3G,4BAAQmH,IAAI,4DACZ,0BAAMc,KAAK,2DAA2DC,IAAI,aAAaC,MAAM,WAC5F,kBAACC,EAAA,EAAD,CAAWpI,UAAU,cACpB,kBAACqT,GAAA,EAAD,CAAgB5K,OAAQzB,KAAK/I,MAAMD,UAAW0L,OAAQ1C,KAAKlJ,aAAc+M,MAAO,CAACyI,MAAO,QAAStT,UAAU,iBACrG,kBAACuT,GAAA,EAAD,CAAgBtT,MAAM,UAAWuT,OAAK,EAAC3I,MAAO,CAACyI,MAAO,UAAtD,qBAGA,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAcrR,KAAK,WAAW9C,GAAG,WAAWW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAAjF,uBACA,kBAACiT,GAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,GAAA,EAAD,CAAcrR,KAAK,aAAa9C,GAAG,aAAaW,QAAS,SAAAO,GAAC,OAAI,EAAKkQ,kBAAkBlQ,KAArF,4BAIR,6BACE,kBAAC2H,EAAA,EAAD,KACM,wBAAIpI,UAAU,aAAd,MAA8BgH,KAAK/I,MAAMmD,UAAzC,sCACA,uBAAGpB,UAAU,QAAb,4FACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QAAb,mBAGGjD,GAHH,mBAKE,kBAAC+C,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK/C,qBAAxE,uBALF,mBAOE,kBAACnE,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKkM,SAAxE,sBAPF,mBASE,kBAACpT,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKuL,wBAAxE,gBAGF,kBAACxJ,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMuU,mBAElC,kBAACvJ,EAAA,EAAD,KACI,uCADJ,6PAII,wBAAIjJ,UAAU,SAEd,uBAAGA,UAAU,cACb,0CADA,mwBAOA,sCAPA,4lBAeJ,kBAAC+J,EAAA,EAAD,KACI,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK6L,aAAxE,aAIN,kBAAC9J,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMqU,sBAAuB5I,OAAQ1C,KAAKqL,4BACtE,kBAACrJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKqL,4BAA1B,6CACA,kBAACpJ,EAAA,EAAD,sHAGA,kBAACc,EAAA,EAAD,KACA,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAK+L,UAAxE,WADA,IACoG,IACpG,kBAACjT,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKqL,4BAAxE,YAIF,kBAACtJ,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMmU,gBAAiB1I,OAAQ1C,KAAKmL,iBAChE,kBAACnJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKmL,iBAA1B,+BACA,kBAAClJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAUnC,KAAKiM,YACnB,kBAAC7J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,aAAX,mBACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOnH,KAAK,OAAO9C,GAAG,OAAOkK,SAAU,SAAAhJ,GAAC,OAAI,EAAKuS,aAAavS,OAE5E,kBAACX,EAAA,EAAD,CAAQC,KAAK,KAAKE,MAAM,UAAUD,UAAU,uBAAuBwJ,KAAK,UAAxE,WALF,IAKsG,OAK1G,kBAACT,EAAA,EAAD,CAAOhJ,KAAK,KAAK0I,OAAQzB,KAAK/I,MAAMiU,mBAAoBxI,OAAQ1C,KAAKiL,oBACnE,kBAACjJ,EAAA,EAAD,CAAaU,OAAQ1C,KAAKiL,oBAA1B,+BACA,kBAAChJ,EAAA,EAAD,0GAGA,kBAACc,EAAA,EAAD,KACE,kBAACjK,EAAA,EAAD,CAAQC,KAAK,KAAKC,UAAU,iBAAiBC,MAAM,OAAOC,QAAS8G,KAAKiL,oBAAxE,cASd,kBAACtJ,EAAA,EAAD,CAAKC,MAAI,GACL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,qBAMJ,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,mBAMJ,kBAACb,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACI9I,UAAW4T,KAAW,CAAEC,OAAiC,MAAzB7M,KAAK/I,MAAM2U,YAC3C1S,QAAS,WAAQ,EAAKwJ,OAAO,OAFjC,qBAOR,kBAACoK,GAAA,EAAD,CAAYlB,UAAW5L,KAAK/I,MAAM2U,WAC9B,kBAACmB,GAAA,EAAD,CAASC,MAAM,KACX,sDAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAM4Z,GAAyBrK,IAAKnD,KAAKpF,mBAAhG,mBAAuHoF,KAAKzH,IAA5H,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,MAcR,kBAACkU,GAAA,EAAD,CAASC,MAAM,KACX,oDAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAM6Z,GAAwBtK,IAAKnD,KAAKmM,oBAA/F,mBAAuHnM,KAAKzH,IAA5H,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,MAcR,kBAACkU,GAAA,EAAD,CAASC,MAAM,KACX,+CAGA,yBAAKzU,GAAK,kBAAkB0K,SAAU,SAAAxJ,GAAC,OAAI,EAAK0C,aAAa1C,EAAG,WAAYyJ,SAAS,KACjF,kBAAC,KAAD,GAAUlK,UAAU,eAAeT,GAAI,gBAAgB3E,KAAM8Z,GAAoBvK,IAAKnD,KAAKoM,oBAA3F,mBAAmHpM,KAAKzH,IAAxH,4BACgB,GADhB,4BAEgB,GAFhB,sBAGU,QAHV,uBAIW,OAJX,0BAKc,QALd,2BAMe,MANf,6BAOiB,GAPjB,0BAQc,GARd,0BASeyH,KAAK/I,MAAM4B,kBAT1B,Y,GApoCIuK,aCmBT2K,IApFF,IALKnZ,EAAQ,M,kDASxB,aAAe,IAAD,8BACZ,gBAeFkQ,2BAA6B,WAC3B,EAAK/N,SAAS,CACZgO,4BAA6B,EAAK9N,MAAM8N,8BAlB9B,EAsBdC,uBAAyB,WACvB,EAAKjO,SAAS,CACZkO,wBAAyB,EAAKhO,MAAMgO,uBACpCF,4BAA6B,EAAK9N,MAAM8N,8BAzB9B,EA6BdG,wBAA0B,WACxB,EAAKnO,SAAS,CACZoO,yBAA0B,EAAKlO,MAAMkO,wBACrCJ,4BAA6B,EAAK9N,MAAM8N,8BAhC9B,EAoCdK,yBAA2B,WACzB,EAAKN,8BArCO,EAwCdwC,YAAc,SAACC,GACb,IAAIC,EAAUD,EAAM7N,OAAO+N,MAAM,GAGjCE,wBAAcH,GAAS,SAACI,EAAKC,GACxBD,EACDzU,QAAQC,IAAIwU,GAGZ,EAAK7Q,SAAS,CACZsG,KAAMwK,EAAKxK,KACXrF,KAAM6P,EAAK7P,WAjDjB,EAAKf,MAAQ,CACXe,KAAM,GACNqF,KAAM,GACNC,MAAO,GACPyH,4BAA4B,EAC5BE,wBAAwB,EACxBE,yBAAyB,GAG3B,EAAKL,2BAA6B,EAAKA,2BAA2B/E,OAClE,EAAKiF,uBAAyB,EAAKA,uBAAuBjF,OAC1D,EAAKmF,wBAA0B,EAAKJ,2BAA2B/E,OAbnD,E,qDA4DZ,OACE,yBAAK/G,UAAU,OAEV,kBAAC,IAAD,CAAYgV,SAAQ,UAAKC,yBACpB,6BAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWC,GAAaC,OAAK,IAC7C,kBAAC,IAAD,CAAOH,KAAK,UAAUC,UAAWhK,KACjC,kBAAC,IAAD,CAAO+J,KAAK,SAASC,UAAW9X,KAChC,kBAAC,IAAD,CAAO6X,KAAK,YAAYC,UAAWnD,KACnC,kBAAC,IAAD,CAAOkD,KAAK,cAAcC,UAAWZ,KACrC,kBAAC,IAAD,CAAOW,KAAK,aAAaC,UAAWL,a,GA1EtC1K,cC3BEkL,QACW,cAA7BC,OAAOnP,SAASoP,UAEe,UAA7BD,OAAOnP,SAASoP,UAEhBD,OAAOnP,SAASoP,SAASC,MACvB,2D,OCVNC,IAASC,OAIP,kBAAC,GAAD,MACA/N,SAASgO,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtb,MAAK,SAAAub,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhc,QAAQgc,MAAMA,EAAMnV,c","file":"static/js/main.6065403e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","class Utils {\r\n    load_simulation = (index, simulation_type, buffer, buffer_copy, col_headers) => {\r\n        console.log(\"simulation type is: \", simulation_type);\r\n        this.fill_col_headers(col_headers, simulation_type);\r\n        let simulation = \"\";\r\n        if (simulation_type == \"attendance\" || simulation_type == \"grade_book\") {\r\n            simulation = \"academic\";\r\n        }\r\n        else if (simulation_type == \"employee_schedule_v1\" || simulation_type == \"employee_schedule_v2\" || simulation_type == \"progress_log\") {\r\n            simulation = \"management\";\r\n        } else if (simulation_type == \"check_book\" || simulation_type == \"monthly_expense\" || simulation_type == \"monthly_income\") {\r\n            simulation = \"financing\";\r\n        }\r\n\r\n        let ATT_NUM = 0;\r\n        if (simulation_type == \"attendance\") {\r\n            ATT_NUM = 9;\r\n        } else if (simulation_type == \"grade_book\") {\r\n            ATT_NUM = 17;\r\n        }\r\n        else if (simulation_type == \"check_book\") {\r\n            ATT_NUM = 7;\r\n        } else if (simulation_type == \"monthly_expense\") {\r\n            ATT_NUM = 14;\r\n        } else if (simulation_type == \"monthly_income\") {\r\n            ATT_NUM = 14;\r\n        } else if (simulation_type == \"employee_schedule_v1\") {\r\n            ATT_NUM = 9;\r\n        } else if (simulation_type == \"employee_schedule_v2\") {\r\n            ATT_NUM = 8;\r\n        } else if (simulation_type == \"progress_log\") {\r\n            ATT_NUM = 7;\r\n        }\r\n\r\n        let url = '/' + simulation + '/' + simulation_type + '/fetch-fifty-rows/' + index\r\n        fetch(url)\r\n        .then(res => res.json())      \r\n        .then(data => {\r\n            if (data.length === 0) {\r\n                console.log(\"No data is fetched by fetchMoreRows function\");\r\n                this.add_empty_rows(50, ATT_NUM, buffer, buffer_copy);\r\n            } else {\r\n                \r\n                //load returned data into the buffer\r\n                for (var i = 0; i < data.length; i++) {\r\n\r\n                    var temp = []\r\n                    for (var j = 0; j < ATT_NUM; j++) {\r\n                        if (simulation_type == \"attendance\") {  // attendance\r\n                            if (j == 0) {\r\n                                temp[j] = data[i]['ID'];\r\n                            }\r\n                            else if (j == 1) {\r\n                                temp[j] = data[i]['name'];\r\n                            }\r\n                            else {\r\n                                temp[j] = \"\";\r\n                            }\r\n                        }\r\n                        if (simulation_type == \"grade_book\") {      // grade book \r\n                            if (j == 0) {temp[j] = data[i]['ID']}\r\n                            if (j == 1) {temp[j] = data[i]['name']}\r\n                            if (j == 2) {temp[j] = data[i]['MP1']}\r\n                            if (j == 3) {temp[j] = data[i]['MP2']}\r\n                            if (j == 4) {temp[j] = data[i]['MP3']}\r\n                            if (j == 5) {temp[j] = data[i]['MP4']}\r\n                            if (j == 6) {temp[j] = data[i]['Lab1']}\r\n                            if (j == 7) {temp[j] = data[i]['Lab2']}\r\n                            if (j == 8) {temp[j] = data[i]['Lab3']}\r\n                            if (j == 9) {temp[j] = data[i]['Lab4']}\r\n                            if (j == 10) {temp[j] = data[i]['Lab5']}\r\n                            if (j == 11) {temp[j] = data[i]['Lab6']}\r\n                            if (j == 12) {temp[j] = data[i]['Lab7']}\r\n                            if (j == 13) {temp[j] = data[i]['Exam1']}\r\n                            if (j == 14) {temp[j] = data[i]['Exam2']}\r\n                            if (j == 15) {temp[j] = data[i]['Final']}\r\n                            if (j == 16) {temp[j] = data[i]['Overall']}\r\n                        } else if (simulation_type == \"check_book\") {    // check book\r\n                            if (j == 0) {temp[j] = data[i]['id']}\r\n                            if (j == 1) {temp[j] = data[i]['number']}\r\n                            if (j == 2) {temp[j] = data[i]['date']}\r\n                            if (j == 3) {temp[j] = data[i]['transaction']}\r\n                            if (j == 4) {temp[j] = data[i]['withdraw']}\r\n                            if (j == 5) {temp[j] = data[i]['deposit']}\r\n                            if (j == 6) {temp[j] = data[i]['balance']}\r\n                        } else if (simulation_type == \"monthly_expense\") { // monthly expense\r\n                            if (j == 0) {temp[j] = data[i]['id']}\r\n                            if (j == 1) {temp[j] = data[i]['expenses']}\r\n                            if (j == 2) {temp[j] = data[i]['Jan']}\r\n                            if (j == 3) {temp[j] = data[i]['Feb']}\r\n                            if (j == 4) {temp[j] = data[i]['Mar']}\r\n                            if (j == 5) {temp[j] = data[i]['Apr']}\r\n                            if (j == 6) {temp[j] = data[i]['May']}\r\n                            if (j == 7) {temp[j] = data[i]['Jun']}\r\n                            if (j == 8) {temp[j] = data[i]['Jul']}\r\n                            if (j == 9) {temp[j] = data[i]['Aug']}\r\n                            if (j == 10) {temp[j] = data[i]['Sep']}\r\n                            if (j == 11) {temp[j] = data[i]['Oct']}\r\n                            if (j == 12) {temp[j] = data[i]['Nov']}\r\n                            if (j == 13) {temp[j] = data[i]['Dec']}\r\n                        } else if (simulation_type == \"monthly_income\") { // monthly income\r\n                            if (j == 0) {temp[j] = data[i]['id']}\r\n                            if (j == 1) {temp[j] = data[i]['income_type']}\r\n                            if (j == 2) {temp[j] = data[i]['Jan']}\r\n                            if (j == 3) {temp[j] = data[i]['Feb']}\r\n                            if (j == 4) {temp[j] = data[i]['Mar']}\r\n                            if (j == 5) {temp[j] = data[i]['Apr']}\r\n                            if (j == 6) {temp[j] = data[i]['May']}\r\n                            if (j == 7) {temp[j] = data[i]['Jun']}\r\n                            if (j == 8) {temp[j] = data[i]['Jul']}\r\n                            if (j == 9) {temp[j] = data[i]['Aug']}\r\n                            if (j == 10) {temp[j] = data[i]['Sep']}\r\n                            if (j == 11) {temp[j] = data[i]['Oct']}\r\n                            if (j == 12) {temp[j] = data[i]['Nov']}\r\n                            if (j == 13) {temp[j] = data[i]['Dec']}\r\n                        } else if (simulation_type == \"employee_schedule_v1\") {   // schedule v1\r\n                            if (j == 0) {temp[j] = data[i]['emp_id']}\r\n                            if (j == 1) {temp[j] = data[i]['name']}\r\n                            if (j == 2) {temp[j] = data[i]['Monday']}\r\n                            if (j == 3) {temp[j] = data[i]['Tuesday']}\r\n                            if (j == 4) {temp[j] = data[i]['Wednesday']}\r\n                            if (j == 5) {temp[j] = data[i]['Thursday']}\r\n                            if (j == 6) {temp[j] = data[i]['Friday']}\r\n                            if (j == 7) {temp[j] = data[i]['Saturday']}\r\n                            if (j == 8) {temp[j] = data[i]['Sunday']}\r\n                        } else if (simulation_type == \"employee_schedule_v2\") {   // schedule v2\r\n                            if (j == 1) {temp[j] = data[i]['time_slot']}\r\n                            if (j == 2) {temp[j] = data[i]['Monday']}\r\n                            if (j == 3) {temp[j] = data[i]['Tuesday']}\r\n                            if (j == 4) {temp[j] = data[i]['Wednesday']}\r\n                            if (j == 5) {temp[j] = data[i]['Thursday']}\r\n                            if (j == 6) {temp[j] = data[i]['Friday']}\r\n                            if (j == 7) {temp[j] = data[i]['Saturday']}\r\n                            if (j == 8) {temp[j] = data[i]['Sunday']}\r\n                        } else if (simulation_type == \"progress_log\") {  // progress log\r\n                            if (j == 0) {temp[j] = data[i]['task_id']}\r\n                            if (j == 1) {temp[j] = data[i]['task']}\r\n                            if (j == 2) {temp[j] = data[i]['deadline']}\r\n                            if (j == 3) {temp[j] = data[i]['emp_id']}\r\n                            if (j == 4) {temp[j] = data[i]['name']}\r\n                            if (j == 5) {temp[j] = data[i]['hour_spent']}\r\n                            if (j == 6) {temp[j] = data[i]['progress']}\r\n                        }\r\n                    }\r\n\r\n                    buffer[i] = temp;\r\n                    buffer_copy[i] = temp.slice()\r\n                    // return buffer;\r\n                }\r\n\r\n                this.add_empty_rows(10, ATT_NUM, buffer, buffer_copy);\r\n            }\r\n        });\r\n    }\r\n\r\n    load_simulation_v2 = (index, simulation_type, buffer, buffer_copy, col_headers) => {\r\n        console.log(\"simulation type is: \", simulation_type);\r\n        this.fill_col_headers(col_headers, simulation_type);\r\n        // buffer.push(col_headers);\r\n        let simulation = \"\";\r\n        if (simulation_type == \"attendance\" || simulation_type == \"grade_book\" || simulation_type == \"student_status\") {\r\n            simulation = \"academic\";\r\n        }\r\n        else if (simulation_type == \"employee_schedule_v1\" || simulation_type == \"employee_schedule_v2\" || simulation_type == \"progress_log\") {\r\n            simulation = \"management\";\r\n        } else if (simulation_type == \"check_book\" || simulation_type == \"monthly_expense\" || simulation_type == \"monthly_income\") {\r\n            simulation = \"financing\";\r\n        }\r\n\r\n        let ATT_NUM = 0;\r\n        if (simulation_type == \"attendance\") {\r\n            ATT_NUM = 9;\r\n        } else if (simulation_type == \"grade_book\") {\r\n            ATT_NUM = 17;\r\n        }\r\n        else if (simulation_type == \"check_book\") {\r\n            ATT_NUM = 7;\r\n        } else if (simulation_type == \"monthly_expense\") {\r\n            ATT_NUM = 14;\r\n        } else if (simulation_type == \"monthly_income\") {\r\n            ATT_NUM = 14;\r\n        } else if (simulation_type == \"employee_schedule_v1\") {\r\n            ATT_NUM = 9;\r\n        } else if (simulation_type == \"employee_schedule_v2\") {\r\n            ATT_NUM = 8;\r\n        } else if (simulation_type == \"progress_log\") {\r\n            ATT_NUM = 7;\r\n        } else if (simulation_type == \"student_status\") {\r\n            ATT_NUM = 6;\r\n        }\r\n\r\n        let url = '/' + simulation + '/' + simulation_type + '/fetch-fifty-rows/' + index\r\n        fetch(url)\r\n        .then(res => res.json())      \r\n        .then(data => {\r\n            if (data.length === 0) {\r\n                console.log(\"No data is fetched by fetchMoreRows function\");\r\n                this.add_empty_rows(50, ATT_NUM, buffer, buffer_copy);\r\n            } else {\r\n                console.log(data)\r\n                //load returned data into the buffer\r\n                for (var i = 0; i < data.length; i++) {\r\n\r\n                    var temp = []\r\n                    for (var j = 0; j < ATT_NUM; j++) {\r\n                        if (simulation_type == \"attendance\") {  // attendance\r\n                            if (j == 0) {\r\n                                temp[j] = data[i]['ID'];\r\n                            }\r\n                            else if (j == 1) {\r\n                                temp[j] = data[i]['name'];\r\n                            }\r\n                            else {\r\n                                temp[j] = \"\";\r\n                            }\r\n                        }\r\n                        if (simulation_type == \"grade_book\") {      // grade book \r\n                            if (j == 0) {temp[j] = data[i]['ID']}\r\n                            if (j == 1) {temp[j] = data[i]['name']}\r\n                            if (j == 2) {temp[j] = data[i]['MP1']}\r\n                            if (j == 3) {temp[j] = data[i]['MP2']}\r\n                            if (j == 4) {temp[j] = data[i]['MP3']}\r\n                            if (j == 5) {temp[j] = data[i]['MP4']}\r\n                            if (j == 6) {temp[j] = data[i]['Lab1']}\r\n                            if (j == 7) {temp[j] = data[i]['Lab2']}\r\n                            if (j == 8) {temp[j] = data[i]['Lab3']}\r\n                            if (j == 9) {temp[j] = data[i]['Lab4']}\r\n                            if (j == 10) {temp[j] = data[i]['Lab5']}\r\n                            if (j == 11) {temp[j] = data[i]['Lab6']}\r\n                            if (j == 12) {temp[j] = data[i]['Lab7']}\r\n                            if (j == 13) {temp[j] = data[i]['Exam1']}\r\n                            if (j == 14) {temp[j] = data[i]['Exam2']}\r\n                            if (j == 15) {temp[j] = data[i]['Final']}\r\n                            if (j == 16) {temp[j] = data[i]['Overall']}\r\n                        } else if (simulation_type == \"check_book\") {    // check book\r\n                            if (j == 0) {temp[j] = data[i]['id']}\r\n                            if (j == 1) {temp[j] = data[i]['number']}\r\n                            if (j == 2) {temp[j] = data[i]['date']}\r\n                            if (j == 3) {temp[j] = data[i]['transaction']}\r\n                            if (j == 4) {temp[j] = data[i]['withdraw']}\r\n                            if (j == 5) {temp[j] = data[i]['deposit']}\r\n                            if (j == 6) {temp[j] = data[i]['balance']}\r\n                        } else if (simulation_type == \"monthly_expense\") { // monthly expense\r\n                            if (j == 0) {temp[j] = data[i]['id']}\r\n                            if (j == 1) {temp[j] = data[i]['expenses']}\r\n                            if (j == 2) {temp[j] = data[i]['Jan']}\r\n                            if (j == 3) {temp[j] = data[i]['Feb']}\r\n                            if (j == 4) {temp[j] = data[i]['Mar']}\r\n                            if (j == 5) {temp[j] = data[i]['Apr']}\r\n                            if (j == 6) {temp[j] = data[i]['May']}\r\n                            if (j == 7) {temp[j] = data[i]['Jun']}\r\n                            if (j == 8) {temp[j] = data[i]['Jul']}\r\n                            if (j == 9) {temp[j] = data[i]['Aug']}\r\n                            if (j == 10) {temp[j] = data[i]['Sep']}\r\n                            if (j == 11) {temp[j] = data[i]['Oct']}\r\n                            if (j == 12) {temp[j] = data[i]['Nov']}\r\n                            if (j == 13) {temp[j] = data[i]['Dec']}\r\n                        } else if (simulation_type == \"monthly_income\") { // monthly income\r\n                            if (j == 0) {temp[j] = data[i]['id']}\r\n                            if (j == 1) {temp[j] = data[i]['income_type']}\r\n                            if (j == 2) {temp[j] = data[i]['Jan']}\r\n                            if (j == 3) {temp[j] = data[i]['Feb']}\r\n                            if (j == 4) {temp[j] = data[i]['Mar']}\r\n                            if (j == 5) {temp[j] = data[i]['Apr']}\r\n                            if (j == 6) {temp[j] = data[i]['May']}\r\n                            if (j == 7) {temp[j] = data[i]['Jun']}\r\n                            if (j == 8) {temp[j] = data[i]['Jul']}\r\n                            if (j == 9) {temp[j] = data[i]['Aug']}\r\n                            if (j == 10) {temp[j] = data[i]['Sep']}\r\n                            if (j == 11) {temp[j] = data[i]['Oct']}\r\n                            if (j == 12) {temp[j] = data[i]['Nov']}\r\n                            if (j == 13) {temp[j] = data[i]['Dec']}\r\n                        } else if (simulation_type == \"employee_schedule_v1\") {   // schedule v1\r\n                            if (j == 0) {temp[j] = data[i]['emp_id']}\r\n                            if (j == 1) {temp[j] = data[i]['name']}\r\n                            if (j == 2) {temp[j] = data[i]['Monday']}\r\n                            if (j == 3) {temp[j] = data[i]['Tuesday']}\r\n                            if (j == 4) {temp[j] = data[i]['Wednesday']}\r\n                            if (j == 5) {temp[j] = data[i]['Thursday']}\r\n                            if (j == 6) {temp[j] = data[i]['Friday']}\r\n                            if (j == 7) {temp[j] = data[i]['Saturday']}\r\n                            if (j == 8) {temp[j] = data[i]['Sunday']}\r\n                        } else if (simulation_type == \"employee_schedule_v2\") {   // schedule v2\r\n                            if (j == 1) {temp[j] = data[i]['time_slot']}\r\n                            if (j == 2) {temp[j] = data[i]['Monday']}\r\n                            if (j == 3) {temp[j] = data[i]['Tuesday']}\r\n                            if (j == 4) {temp[j] = data[i]['Wednesday']}\r\n                            if (j == 5) {temp[j] = data[i]['Thursday']}\r\n                            if (j == 6) {temp[j] = data[i]['Friday']}\r\n                            if (j == 7) {temp[j] = data[i]['Saturday']}\r\n                            if (j == 8) {temp[j] = data[i]['Sunday']}\r\n                        } else if (simulation_type == \"progress_log\") {  // progress log\r\n                            if (j == 0) {temp[j] = data[i]['task_id']}\r\n                            if (j == 1) {temp[j] = data[i]['task']}\r\n                            if (j == 2) {temp[j] = data[i]['deadline']}\r\n                            if (j == 3) {temp[j] = data[i]['emp_id']}\r\n                            if (j == 4) {temp[j] = data[i]['name']}\r\n                            if (j == 5) {temp[j] = data[i]['hour_spent']}\r\n                            if (j == 6) {temp[j] = data[i]['progress']}\r\n                        } else if (simulation_type == \"student_status\") {  // student status\r\n                            if (j == 0) {temp[j] = data[i]['ID']}\r\n                            if (j == 1) {temp[j] = data[i]['name']}\r\n                            if (j == 2) {temp[j] = data[i]['num_tardy']}\r\n                            if (j == 3) {temp[j] = data[i]['num_abs']}\r\n                            if (j == 4) {temp[j] = data[i]['dis_action']}\r\n                            if (j == 5) {temp[j] = data[i]['status']}\r\n                        }\r\n                    }\r\n\r\n                    buffer[i] = temp;\r\n                    buffer_copy[i] = temp.slice()\r\n                    // return buffer;\r\n                }\r\n\r\n                this.add_empty_rows(10, ATT_NUM, buffer, buffer_copy);\r\n            }\r\n        });\r\n    }\r\n\r\n    fill_col_headers = (col_head, simulation_type) => {\r\n        if (simulation_type == \"attendance\") {  // attendance\r\n            col_head.push(\"ID\");\r\n            col_head.push(\"Name\");\r\n            col_head.push(\"Monday\");\r\n            col_head.push(\"Tuesday\");\r\n            col_head.push(\"Wednesday\");\r\n            col_head.push(\"Thursday\");\r\n            col_head.push(\"Friday\");\r\n            col_head.push(\"Saturday\");\r\n            col_head.push(\"Sunday\");\r\n        }\r\n        if (simulation_type == \"grade_book\") {  // grade book\r\n            col_head.push(\"ID\");\r\n            col_head.push(\"Name\");\r\n            col_head.push(\"MP1\");\r\n            col_head.push(\"MP2\");\r\n            col_head.push(\"MP3\");\r\n            col_head.push(\"MP4\");\r\n            col_head.push(\"Lab1\");\r\n            col_head.push(\"Lab2\");\r\n            col_head.push(\"Lab3\");\r\n            col_head.push(\"Lab4\");\r\n            col_head.push(\"Lab5\");\r\n            col_head.push(\"Lab6\");\r\n            col_head.push(\"Lab7\");\r\n            col_head.push(\"Exam1\");\r\n            col_head.push(\"Exam2\");\r\n            col_head.push(\"Final\");\r\n            col_head.push(\"Overall\");\r\n        }\r\n        if (simulation_type == \"check_book\") {  // check book\r\n            col_head.push(\"ID\");\r\n            col_head.push(\"number\");\r\n            col_head.push(\"date\");\r\n            col_head.push(\"Transaction\");\r\n            col_head.push(\"Withdraw\");\r\n            col_head.push(\"Deposit\");\r\n            col_head.push(\"Balance\");\r\n        }\r\n        if (simulation_type == \"monthly_expense\") { // monthly expense\r\n            col_head.push(\"ID\");\r\n            col_head.push(\"expenses\");\r\n            col_head.push(\"Jan\");\r\n            col_head.push(\"Feb\");\r\n            col_head.push(\"Mar\");\r\n            col_head.push(\"Apr\");\r\n            col_head.push(\"May\");\r\n            col_head.push(\"Jun\");\r\n            col_head.push(\"Jul\");\r\n            col_head.push(\"Aug\");\r\n            col_head.push(\"Sep\");\r\n            col_head.push(\"Oct\");\r\n            col_head.push(\"Nov\");\r\n            col_head.push(\"Dec\");\r\n        }\r\n        if (simulation_type == \"monthly_income\") { // monthly income\r\n            col_head.push(\"ID\");\r\n            col_head.push(\"income\");\r\n            col_head.push(\"Jan\");\r\n            col_head.push(\"Feb\");\r\n            col_head.push(\"Mar\");\r\n            col_head.push(\"Apr\");\r\n            col_head.push(\"May\");\r\n            col_head.push(\"Jun\");\r\n            col_head.push(\"Jul\");\r\n            col_head.push(\"Aug\");\r\n            col_head.push(\"Sep\");\r\n            col_head.push(\"Oct\");\r\n            col_head.push(\"Nov\");\r\n            col_head.push(\"Dec\");\r\n        }\r\n        if (simulation_type == \"employee_schedule_v1\") { // schedule v1\r\n            col_head.push(\"Employee ID\");\r\n            col_head.push(\"Name\");\r\n            col_head.push(\"Monday\");\r\n            col_head.push(\"Tuesday\");\r\n            col_head.push(\"Wednesday\");\r\n            col_head.push(\"Thursday\");\r\n            col_head.push(\"Friday\");\r\n            col_head.push(\"Saturday\");\r\n            col_head.push(\"Sunday\");\r\n        }\r\n        if (simulation_type == \"employee_schedule_v2\") { // schedule v2\r\n            col_head.push(\"Time Slot\");\r\n            col_head.push(\"Monday\");\r\n            col_head.push(\"Tuesday\");\r\n            col_head.push(\"Wednesday\");\r\n            col_head.push(\"Thursday\");\r\n            col_head.push(\"Friday\");\r\n            col_head.push(\"Saturday\");\r\n            col_head.push(\"Sunday\");\r\n        }\r\n        if (simulation_type == \"progress_log\") { // progress log\r\n            col_head.push(\"Task ID\");\r\n            col_head.push(\"Task\");\r\n            col_head.push(\"Deadline\");\r\n            col_head.push(\"Employee ID\");\r\n            col_head.push(\"Name\");\r\n            col_head.push(\"Hours Spent\");\r\n            col_head.push(\"Status\");\r\n        }\r\n\r\n        if (simulation_type == \"student_status\") {\r\n            col_head.push(\"ID\");\r\n            col_head.push(\"Name\");\r\n            col_head.push(\"Tardy\");\r\n            col_head.push(\"Absent\");\r\n            col_head.push(\"Disciplinary Action\");\r\n            col_head.push(\"Status\");\r\n        }\r\n    }\r\n\r\n    add_empty_rows = (num_row, num_att, buffer, buffer_copy) => {\r\n        console.log(\"adding more rows!\");\r\n        for (var i = 0; i < num_row; i++) {\r\n            let temp = []\r\n            for (var j = 0; j < num_att; j++) {\r\n                temp.push(\"\");\r\n            }\r\n            buffer[buffer.length] = temp;\r\n            buffer_copy[buffer_copy.length] = temp.slice();\r\n        }\r\n    }\r\n}\r\nmodule.exports = Utils","import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Spreadsheet from \"react-spreadsheet\";\r\nimport { ReactCanvasGrid } from 'react-canvas-grid';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n//default order: 6\r\nconst BPlusTree = require('bplustree');\r\nlet tree = new BPlusTree()\r\n\r\nlet outputTable, searchResultTable, single_search_button, range_search_button, single_remove_button, range_remove_button;\r\nlet single_search_returned_key = [], remove_returned_key = [], range_remove_returned_key = []\r\nlet singleSearchResult = [], range_search_result = [], range_search_returned_key = [], arri_array = []\r\n\r\nlet data = [], dataMatrix = [], columns = [], buffer = [], single_search_display_matrix = []\r\nlet first_time_upload = true\r\nlet DIV_WIDTH = 1260\r\nlet PREFETCH_SIZE = 50\r\nlet noData = true\r\n\r\n//search result variables\r\nlet SEARCH_RESULT_PREFETCH_SIZE = 10;\r\nlet search_result_size = 0;\r\nlet first_time_search = true;\r\nlet current_result_fetch_index = 10;\r\nlet resultBuffer = []\r\n\r\nlet current_fetch_index = 49 //initial pre-prefetch index\r\nlet num_attr = 0;\r\nconst style = {\r\n  height: 2500,\r\n  width: DIV_WIDTH,\r\n  border: \"0.2px solid gray\",\r\n  margin: 0,\r\n  padding: 0\r\n};\r\n\r\nconst search_display_style = {\r\n  height: 500,\r\n  width: DIV_WIDTH,\r\n  border: \"0.2px solid gray\",\r\n  margin: 0,\r\n  padding: 0\r\n};\r\n\r\nclass Result extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // first_time_upload: true,\r\n      rows: [],\r\n      cols: [],\r\n      attri: [],\r\n      isSearchSelectionModalOpen: false, \r\n      isRangeSearchModalOpen: false, \r\n      isSingelSearchModalOpen: false,\r\n\r\n      isUploadAckModalOpen: false,\r\n      isErrorModalOpen: false,\r\n\r\n      single_search_index: '', \r\n      single_search_attribute: '',\r\n      range_search_attribute:'',\r\n\r\n      isSingleSearch: false,\r\n\r\n      isResultPanelModalOpen: false, \r\n      searchResult: [], \r\n\r\n      range_search_lower_index: '', \r\n      range_search_upper_index: '', \r\n\r\n      single_remove_index: '', \r\n      range_remove_lower_index: '', \r\n      range_remove_upper_index:'', \r\n      isSingleRemoveModalOpen: false, \r\n      isRangeRemoveModalOpen: false, \r\n\r\n      isRemoveAckModalOpen: false,\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      redirect_to_start: false,\r\n      start_page_link: '/'\r\n    }\r\n\r\n    this.toggleSearchSelectionModal = this.toggleSearchSelectionModal.bind()\r\n    this.toggleRangeSearchModal = this.toggleRangeSearchModal.bind()\r\n    this.toggleSingleSearchModal = this.toggleSingleSearchModal.bind()\r\n    this.toggleUploadAckModal = this.toggleUploadAckModal.bind()\r\n    this.toggleResultPanelModal = this.toggleResultPanelModal.bind()\r\n    this.toggleErrorModal = this.toggleErrorModal.bind()\r\n    this.toggleSingleRemoveModal = this.toggleSingleRemoveModal.bind()\r\n    this.toggleRangeRemoveModal = this.toggleRangeRemoveModal.bind()\r\n    this.toggleRemoveAckModal = this.toggleRemoveAckModal.bind()\r\n  }\r\n\r\n  toggleRemoveAckModal = () => {\r\n    this.setState({\r\n      isRemoveAckModalOpen: !this.state.isRemoveAckModalOpen\r\n    })\r\n  }\r\n\r\n  toggleSingleRemoveModal = () => {\r\n    this.setState({\r\n      isSingleRemoveModalOpen: !this.state.isSingleRemoveModalOpen\r\n    })\r\n  }\r\n\r\n  toggleRangeRemoveModal = () => {\r\n    this.setState({\r\n      isRangeRemoveModalOpen: !this.state.isRangeRemoveModalOpen\r\n    })\r\n  }\r\n\r\n  toggleErrorModal = () => {\r\n    this.setState({\r\n      isErrorModalOpen: !this.state.isErrorModalOpen\r\n    })\r\n  }\r\n\r\n\r\n  toggleUploadAckModal = () => {\r\n    this.setState({\r\n      isUploadAckModalOpen: !this.state.isUploadAckModalOpen\r\n    })\r\n  }\r\n\r\n  toggleSearchSelectionModal = () => {\r\n    this.setState({\r\n      isSearchSelectionModalOpen: !this.state.isSearchSelectionModalOpen\r\n    })\r\n  }\r\n\r\n  toggleRangeSearchModal = () => {\r\n    this.setState({\r\n      isRangeSearchModalOpen: !this.state.isRangeSearchModalOpen,\r\n      isSearchSelectionModalOpen: !this.state.isSearchSelectionModalOpen\r\n    })\r\n  }\r\n\r\n  toggleSingleSearchModal = () => {\r\n    this.setState({\r\n      isSingelSearchModalOpen: !this.state.isSingelSearchModalOpen\r\n    })\r\n  }\r\n\r\n  // close acknowledge modal, open selection and display penel, and fill out content\r\n  onRetrieveSelectionClick = () => {\r\n    this.fillOutputTable()\r\n    \r\n    if (this.state.isUploadAckModalOpen == true) {\r\n      this.toggleUploadAckModal()\r\n    }\r\n\r\n    //close current result panel, if it's openned\r\n    if (this.state.isResultPanelModalOpen == true) {\r\n      this.toggleResultPanelModal()\r\n    }\r\n\r\n    //close single search modal, if it's openned\r\n    if (this.state.isSingelSearchModalOpen == true) {\r\n      this.toggleSingleSearchModal()\r\n    }\r\n\r\n    //close range search modal, if it's openned\r\n    if (this.state.isRangeSearchModalOpen == true) {\r\n      this.toggleRangeSearchModal()\r\n    }\r\n  }\r\n\r\n  toFrontPage = () => {\r\n    this.setState({\r\n      isResultPanelModalOpen: false, \r\n      isRangeSearchModalOpen: false, \r\n      isSingelSearchModalOpen: false, \r\n      isSearchSelectionModalOpen: false, \r\n      isUploadAckModalOpen: false\r\n    })\r\n  }\r\n\r\n  getFinalSingleSearchResult = (resultMatrix) => {\r\n    \r\n    console.log(\"final single search result is \", resultMatrix)\r\n    if (resultMatrix.length == 0) {\r\n      searchResultTable = <Jumbotron>\r\n                              <div>\r\n                                  No Entries Are Retrieved\r\n                              </div>\r\n                          </Jumbotron>\r\n    } else {\r\n      searchResultTable = <Jumbotron>\r\n                            <div>\r\n                                Below Is The Retrieved Data\r\n                            </div>\r\n                             <div>\r\n                                <Spreadsheet data={resultMatrix} />\r\n                             </div>\r\n                        </Jumbotron>\r\n    }\r\n    this.toggleResultPanelModal()\r\n  }\r\n\r\n  toggleResultPanelModal = () => {\r\n    this.setState({\r\n      isResultPanelModalOpen: !this.state.isResultPanelModalOpen\r\n    })\r\n  }\r\n\r\n  handleSearchIndexChange = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  onSingleSearchKeySubmit = async (e) => {\r\n    e.preventDefault();\r\n    // this.props.history.push('/result')\r\n    if (this.state.single_search_index == '') {\r\n      this.toggleErrorModal()\r\n    } else {\r\n      this.toggleSingleSearchModal()  //close up the search modal\r\n\r\n      //fetch the result from the db\r\n      let onID = false\r\n      if (this.state.single_search_attribute === '') {\r\n        onID = true\r\n      }\r\n      let formResults = {\r\n        attribute: this.state.single_search_attribute,\r\n        index: this.state.single_search_index,\r\n        onID: onID\r\n      }\r\n      //POST req here\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({formResults})\r\n      };\r\n      fetch('/database/single-index-retrieval', requestOptions)\r\n      .then(res => res.json())      \r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          console.log(\"No data is fetched by single retrieval function\")\r\n          let resultMatrix = []\r\n          this.getFinalSingleSearchResult(resultMatrix)\r\n        } else {\r\n\r\n          //fill in result matrix\r\n          let resultMatrix = []\r\n          searchResultTable = ''\r\n          for (var i = 0; i < data.length; i++) {\r\n            let temp = []\r\n            for (var j = 1; j < num_attr; j++) {\r\n              temp[j - 1] = { value: data[i][\"attribute\" + j]}\r\n            }\r\n            resultMatrix[i] = temp\r\n          }\r\n          this.getFinalSingleSearchResult(resultMatrix)\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  insertSearchTable = async (data) => {\r\n    //insert content into result table\r\n    console.log(\"the single search returned data matrix is: \")\r\n    console.log(data)\r\n    let resultBufferMatrix = []\r\n    for (var i = 0; i < data.length; i++) {\r\n      let temp = []\r\n      for (var j = 1; j <= num_attr; j++) {\r\n        temp[j - 1] = data[i][\"attribute\" + j]\r\n      }\r\n      resultBufferMatrix[i] = temp\r\n    }\r\n    console.log(\"the buffer matrix is: \")\r\n    console.log(resultBufferMatrix)\r\n    let formResults_result_buffer = {\r\n      matrix: resultBufferMatrix,\r\n      num_attr: num_attr\r\n    }\r\n    //POST req here\r\n    const requestOptions_result = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({formResults_result_buffer})\r\n    };\r\n    await fetch('/database/insert-result-content', requestOptions_result)\r\n\r\n    //load future data into result buffer, and increment the fetch index\r\n    if (data.length > 10) {\r\n      this.loadResultBuffer(current_result_fetch_index);\r\n      current_result_fetch_index = current_result_fetch_index + PREFETCH_SIZE\r\n    }\r\n\r\n    //enable scrolling\r\n    this.setState({\r\n      hasMoreResult: true, \r\n      resultItems: Array.from({ length: 0 })\r\n    })\r\n    this.getFinalSingleSearchResult()\r\n  }\r\n\r\n  onRangeSearchIndexSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.range_search_lower_index == '' && this.state.range_search_upper_index == '') {\r\n      this.toggleErrorModal()\r\n    } else {\r\n      this.toggleRangeSearchModal() // close range search modal\r\n      let lowerBound, upperBound\r\n      //Restore default min/max bound if null entered\r\n      if (this.state.range_search_lower_index == '') {\r\n        lowerBound = Number.MIN_VALUE\r\n      } else {\r\n        lowerBound = Number(this.state.range_search_lower_index)\r\n      }\r\n\r\n      if (this.state.range_search_upper_index == '') {\r\n        upperBound = Number.MAX_VALUE\r\n      } else {\r\n        upperBound = Number(this.state.range_search_upper_index)\r\n      }\r\n\r\n      let onID = false;\r\n      if (this.state.range_search_attribute === '') {\r\n        onID = true;\r\n      }\r\n\r\n      //fetch the result from the db\r\n      let formResults = {\r\n        attribute: this.state.range_search_attribute,\r\n        lower_index: lowerBound,\r\n        upper_index: upperBound, \r\n        onID: onID\r\n      }\r\n      //POST req here\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({formResults})\r\n      };\r\n      fetch('/database/range-index-retrieval', requestOptions)\r\n      .then(res => res.json())      \r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          console.log(\"No data is fetched by range retrieval function\")\r\n          let resultMatrix = []\r\n          this.getFinalSingleSearchResult(resultMatrix)\r\n        } else {\r\n\r\n          //fill in result matrix\r\n          let resultMatrix = []\r\n          searchResultTable = ''\r\n          for (var i = 0; i < data.length; i++) {\r\n            let temp = []\r\n            for (var j = 1; j < num_attr; j++) {\r\n              temp[j - 1] = { value: data[i][\"attribute\" + j]}\r\n            }\r\n            resultMatrix[i] = temp\r\n          }\r\n          this.getFinalSingleSearchResult(resultMatrix)\r\n        }\r\n      \r\n      });\r\n    }\r\n  }\r\n\r\n  fillNewTable = () => {\r\n    outputTable = <Jumbotron >\r\n                      <Row>\r\n                          Below Is The Entire Data Set\r\n                      </Row>\r\n                      <Spreadsheet data={data} />\r\n                  </Jumbotron>\r\n    \r\n    this.toggleRemoveAckModal()\r\n  }\r\n\r\n  fileHandler = async (event) => {\r\n    let fileObj = event.target.files[0];\r\n    console.log(\"file change!\")\r\n    console.log(\"first time upload is: \"  + first_time_upload)\r\n    console.log(fileObj)\r\n    this.setState({\r\n      hasMore: true, \r\n      load_from_buffer_to_matrix: false, //set load to false s.t. the first display does not come from buffer\r\n      items: Array.from({ length: 0 })\r\n    })\r\n    current_fetch_index = 49;  //reset the pre-fetch index to initial value\r\n    outputTable = ''\r\n\r\n    // delete previous table, except for first time upload\r\n    if (first_time_upload) {\r\n      first_time_upload = false\r\n    } else {\r\n      this.deleteDBTable()\r\n    }\r\n\r\n    tree = new BPlusTree()\r\n  \r\n    //just pass the fileObj as parameter\r\n    await ExcelRenderer(fileObj, (err, resp) => {\r\n      if(err){\r\n        console.log(err);            \r\n      }\r\n      else{\r\n        this.setState({\r\n          cols: resp.cols,\r\n          rows: resp.rows\r\n        });\r\n      }\r\n    });  \r\n\r\n    //pause until data is loaded from the imported file\r\n    while (true) {\r\n      if (this.state.rows.length !== 0) {\r\n        break;\r\n      }\r\n    }\r\n    this.toggleUploadAckModal() \r\n  }\r\n\r\n  fillOutputTable = async () => {\r\n    let row_copy = this.state.rows\r\n    let col_copy = this.state.cols\r\n    if (row_copy.length != 0 || col_copy.length != 0) {\r\n      console.log(\"row is: \", row_copy)\r\n      console.log(\"col is\", col_copy)\r\n\r\n      //fill in attribute row\r\n      for (var i = 0; i < col_copy.length; i++) {\r\n        arri_array[i] = { value: col_copy[i].name}\r\n      }\r\n      console.log(\"the arri_array is: \")\r\n      console.log(arri_array)\r\n\r\n      //fill in attribute row (i.e. columns), with id as the first column\r\n      for (var i = 0; i <= col_copy.length; i++) {\r\n        if (i == 0) {\r\n          columns[i] = { fieldName: 'id', width: (DIV_WIDTH - col_copy.length - 1) / (col_copy.length + 1) }\r\n        } else {\r\n          columns[i] = { fieldName: 'attr' + i, width: (DIV_WIDTH - col_copy.length - 1) / (col_copy.length + 1) }\r\n        }\r\n      }\r\n      console.log(\"the columns are: \")\r\n      console.log(columns)\r\n\r\n\r\n      //initial data matrix (with id as the first column)\r\n      for (var i = 0; i < PREFETCH_SIZE; i++) {\r\n        if (i == 0) {\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= col_copy.length; j++) {\r\n            if (j == 0) {\r\n              let item = {text: 'id'}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: \"Attribute\" + j}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          dataMatrix[i] = jsonObj\r\n        } else if (i < row_copy.length) {\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= col_copy.length; j++) {\r\n            if (j == 0) {\r\n              let item = {text: i}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: row_copy[i - 1][j - 1]}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          dataMatrix[i] = jsonObj\r\n        } else {\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= col_copy.length; j++) {\r\n            if (j == 0) {\r\n              let item = {text: ''}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: ''}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          dataMatrix[i] = jsonObj\r\n        }\r\n\r\n      }\r\n      console.log(\"the data matrix in json format is: \")\r\n      console.log(dataMatrix)\r\n\r\n      //fill in whole data\r\n      data = []\r\n      searchResultTable = ''\r\n      for (var i = 0; i < row_copy.length; i++) {\r\n        let temp = []\r\n        for (var j = 0; j < col_copy.length; j++) {\r\n          temp[j] = { value: row_copy[i][j]}\r\n        }\r\n        data[i] = temp\r\n      }\r\n\r\n      //create new DB table\r\n      console.log(\"going to test create table\")\r\n      num_attr = col_copy.length\r\n      let url = \"/database/create-table/\" + Number(num_attr)\r\n      await fetch(url)\r\n\r\n      //insert content into DB table\r\n      let formResults = {\r\n        matrix: row_copy,\r\n        num_attr: col_copy.length\r\n      }\r\n      //POST req here\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({formResults})\r\n      };\r\n      await fetch('/database/insert-content', requestOptions)\r\n\r\n      //fetch future rows into the buffer, if possible. Also increment the index\r\n      if (row_copy.length > 50) {\r\n        //this.fetchMoreRows(current_fetch_index);\r\n        for (var i = current_fetch_index; i < row_copy.length; i++) {\r\n          if (i === current_fetch_index + PREFETCH_SIZE) {\r\n            break;\r\n          }\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= col_copy.length; j++) {\r\n            if (j == 0) {\r\n              //let item = {text: i}\r\n              jsonObj['id'] = i + 1\r\n            } else {\r\n              //let item = {text: row_copy[i - 1][j - 1]}\r\n              jsonObj['attribute' + j] = row_copy[i - 1][j - 1]\r\n            }\r\n          }\r\n          buffer[i - current_fetch_index] = jsonObj\r\n        }\r\n        current_fetch_index = current_fetch_index + PREFETCH_SIZE;\r\n        console.log(\"see buffer data at this point\")\r\n      }\r\n    \r\n\r\n\r\n      if (tree.depth(true) == 0) {\r\n        range_search_button = <Button size='lg' className='range-search-button' color=\"primary\" onClick={this.toggleRangeSearchModal} >Range Index Retrieval</Button> \r\n        single_search_button = <Button size='lg' className='single-search-button' color=\"primary\" onClick={this.toggleSingleSearchModal} type=\"submit\">Single Index Retrieval</Button>\r\n        single_remove_button = <Button color=\"primary\" onClick={this.toggleSingleRemoveModal} >Single Index Removal</Button> \r\n        // console.log(\"create TREE\")\r\n        // for (var i = 0; i < row_copy.length; i++) {\r\n        //   tree.store(row_copy[i][5], i)\r\n        // }\r\n        console.log(\"key type is: \", typeof(row_copy[0][0]))\r\n      }\r\n      \r\n      this.setState({\r\n        isSearchSelectionModalOpen:true\r\n      })\r\n\r\n    } else {\r\n      console.log(\"null\")\r\n      outputTable = \"Not uploaded yet\"\r\n    }\r\n  }\r\n\r\n  createDBTable = (num_attr) => {\r\n    console.log(\"going to test create table\")\r\n    let url = \"/database/create-table/\" + num_attr\r\n    fetch(url)\r\n  }\r\n\r\n  deleteDBTable = (e) => {\r\n    console.log(\"going to test delete table\")\r\n    fetch(\"/database/delete-table\")\r\n  }\r\n\r\n  deleteResultTable = () => {\r\n    console.log(\"going to delete result table\")\r\n    fetch(\"/database/delete-result-table\")\r\n  }\r\n\r\n  fetchMoreData = () => {\r\n    if (this.state.items.length >= Math.ceil(this.state.rows.length / 50.0) ) {\r\n      this.setState({ hasMore: false });\r\n      console.log('the final number of page is: ' + Math.ceil(this.state.rows.length / 50.0))\r\n      return;\r\n    }\r\n\r\n    //load data from buffer to the display data matrix\r\n    if (this.state.load_from_buffer_to_matrix == false) {\r\n      this.setState({\r\n        load_from_buffer_to_matrix: true\r\n      })\r\n\r\n      //double check if buffer has been loaded\r\n      if (buffer.length == 0) {\r\n        this.fetchMoreRows(PREFETCH_SIZE);\r\n      }\r\n    } else {\r\n\r\n      //move data from buffer to matrix\r\n      for (var i = 0; i < PREFETCH_SIZE; i++) {\r\n        if (i < buffer.length) {\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= num_attr; j++) {\r\n            if (j == 0) {\r\n              let item = {text: buffer[i].id}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: buffer[i][\"attribute\" + j]}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          dataMatrix[i] = jsonObj\r\n        } else {\r\n          console.log(\"i is greater than \" + PREFETCH_SIZE + \" now\")\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= num_attr; j++) {\r\n            if (j == 0) {\r\n              let item = {text: ''}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: ''}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          dataMatrix[i] = jsonObj\r\n        }\r\n      }\r\n\r\n      //pre-fetch new data into the buffer\r\n      this.fetchMoreRows(current_fetch_index)\r\n      current_fetch_index = current_fetch_index + PREFETCH_SIZE\r\n\r\n      console.log(\"data matrix at fetch more data is: \")\r\n      console.log(dataMatrix)\r\n    }\r\n\r\n    // a fake async api call like which sends\r\n    // 20 more records in 1.5 secs\r\n    setTimeout(() => {\r\n      this.setState({\r\n        items: this.state.items.concat(Array.from({ length: 1 }))\r\n      });\r\n    }, 1500);\r\n  };\r\n\r\n  fetchMoreResult = () => {\r\n    if (this.state.resultItems.length >= Math.ceil(search_result_size / 10.0)) {\r\n      this.setState({ hasMoreResult: false });\r\n      return;\r\n    }\r\n\r\n    if (this.state.load_result_from_buffer_to_matrix == false) {\r\n      this.setState({\r\n        load_result_from_buffer_to_matrix: true\r\n      })\r\n    } else {\r\n      //...update the result display matrix and result buffer...\r\n\r\n      //move data from search result buffer to result display matrix\r\n      for (var i = 0; i < SEARCH_RESULT_PREFETCH_SIZE; i++) {\r\n        if (i < resultBuffer.length) {\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= num_attr; j++) {\r\n            if (j == 0) {\r\n              let item = {text: resultBuffer[i].id}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: resultBuffer[i][\"attribute\" + j]}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          single_search_display_matrix[i] = jsonObj\r\n        } else {\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= num_attr; j++) {\r\n            if (j == 0) {\r\n              let item = {text: ''}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: ''}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          single_search_display_matrix[i] = jsonObj\r\n        }\r\n      }\r\n\r\n      //update search result buffer\r\n      this.loadResultBuffer(current_result_fetch_index)\r\n      current_result_fetch_index = current_result_fetch_index + SEARCH_RESULT_PREFETCH_SIZE\r\n\r\n      console.log(\"the new search result display matrix is: \")\r\n      console.log(single_search_display_matrix)\r\n    }\r\n\r\n    // a fake async api call like which sends\r\n    // 20 more records in .5 secs\r\n    setTimeout(() => {\r\n      this.setState({\r\n        resultItems: this.state.resultItems.concat(Array.from({ length: 1 }))\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  loadResultBuffer = (index) => {\r\n    console.log(\"CALLED LOADRESULTBUFFER!\")\r\n    resultBuffer = []\r\n    let url = '/database/fetch-ten-rows/' + index\r\n      fetch(url)\r\n      .then(res => res.json())      \r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          console.log(\"No data is fetched by fetchMoreResult function\")\r\n        } else {\r\n          //load returned data into the buffer\r\n          for (var i = 0; i < data.length; i++) {\r\n            resultBuffer[i] = data[i]\r\n          }\r\n          console.log(\"the result buffer is: \")\r\n          console.log(resultBuffer)\r\n        }\r\n      });\r\n  }\r\n\r\n  fetchMoreRows = (index) => {\r\n    buffer = []\r\n    let url = '/database/fetch-fifty-rows/' + index\r\n      fetch(url)\r\n      .then(res => res.json())      \r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          console.log(\"No data is fetched by fetchMoreRows function\")\r\n          noData = true\r\n        } else {\r\n          noData = false;\r\n          //load returned data into the buffer\r\n          for (var i = 0; i < data.length; i++) {\r\n            buffer[i] = data[i]\r\n          }\r\n          console.log(\"the buffer is: \")\r\n          console.log(buffer)\r\n        }\r\n      });\r\n  }\r\n\r\n  redirect_start = () => {\r\n    this.setState( {\r\n      redirect_to_start: true\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.redirect_to_start) {\r\n      return <Redirect to={this.state.start_page_link} />\r\n    }\r\n\r\n    return (\r\n\r\n      <div className=\"App\">\r\n         <Jumbotron className='logo-jumbo'>\r\n          \r\n          </Jumbotron >\r\n          <div>\r\n\r\n          \r\n          <Jumbotron >\r\n            {/* <Container fluid> */}\r\n                  <h1 className=\"display-3\"> Welcome to spreadsheet web!</h1>\r\n                  <p className=\"lead\">This is a simple web interface that allows you to upload spreadsheets and retrieve data.</p>\r\n                  <hr className=\"my-2\" />\r\n                  <p>Please upload your spreadsheet below</p>\r\n                  <p className=\"lead\">\r\n                    <input type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\":\"10px\"}} />\r\n                    \r\n                    <Button size='lg' className='redirect-button' color=\"primary\" onClick={this.redirect_start} >To Start Page</Button> \r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='redirect-button' color=\"primary\" onClick={this.deleteDBTable} >Delete Table</Button> \r\n                  </p>\r\n                  {range_search_button}\r\n                  &nbsp;&nbsp;&nbsp;&nbsp;\r\n                  {single_search_button}\r\n                  {/* &nbsp;&nbsp;&nbsp;&nbsp;\r\n                  <Button color=\"primary\" onClick={this.deleteDBTable} >Delete Table</Button> */}\r\n                  \r\n\r\n                  <Modal isOpen={this.state.isUploadAckModalOpen} toggle={this.toggleUploadAckModal} >\r\n                    <ModalHeader toggle={this.toggleUploadAckModal}>Upload Seccessful! </ModalHeader>\r\n                    <ModalBody>\r\n                      <Button color=\"primary\" onClick={this.onRetrieveSelectionClick} type=\"submit\" block>View and Select Data Retrieval Option</Button> {'   '}\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal isOpen={this.state.isRemoveAckModalOpen} toggle={this.toggleRemoveAckModal} >\r\n                    <ModalHeader toggle={this.toggleRemoveAckModal}>Remove Seccessful! </ModalHeader>\r\n                    <ModalBody>\r\n                      <Button color=\"primary\" onClick={this.fillNewTable} type=\"submit\">View New Content</Button> {'   '}\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isSingelSearchModalOpen} toggle={this.toggleSingleSearchModal} >\r\n                    <ModalHeader toggle={this.toggleSingleSearchModal}>Please enter your search index and search attribute </ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.onSingleSearchKeySubmit}>\r\n                        <FormGroup>\r\n                          <Label for=\"single_search_index\">Single Search Index</Label>\r\n                          <Input type=\"text\" pattern=\"[0-9]*\" name=\"single_search_index\" id=\"single_search_index\" onChange={e => this.handleSearchIndexChange(e)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"single_search_attribute\">Search Attribute Number (Leave blank to search on id)</Label>\r\n                          <Input type=\"text\" pattern=\"[0-9]*\" name=\"single_search_attribute\" id=\"single_search_attribute\" onChange={e => this.handleSearchIndexChange(e)} />\r\n                        </FormGroup>\r\n                        <Button size='lg' color=\"primary\" className='single_search_submit' type=\"submit\" >Search</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRangeSearchModalOpen} toggle={this.toggleRangeSearchModal} >\r\n                    <ModalHeader toggle={this.toggleRangeSearchModal}>Please enter upper and lower search index. (First Attribute Value) </ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.onRangeSearchIndexSubmit}>\r\n                        <FormGroup>\r\n                          <Label for=\"range_search_lower_index\">Lower Bound</Label>\r\n                          <Input type=\"text\" pattern=\"[0-9]*\" name=\"range_search_lower_index\" id=\"range_search_lower_index\" onChange={e => this.handleSearchIndexChange(e)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"range_search_upper_index\">Upper Bound</Label>\r\n                          <Input type=\"text\" pattern=\"[0-9]*\" name=\"range_search_upper_index\" id=\"range_search_upper_index\" onChange={e => this.handleSearchIndexChange(e)} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <Label for=\"range_search_attribute\">Attribute Number (Leave blank to search on id)</Label>\r\n                          <Input type=\"text\" pattern=\"[0-9]*\" name=\"range_search_attribute\" id=\"range_search_attribute\" onChange={e => this.handleSearchIndexChange(e)} />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" className='range_search_submit' type=\"submit\" block>Search</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      Hint: to find entries with indices greater/smaller than a value, only enter the lower bound/upper bound (e.g., Find \r\n                      entries with indices {'>'} 5, enter 5 in lower bound and leave upper bound blank).\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal isOpen={this.state.isResultPanelModalOpen} toggle={this.toggleResultPanelModal} >\r\n                    <ModalHeader toggle={this.toggleResultPanelModal}>\r\n                      Data is retrieved. Click view to see the result\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Button color=\"primary\" onClick={this.toFrontPage} type=\"submit\" block>View</Button> \r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal isOpen={this.state.isErrorModalOpen} toggle={this.toggleErrorModal} >\r\n                    <ModalHeader toggle={this.toggleErrorModal}>\r\n                      There is somgthing wrong with your input. Please try again\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Button color=\"primary\" onClick={this.toggleErrorModal} type=\"submit\" block>Try Again</Button> \r\n                    </ModalBody>\r\n                  </Modal>\r\n            {/* </Container> */}\r\n        </Jumbotron>\r\n        </div>\r\n        {searchResultTable}\r\n        {/* {outputTable} */}\r\n        {/* <hr /> */}\r\n        {/* <InfiniteScroll\r\n          dataLength={this.state.resultItems.length}\r\n          next={this.fetchMoreResult}\r\n          hasMore={this.state.hasMoreResult}\r\n          loader={<h4>Loading...</h4>}\r\n          endMessage={\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>No Search Result Displayed</b>\r\n            </p>\r\n          }\r\n          >\r\n          {this.state.resultItems.map((i, index) => (\r\n            <div style={search_display_style} key={index}>\r\n              <ReactCanvasGrid\r\n                                  cssHeight={'499px'}\r\n                                  columns={columns}\r\n                                  data={single_search_display_matrix}\r\n                                  rowHeight={49}\r\n                    />\r\n            </div>\r\n          ))}\r\n        </InfiniteScroll> */}\r\n\r\n        <hr />\r\n        Below Is The Entire Data Set\r\n        <InfiniteScroll\r\n          dataLength={this.state.items.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={this.state.hasMore}\r\n          loader={<h4>Loading...</h4>}\r\n          endMessage={\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          }\r\n          >\r\n          {this.state.items.map((i, index) => (\r\n            <div style={style} key={index}>\r\n              <ReactCanvasGrid\r\n                                  cssHeight={'2499px'}\r\n                                  columns={columns}\r\n                                  data={dataMatrix}\r\n                                  rowHeight={49}\r\n                    />\r\n            </div>\r\n          ))}\r\n        </InfiniteScroll>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Result;\r\n","import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport { HotTable } from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input, ListGroup\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Spreadsheet from \"react-spreadsheet\";\r\nimport { ReactCanvasGrid } from 'react-canvas-grid';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport io from \"socket.io-client\";\r\n\r\n//default order: 6\r\nconst BPlusTree = require('bplustree');\r\nlet tree = new BPlusTree()\r\n\r\n// A JSON object that keeps track of previous layout changes\r\nlet layout_changes = {\r\n  layout_changed: false,\r\n  changes: [] // 1st element: action;  2nd element: index\r\n}\r\n\r\nlet col_headers = []\r\n\r\nlet user_actions = []\r\nlet recorded_time = 0;\r\n\r\nlet SCROLL_SIZE = 5;\r\n\r\nlet data = [], dataMatrix = [], columns = [], buffer = [], buffer_copy = []\r\nlet PREFETCH_SIZE = 50\r\nlet noData = true\r\nlet ATT_NUM = 7\r\nlet prev_scrolltop = 0\r\nlet data_display = []\r\nlet chn_copy = []\r\nlet change_detected = false;\r\n\r\nlet current_fetch_index = 51 //initial pre-prefetch index\r\nlet num_attr = 0;\r\n\r\nlet current_i = -1;\r\nlet current_j = -1;\r\nlet currently_editing = false;\r\n\r\nlet conflict_i = -1;\r\nlet conflict_j = -1;\r\nlet incoming_value = \"\";\r\nlet conflict_message = \"\";\r\n\r\nlet select_i = -1; \r\nlet select_j = -1;\r\n\r\nlet transaction_button = \"\";\r\nlet apply_read_only_lock_button = \"\";\r\nlet display_dataset_button = \"\";\r\n\r\nlet pending_changes = {\r\n  data:[], // 2d array to store difference: y, value, x, \r\n  try_message: \"SENT MESSAGE! SUCCESS!\", \r\n  user: \"\"\r\n}\r\n\r\nlet socket_id = \"\";\r\n\r\nclass Start extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.id = \"hot\";\r\n    this.hotTableComponent = React.createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      rows: [],\r\n      cols: [],\r\n      attri: [],\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      redirect_import_page: false, \r\n      import_page_link: '/result', \r\n\r\n      data_original: [], \r\n      check_cell_update: false, \r\n\r\n      test_block: \"ORIGINAL MESSAGE\", \r\n      users:[], \r\n      user_text_block: \"\", \r\n\r\n      isUserNamePromptOpen: true, \r\n      user_name: \"\", \r\n\r\n      edit_message: \"Last Edit: No modification yet\", \r\n      history: [], \r\n      isShowHistoryOpen: false, \r\n\r\n      isConflictModalOpen: false, \r\n\r\n      transaction_mode: false, \r\n      isSharedLockRejectOpen: false,\r\n      isExclusiveLockRejectOpen: false\r\n    }\r\n\r\n    this.socket = io('localhost:3001');\r\n\r\n    this.socket.on('RECEIVE_MESSAGE', function(data){\r\n      addMessage(data);\r\n    });\r\n\r\n    this.socket.on('RECEIVE_ID', function(id){\r\n      change_id(id);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_REJECT', function(shared_lock_reject){\r\n      toggleSharedLockReject(shared_lock_reject);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_ACCEPT', function(shared_lock_accept){\r\n      let row = shared_lock_accept.row;\r\n      let col = shared_lock_accept.col;\r\n      \r\n      display_shared_lock(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_REJECT', function(exclusive_lock_reject){\r\n      let row = exclusive_lock_reject.row;\r\n      let col = exclusive_lock_reject.col;\r\n      \r\n      toggleExclusiveLockReject(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_ACCEPT', function(exclusive_lock_accept){\r\n      let row = exclusive_lock_accept.row;\r\n      let col = exclusive_lock_accept.col;\r\n      let id = exclusive_lock_accept.id\r\n      \r\n      if (id !== socket_id) {\r\n        display_exclusive_lock(row, col);\r\n      }\r\n    });\r\n\r\n    this.socket.on('CHANGE_CURRENT_USER', function(data) {\r\n      change_current_user(data);\r\n    });\r\n\r\n    this.socket.on('ADD_NEW_USER', function(data) {\r\n      addNewUser(data);\r\n    });\r\n\r\n    this.socket.on('RECEIVE_FREED_CELLS', function(free_cells_package) {\r\n      update_freed_cells(free_cells_package);\r\n    });\r\n\r\n    this.socket.on('UPDATE_EDIT_MESSAGE', function(message_package) {\r\n      update_edit_message(message_package);\r\n    });\r\n\r\n    const update_edit_message = message_package => {\r\n      this.setState({\r\n        edit_message: message_package.new_message, \r\n        history: message_package.history\r\n      })\r\n    }\r\n\r\n    const update_freed_cells = free_cells_package => {\r\n\r\n      let free_cells = free_cells_package.free_cells;\r\n      let disconnect = free_cells_package.disconnect;\r\n\r\n      console.log(\"the free cells are \", free_cells);\r\n\r\n      for (var i = 0; i < free_cells.length; i++) {\r\n        let location = free_cells[i];\r\n        if (location[0] < data_display.length) {\r\n          \r\n          let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(location[0], location[1]);\r\n\r\n          // update read-only cells\r\n          if (cell_data[0] == \"*\") {\r\n            let new_data = cell_data.substring(1);\r\n            this.hotTableComponent.current.hotInstance.setDataAtCell(location[0], location[1], new_data);\r\n          }\r\n\r\n          if (cell_data == \"-----\" && disconnect == true) {\r\n            data_display[location[0], location[1]] = this.state.data_original[location[0], location[1]];\r\n          }\r\n        }\r\n      }\r\n      cell_read_only();\r\n    }\r\n\r\n    const change_id = id => {\r\n      socket_id = id;\r\n    }\r\n\r\n    const addNewUser = data => {\r\n      this.setState({\r\n        history: data.history\r\n      })\r\n      change_current_user(data.current_users);\r\n    }\r\n\r\n    const cell_read_only = () => {\r\n      console.log(\"setting to read only...\")\r\n      this.hotTableComponent.current.hotInstance.updateSettings({\r\n        cells: function(row, col, prop){\r\n         var cellProperties = {};\r\n           if(data_display[row][col] !== null && (data_display[row][col] == \"-----\" || data_display[row][col].charAt(0) === \"*\")){\r\n             cellProperties.readOnly = 'true'\r\n           }\r\n         return cellProperties\r\n       }\r\n     })\r\n    }\r\n\r\n    const display_shared_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n  \r\n        let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(row, col);\r\n  \r\n        // if there is a shared lock displaying already, do nothing\r\n        if (cell_data.charAt(0) === \"*\") {\r\n          return;\r\n        } else {\r\n          let new_data = \"*\" + cell_data\r\n          this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_data);\r\n        }\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const display_exclusive_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n        console.log(row)\r\n        console.log(col)\r\n        let new_value = \"-----\";\r\n        this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_value);\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const toggleSharedLockReject = data => {\r\n      this.setState({\r\n        isSharedLockRejectOpen: !this.state.isSharedLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const toggleExclusiveLockReject = data => {\r\n      this.setState({\r\n        isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const change_current_user = data => {\r\n      this.setState({\r\n        users: data\r\n      });\r\n      let new_user_text = \"Currently Online: \";\r\n      for (var i = 0; i < this.state.users.length; i++) {\r\n        if (i == this.state.users.length - 1) {\r\n          new_user_text += this.state.users[i]\r\n        } else {\r\n          new_user_text += this.state.users[i] + \", \"\r\n        }\r\n      }\r\n      this.setState({\r\n        user_text_block: new_user_text\r\n      });\r\n    }\r\n\r\n    const addMessage = data => {\r\n\r\n        let change_table = data.data\r\n        for (var x = 0; x < change_table.length; x++) {\r\n          // Extract data\r\n          let j = change_table[x][0] - 1   // 0 --> y_coord\r\n          let value = change_table[x][1] // 1 --> actual value\r\n          let i = change_table[x][2] - 1 // 2 --> x_coord\r\n\r\n          // Update spreadsheet\r\n          if (i < data_display.length) {\r\n            data_display[i][j] = value     \r\n            this.state.data_original[i][j] = value\r\n          }\r\n\r\n          // check buffer\r\n          else if ((i + 1) < current_fetch_index) {\r\n            i++; // change i and j to 1-based index\r\n            if (buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] != value) {\r\n              buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] = value  // update both buffer and buffer_copy\r\n              buffer[i + PREFETCH_SIZE - current_fetch_index][j] = value\r\n            }\r\n          }\r\n        }\r\n        console.log(\"after socket, buffer_copy is: \", buffer_copy)\r\n        this.setState({\r\n          test_block: data.try_message\r\n        });\r\n    };\r\n\r\n    this.toggleUserNamePrompt = this.toggleUserNamePrompt.bind()\r\n    this.toggleShowHistory = this.toggleShowHistory.bind()\r\n    this.toggleConflictModal = this.toggleConflictModal.bind()\r\n    this.toggleNavbar = this.toggleNavbar.bind()\r\n    this.toggleSharedLockReject = this.toggleSharedLockReject.bind();\r\n    this.toggleExclusiveLockReject = this.toggleExclusiveLockReject.bind();\r\n  }\r\n\r\n  // fetch 50 rows of data into the buffer\r\n  async componentDidMount() {\r\n    recorded_time = Date.now() / 1000;\r\n\r\n    display_dataset_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.display} >Display Dataset</Button> \r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n      // currently_editing = true;\r\n      // console.log(\"current editing \", current_i, current_j);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      // console.log(select_i, select_j);\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n      // console.log(\"index: \", index);\r\n      // console.log(\"amount: \", amount);\r\n      // console.log(\"source: \", source);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n      // console.log(\"index: \", index);\r\n      // console.log(\"amount: \", amount);\r\n      // console.log(\"source: \", source);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", this.handleEnter, false);\r\n\r\n    buffer = []\r\n    buffer_copy = []\r\n    let url = '/database/fetch-fifty-rows/' + 1\r\n      fetch(url)\r\n      .then(res => res.json())      \r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          console.log(\"No data is fetched by fetchMoreRows function\")\r\n          noData = true\r\n        } else {\r\n          noData = false;\r\n          //load returned data into the buffer\r\n          for (var i = 0; i < data.length; i++) {\r\n            var temp = []\r\n            for (var j = 1; j <= ATT_NUM; j++) {\r\n              temp[j - 1] = data[i]['attribute' + j]\r\n            }\r\n            buffer[i] = temp;\r\n            buffer_copy[i] = temp.slice();\r\n          }\r\n          console.log(\"the buffer is: \")\r\n          console.log(buffer)\r\n        }\r\n      });\r\n  }\r\n\r\n  request_shared_lock = () => {\r\n    // send request for a shared lock to backend\r\n    let shared_lock_request = {\r\n      row: select_i,\r\n      col: select_j\r\n    }\r\n    this.socket.emit('REQUEST_SHARED_LOCK', shared_lock_request);\r\n  }\r\n\r\n  request_exclusive_lock = (i, j) => {\r\n    // send request for a exclusive lock to backend\r\n    let exclusive_lock_request = {\r\n      row: i,\r\n      col: j\r\n    }\r\n    this.socket.emit('REQUEST_EXCLUSIVE_LOCK', exclusive_lock_request);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  toggleExclusiveLockReject = () => {\r\n    this.setState({\r\n      isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleSharedLockReject = () => {\r\n    this.setState({\r\n      isSharedLockRejectOpen: !this.state.isSharedLockRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleConflictModal = () => {\r\n    this.setState({\r\n      isConflictModalOpen: !this.state.isConflictModalOpen\r\n    })\r\n  }\r\n\r\n  toggleShowHistory = () => {\r\n    this.setState({\r\n      isShowHistoryOpen: !this.state.isShowHistoryOpen\r\n    })\r\n  }\r\n\r\n  toggleUserNamePrompt = () => {\r\n    this.setState({\r\n      isUserNamePromptOpen: !this.state.isUserNamePromptOpen\r\n    })\r\n  }\r\n\r\n  fetchMoreData = () => {\r\n    if (this.state.items.length >= Math.ceil(this.state.rows.length / 50.0) ) {\r\n      this.setState({ hasMore: false });\r\n      console.log('the final number of page is: ' + Math.ceil(this.state.rows.length / 50.0))\r\n      return;\r\n    }\r\n\r\n    //load data from buffer to the display data matrix\r\n    if (this.state.load_from_buffer_to_matrix == false) {\r\n      this.setState({\r\n        load_from_buffer_to_matrix: true\r\n      })\r\n\r\n      //double check if buffer has been loaded\r\n      if (buffer.length == 0) {\r\n        this.fetchMoreRows(PREFETCH_SIZE);\r\n      }\r\n    } else {\r\n\r\n      //move data from buffer to matrix\r\n      for (var i = 0; i < PREFETCH_SIZE; i++) {\r\n        if (i < buffer.length) {\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= num_attr; j++) {\r\n            if (j == 0) {\r\n              let item = {text: buffer[i].id}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: buffer[i][\"attribute\" + j]}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          dataMatrix[i] = jsonObj\r\n        } else {\r\n          console.log(\"i is greater than \" + PREFETCH_SIZE + \" now\")\r\n          let jsonObj = {}\r\n          for (var j = 0; j <= num_attr; j++) {\r\n            if (j == 0) {\r\n              let item = {text: ''}\r\n              jsonObj['id'] = item\r\n            } else {\r\n              let item = {text: ''}\r\n              jsonObj['attr' + j] = item\r\n            }\r\n          }\r\n          dataMatrix[i] = jsonObj\r\n        }\r\n      }\r\n\r\n      //pre-fetch new data into the buffer\r\n      this.fetchMoreRows(current_fetch_index)\r\n      current_fetch_index = current_fetch_index + PREFETCH_SIZE\r\n\r\n      console.log(\"data matrix at fetch more data is: \")\r\n      console.log(dataMatrix)\r\n    }\r\n\r\n    // a fake async api call like which sends\r\n    // 20 more records in 1.5 secs\r\n    setTimeout(() => {\r\n      this.setState({\r\n        items: this.state.items.concat(Array.from({ length: 1 }))\r\n      });\r\n    }, 1500);\r\n  };\r\n\r\n  fetchMoreRows = (index) => {\r\n    buffer = []\r\n    buffer_copy = []\r\n    let url = '/database/fetch-fifty-rows/' + index\r\n      fetch(url)\r\n      .then(res => res.json())      \r\n      .then(data => {\r\n        if (data.length === 0) {\r\n          console.log(\"No data is fetched by fetchMoreRows function\")\r\n          noData = true\r\n        } else {\r\n          noData = false;\r\n          //load returned data into the buffer\r\n          for (var i = 0; i < data.length; i++) {\r\n            var temp = []\r\n            for (var j = 1; j <= ATT_NUM; j++) {\r\n              temp[j - 1] = data[i]['attribute' + j]\r\n            }\r\n            buffer[i] = temp;\r\n            buffer_copy[i] = temp.slice()\r\n          }\r\n          console.log(\"the buffer is: \")\r\n          console.log(buffer)\r\n        }\r\n      });\r\n  }\r\n\r\n  display = () => {\r\n    display_dataset_button = \"\";\r\n    if (this.state.transaction_mode) {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    } else {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    }\r\n    this.setState({\r\n      data_original: this.state.data_original.concat(buffer)\r\n    })\r\n    data_display = data_display.concat(buffer_copy) \r\n    this.fetchMoreRows(current_fetch_index)\r\n    current_fetch_index += 50\r\n\r\n    // fill in column headers and row headers\r\n    if (col_headers.length == 0) {\r\n      for (var i = 0; i < data_display[0].length; i++) {\r\n        col_headers[i] = data_display[0][i]\r\n      }\r\n    }\r\n  }\r\n\r\n  redirect_import = () => {\r\n    this.setState( {\r\n      redirect_import_page: true\r\n    })\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n    if (bottom) {\r\n      this.display()\r\n    }\r\n    prev_scrolltop = e.target.scrollTop;\r\n  }\r\n\r\n  show_state = () => {\r\n    console.log(chn_copy);\r\n    console.log(change_detected);\r\n  }\r\n\r\n  sendMessage = (message) => {\r\n    this.socket.emit('SEND_MESSAGE', message);\r\n  }\r\n\r\n  check_cell_change = () => {\r\n    // create a message to socket\r\n    if (change_detected) {\r\n\r\n      // find current state\r\n      let state = \"Y\"; //  Y means in a transaction\r\n      if (!this.state.transaction_mode) {\r\n        state = \"N\";\r\n      }\r\n\r\n      // extract features of the new value\r\n      let feature = \"\";\r\n      if (isNaN(chn_copy[0][3])) {\r\n        feature = \"STR\";\r\n      } else {\r\n        feature = \"DIGIT\";\r\n      }\r\n\r\n      // record user action\r\n      user_actions.push([\"edit_cell\", chn_copy[0][0], chn_copy[0][1], feature, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n\r\n      console.log(\"chn_copy is check cell change is===============================: \", chn_copy);\r\n      this.request_exclusive_lock(chn_copy[0][0], chn_copy[0][1]);\r\n      \r\n      pending_changes.user = this.state.user_name\r\n  \r\n      let temp = [];\r\n      let y_coord = parseInt(chn_copy[0][0]) + 1;\r\n      let x_coord = parseInt(chn_copy[0][1]) + 1;\r\n      let actual_value = chn_copy[0][3];\r\n      temp[0] = x_coord;\r\n      temp[1] = actual_value;\r\n      temp[2] = y_coord;\r\n      pending_changes.data.push(temp);\r\n      console.log(\"pending changes are000: \", pending_changes)\r\n      // this.state.data_original[y_coord - 1][x_coord - 1] = actual_value; // not sure if we need this anymore\r\n      change_detected = false;\r\n    } else {\r\n      console.log(\"no changed detected\")\r\n    }\r\n  }\r\n\r\n  cell_read_only = (input_row, input_col) => {\r\n    // this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_value);\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      cells: function(row, col, prop){\r\n       var cellProperties = {};\r\n         if(row == input_row && col == input_col){\r\n           cellProperties.readOnly = 'true'\r\n         }\r\n       return cellProperties\r\n     }\r\n   })\r\n  }\r\n\r\n\r\n  hangleUsername = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  send_default_username = () => {\r\n    let name_package = {\r\n      user_name: \"anonymous user\"\r\n    }\r\n    this.socket.emit('SEND_USERNAME', name_package);\r\n    this.toggleUserNamePrompt()\r\n  }\r\n\r\n  onUserNameSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"call username\")\r\n      let name_package = {\r\n        user_name: this.state.user_name\r\n      }\r\n      this.socket.emit('SEND_USERNAME', name_package);\r\n      this.toggleUserNamePrompt();\r\n  }\r\n\r\n  resolve_conflict = (e) => {\r\n      e.preventDefault();\r\n      data_display[conflict_i][conflict_j] = incoming_value;\r\n      this.state.data_original[conflict_i][conflict_j] = incoming_value;\r\n\r\n      // reset conflict records\r\n      conflict_i = -1;\r\n      conflict_j = -1;\r\n      incoming_value = -1;\r\n      conflict_message = \"\";\r\n      this.toggleConflictModal();\r\n  }\r\n\r\n  start_transaction = () => {\r\n    pending_changes.data = []\r\n    this.setState({\r\n      transaction_mode: true\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    //apply_read_only_lock_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.request_shared_lock} >Apply Read-Only Lock</Button> \r\n  }\r\n\r\n  commit_transaction = () => {\r\n      console.log(\"pending changes are111: \", pending_changes);\r\n      if (pending_changes.data.length > 0) {\r\n        // Send update message to socket and backend\r\n        this.sendMessage(pending_changes)\r\n        //POST req here\r\n        const requestOptions = {\r\n          method: 'POST',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({pending_changes})\r\n        };\r\n        fetch('/database/update-content', requestOptions)\r\n      }\r\n  }\r\n\r\n  end_transaction = () => {\r\n    setTimeout(() => {\r\n      this.commit_transaction();\r\n    }, 500);\r\n    this.setState({\r\n      transaction_mode: false\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    //apply_read_only_lock_button = \"\";\r\n\r\n    // tell the backend that transaction is completed\r\n    this.socket.emit('FINISH_TRANSACTION');\r\n  }\r\n\r\n  track_action = (e, action_type) => {\r\n\r\n    // find current state\r\n    let state = \"Y\"; //  Y means in a transaction\r\n    if (!this.state.transaction_mode) {\r\n      state = \"N\";\r\n    }\r\n\r\n    // calculate idle time and record idle action if necessary\r\n    let idle_duration = (Date.now() / 1000) - recorded_time;\r\n    recorded_time = (Date.now() / 1000);\r\n    if (idle_duration > 3) {\r\n\r\n      // check if we can merge two idle periods together\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][0] == \"idle\") {\r\n        let prev_idle_time = user_actions[user_actions.length - 1][1];\r\n        user_actions.pop();\r\n        user_actions.push([\"idle\", parseInt(idle_duration) + prev_idle_time, null, null, null, null, state]);\r\n      } else {\r\n        user_actions.push([\"idle\", parseInt(idle_duration), null, null, null, null, state]);\r\n      }\r\n    }\r\n\r\n    // check and update possible spreadsheet layout change\r\n    if (layout_changes.layout_changed) { \r\n      \r\n      // remove prev idle action\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][0] == \"idle\") {\r\n        user_actions.pop();\r\n      }\r\n\r\n      // add in all layout changes\r\n      for (var i = 0; i < layout_changes.changes.length; i++) {\r\n        let layout_change_type = layout_changes.changes[i][0];\r\n        let layout_change_direction = layout_changes.changes[i][1];\r\n        let change_index = layout_changes.changes[i][2];\r\n        user_actions.push([layout_change_type, change_index, layout_change_direction, null, null, null, state]); \r\n      }\r\n\r\n      // clear up current layout_changes recorder\r\n      layout_changes.changes.length = 0;\r\n      layout_changes.layout_changed = false;\r\n    }\r\n\r\n    // handle scroll actions\r\n    if (action_type == \"scroll\") {\r\n\r\n      let scroll_diff = prev_scrolltop - e.target.scrollTop;\r\n      let action_length = user_actions.length;\r\n\r\n      // don't hace scroll_diff === 0 because each scroll on mouse will result in two identical function calls\r\n      if (scroll_diff > 0) {\r\n        \r\n        // check if previous is a large up scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][0] === \"up_scroll_l\") {\r\n          // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small up scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][0] !== \"up_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n\r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([\"up_scroll_l\", null, null, null, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([\"up_scroll_s\", null, null, null, null, null, state]);\r\n          }\r\n        }\r\n\r\n        else {\r\n          user_actions.push([\"up_scroll_s\", null, null, null, null, null, state]);\r\n        }\r\n\r\n      } else if (scroll_diff < 0) {\r\n\r\n        // check if previous is a large down scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][0] === \"down_scroll_l\") {\r\n            // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][0] !== \"down_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n          \r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([\"down_scroll_l\", null, null, null, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([\"down_scroll_s\", null, null, null, null, null, state]);\r\n          }\r\n        } \r\n\r\n        else {\r\n          user_actions.push([\"down_scroll_s\", null, null, null, null, null, state]);\r\n        }\r\n      }\r\n      this.handleScroll(e);\r\n    }\r\n\r\n    // calculate click action\r\n    else if (action_type == \"click\") {\r\n\r\n      if (currently_editing && this.state.transaction_mode) {\r\n        \r\n        // select a row\r\n        if (select_j < 0) {\r\n          user_actions.push([\"select_r\", select_i, null, null, null, null, state]);\r\n        }\r\n\r\n        // select a column\r\n        else if (select_i < 0) {\r\n          user_actions.push([\"select_c\", select_j, null, null, null, null, state]);\r\n        }\r\n        \r\n        // select a cell\r\n        else {\r\n          user_actions.push([action_type, select_i, select_j, null, select_i + 1, col_headers[select_j], state]);\r\n        }\r\n        currently_editing = false;\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n\r\n    // calculate kepress action\r\n    else if (action_type == \"key_press\") {\r\n\r\n      if (change_detected) {\r\n        // handle enter press\r\n        if (e.key == \"Enter\") {\r\n          user_actions.push([\"keyPress_enter\", chn_copy[0][0], chn_copy[0][1], null, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state ]);\r\n        }\r\n\r\n        // handle tab press\r\n        else if (e.key == \"Tab\") {\r\n          user_actions.push([\"keyPress_tab\", chn_copy[0][0], chn_copy[0][1], null, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n\r\n        // all other press \r\n        else {\r\n          user_actions.push([\"keyPress\", chn_copy[0][0], chn_copy[0][1], null, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n    console.log(user_actions);\r\n  }\r\n\r\n  store_training_data = () => {\r\n    user_actions.push([\"END_TRAINING_DATA\", null, null, null, null, null, \"END\"]);\r\n    let action_package = {\r\n      user_actions: user_actions\r\n    }\r\n    //POST req here\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({action_package})\r\n    };\r\n    fetch('/database/send-training-data', requestOptions)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect_import_page) {\r\n      return <Redirect to={this.state.import_page_link} />\r\n    }\r\n    return (\r\n      <div onClick={e => this.track_action(e, \"click\")} onKeyUp={e => this.track_action(e, \"key_press\")} className=\"App\">\r\n        <script src=\"node_modules/handsontable/dist/handsontable.full.min.js\"></script>\r\n        <link href=\"node_modules/handsontable/dist/handsontable.full.min.css\" rel=\"stylesheet\" media=\"screen\"></link>\r\n         <Jumbotron className='logo-jumbo'>\r\n          </Jumbotron >\r\n          <div>\r\n          <Jumbotron >\r\n            {/* <Container fluid> */}\r\n                <Navbar color=\"faded\" light>\r\n                  <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                  <Collapse isOpen={this.state.collapsed} navbar>\r\n                    <Nav tabs>\r\n                      <NavItem>\r\n                        <NavLink href=\"/result\">Import Page</NavLink>\r\n                      </NavItem>\r\n                    </Nav>\r\n                  </Collapse>\r\n                </Navbar>\r\n                  <h1 className=\"display-3\">Hi {this.state.user_name}, welcome to spreadsheet web!</h1>\r\n                  <p className=\"lead\">This is a simple web interface that allows you to upload spreadsheets and retrieve data.</p>\r\n                  <hr className=\"my-2\" />\r\n                  <p>{this.state.user_text_block}</p>\r\n                  <p className=\"lead\">\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleShowHistory} >Edit History</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {display_dataset_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {transaction_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {apply_read_only_lock_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.store_training_data} >Complete Simulation</Button>\r\n                  </p>\r\n                  <p>{this.state.edit_message}</p>\r\n                  \r\n\r\n                  <Modal size='lg' isOpen={this.state.isUserNamePromptOpen} >\r\n                    <ModalHeader >Please enter your costomized username, or choose the default random username </ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.onUserNameSubmit}>\r\n                        <FormGroup>\r\n                          <Label for=\"user_name\">Enter your username</Label>\r\n                          <Input type=\"text\" name=\"user_name\" id=\"user_name\" onChange={e => this.hangleUsername(e)} />\r\n                        </FormGroup>\r\n                        <Button size='lg' color=\"primary\" className='single_search_submit' type=\"submit\" >Confirm</Button> {' '}\r\n                        <Button size='lg' color=\"primary\" className='single_search_submit' onClick={this.send_default_username}>Default Username</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isShowHistoryOpen} toggle={this.toggleShowHistory}>\r\n                    <ModalHeader toggle={this.toggleShowHistory}>File Edit History</ModalHeader>\r\n                    <ModalBody>\r\n                      <Table striped className=\"history-table\">\r\n                        <tbody>\r\n                            {this.state.history.map(line => \r\n                              <tr key = {line}>\r\n                                <td>{line}</td>\r\n                              </tr>\r\n                            )}\r\n                        </tbody>\r\n                      </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className='single_search_submit' onClick={this.toggleShowHistory}>Close</Button> {' '}\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isConflictModalOpen} toggle={this.toggleConflictModal}>\r\n                    <ModalHeader toggle={this.toggleConflictModal}>Conflicting Incoming Changes from Other Users </ModalHeader>\r\n                    <ModalBody>\r\n                      {conflict_message}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className=\"btn btn-primary btn-sm\" onClick={this.resolve_conflict} block>Accept Incoming Changes</Button> {' '}\r\n                      <Button size='lg' color=\"secondary\" className=\"btn btn-primary btn-sm\" onClick={this.toggleConflictModal} block>Ignore Incoming Changes</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isSharedLockRejectOpen} toggle={this.toggleSharedLockReject}>\r\n                    <ModalHeader toggle={this.toggleSharedLockReject}>Lock Request Rejection </ModalHeader>\r\n                    <ModalBody>\r\n                      Cannot place a read-only lock on a cell with an exclusive lock!\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className=\"btn btn-primary btn-sm\" onClick={this.toggleSharedLockReject} block>Got it</Button> {' '}\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isExclusiveLockRejectOpen} toggle={this.toggleExclusiveLockReject}>\r\n                    <ModalHeader toggle={this.toggleExclusiveLockReject}>Lock Request Rejection </ModalHeader>\r\n                    <ModalBody>\r\n                      Cannot place an exclusive lock on a cell with a lock already! \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className=\"btn btn-primary btn-sm\" onClick={this.toggleExclusiveLockReject} block>Got it</Button> {' '}\r\n                    </ModalFooter>\r\n                  </Modal>\r\n            {/* </Container> */}\r\n        </Jumbotron>\r\n        </div>\r\n\r\n        <hr />\r\n        Below Is The Entire Data Set  \r\n        {/* <div id = \"display_portion\" onClick={this.check_cell_change} onKeyUp={this.check_cell_change} onScroll={this.handleScroll}  tabIndex=\"1\"> */}\r\n        <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n          <HotTable className=\"handsontable\" id =\"display_table\" data={data_display} ref={this.hotTableComponent} id={this.id}\r\n            colHeaders={true} \r\n            rowHeaders={true} \r\n            width=\"100%\" \r\n            height=\"300\"\r\n            colWidths=\"100%\"\r\n            rowHeights=\"25\"\r\n            contextMenu={true}\r\n            formulas={true}\r\n            readOnly={!this.state.transaction_mode}\r\n            />\r\n        </div>\r\n          \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Start;\r\n","import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport { HotTable } from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input, ListGroup, Card, CardTitle, CardText\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Spreadsheet from \"react-spreadsheet\";\r\nimport { ReactCanvasGrid } from 'react-canvas-grid';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport io from \"socket.io-client\";\r\nconst Utils = require('../utils');\r\nlet utils = new Utils();\r\n\r\n//default order: 6\r\nconst BPlusTree = require('bplustree');\r\nlet tree = new BPlusTree()\r\n\r\nlet simulation_type = \"\";\r\n\r\n// A JSON object that keeps track of previous layout changes\r\nlet layout_changes = {\r\n  layout_changed: false,\r\n  changes: [] // 1st element: action;  2nd element: index\r\n}\r\n\r\nlet col_headers = []\r\n\r\nlet user_actions = []\r\nlet recorded_time = 0;\r\n\r\nlet SCROLL_SIZE = 5;\r\n\r\nlet data = [], dataMatrix = [], columns = [], buffer = [], buffer_copy = []\r\nlet PREFETCH_SIZE = 50\r\nlet noData = true\r\nlet ATT_NUM = 7\r\nlet prev_scrolltop = 0\r\nlet data_display = []\r\nlet chn_copy = []\r\nlet change_detected = false;\r\n\r\nlet current_fetch_index = 1 //initial pre-prefetch index\r\nlet num_attr = 0;\r\n\r\nlet current_i = -1;\r\nlet current_j = -1;\r\nlet currently_editing = false;\r\n\r\nlet conflict_i = -1;\r\nlet conflict_j = -1;\r\nlet incoming_value = \"\";\r\nlet conflict_message = \"\";\r\n\r\nlet select_i = -1; \r\nlet select_j = -1;\r\n\r\nlet transaction_button = \"\";\r\nlet apply_read_only_lock_button = \"\";\r\nlet display_dataset_button = \"\";\r\n\r\nlet pending_changes = {\r\n  data:[], // 2d array to store difference: y, value, x, \r\n  try_message: \"SENT MESSAGE! SUCCESS!\", \r\n  user: \"\"\r\n}\r\n\r\nlet socket_id = \"\";\r\n\r\nclass Simulation extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.id = \"hot\";\r\n    this.hotTableComponent = React.createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      rows: [],\r\n      cols: [],\r\n      attri: [],\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      redirect_import_page: false, \r\n      import_page_link: '/result', \r\n\r\n      redirect_academic_page: false,\r\n      academic_page_link: '/academic',\r\n\r\n      redirect_management_page: false,\r\n      management_page_link: '/management',\r\n\r\n      redirect_financing_page: false,\r\n      financing_page_link: '/financing',\r\n\r\n      data_original: [], \r\n      check_cell_update: false, \r\n\r\n      test_block: \"ORIGINAL MESSAGE\", \r\n      users:[], \r\n      user_text_block: \"\", \r\n\r\n      isSelectPromptOpen: true, \r\n      user_name: \"\", \r\n\r\n      edit_message: \"Last Edit: No modification yet\", \r\n      history: [], \r\n      isShowHistoryOpen: false, \r\n\r\n      isConflictModalOpen: false, \r\n\r\n      transaction_mode: false, \r\n      isSharedLockRejectOpen: false,\r\n      isExclusiveLockRejectOpen: false, \r\n\r\n      // simulation_type: \"\"\r\n    }\r\n\r\n    this.socket = io('localhost:3001');\r\n\r\n    this.socket.on('RECEIVE_MESSAGE', function(data){\r\n      addMessage(data);\r\n    });\r\n\r\n    this.socket.on('RECEIVE_ID', function(id){\r\n      change_id(id);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_REJECT', function(shared_lock_reject){\r\n      toggleSharedLockReject(shared_lock_reject);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_ACCEPT', function(shared_lock_accept){\r\n      let row = shared_lock_accept.row;\r\n      let col = shared_lock_accept.col;\r\n      \r\n      display_shared_lock(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_REJECT', function(exclusive_lock_reject){\r\n      let row = exclusive_lock_reject.row;\r\n      let col = exclusive_lock_reject.col;\r\n      \r\n      toggleExclusiveLockReject(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_ACCEPT', function(exclusive_lock_accept){\r\n      let row = exclusive_lock_accept.row;\r\n      let col = exclusive_lock_accept.col;\r\n      let id = exclusive_lock_accept.id\r\n      \r\n      if (id !== socket_id) {\r\n        display_exclusive_lock(row, col);\r\n      }\r\n    });\r\n\r\n    this.socket.on('CHANGE_CURRENT_USER', function(data) {\r\n      change_current_user(data);\r\n    });\r\n\r\n    this.socket.on('ADD_NEW_USER', function(data) {\r\n      addNewUser(data);\r\n    });\r\n\r\n    this.socket.on('RECEIVE_FREED_CELLS', function(free_cells_package) {\r\n      update_freed_cells(free_cells_package);\r\n    });\r\n\r\n    this.socket.on('UPDATE_EDIT_MESSAGE', function(message_package) {\r\n      update_edit_message(message_package);\r\n    });\r\n\r\n    const update_edit_message = message_package => {\r\n      this.setState({\r\n        edit_message: message_package.new_message, \r\n        history: message_package.history\r\n      })\r\n    }\r\n\r\n    const update_freed_cells = free_cells_package => {\r\n\r\n      let free_cells = free_cells_package.free_cells;\r\n      let disconnect = free_cells_package.disconnect;\r\n\r\n      console.log(\"the free cells are \", free_cells);\r\n\r\n      for (var i = 0; i < free_cells.length; i++) {\r\n        let location = free_cells[i];\r\n        if (location[0] < data_display.length) {\r\n          \r\n          let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(location[0], location[1]);\r\n\r\n          // update read-only cells\r\n          if (cell_data[0] == \"*\") {\r\n            let new_data = cell_data.substring(1);\r\n            this.hotTableComponent.current.hotInstance.setDataAtCell(location[0], location[1], new_data);\r\n          }\r\n\r\n          if (cell_data == \"-----\" && disconnect == true) {\r\n            data_display[location[0], location[1]] = this.state.data_original[location[0], location[1]];\r\n          }\r\n        }\r\n      }\r\n      cell_read_only();\r\n    }\r\n\r\n    const change_id = id => {\r\n      socket_id = id;\r\n    }\r\n\r\n    const addNewUser = data => {\r\n      this.setState({\r\n        history: data.history\r\n      })\r\n      change_current_user(data.current_users);\r\n    }\r\n\r\n    const cell_read_only = () => {\r\n      console.log(\"setting to read only...\")\r\n      this.hotTableComponent.current.hotInstance.updateSettings({\r\n        cells: function(row, col, prop){\r\n         var cellProperties = {};\r\n         console.log(\"undefined is: \", data_display[row][col], \" \", row, \" \", col)\r\n           if(data_display[row][col] !== null && data_display[row][col].length !== 0 &&  (data_display[row][col] == \"-----\" || data_display[row][col].charAt(0) === \"*\")){\r\n             cellProperties.readOnly = 'true'\r\n           }\r\n         return cellProperties\r\n       }\r\n     })\r\n    }\r\n\r\n    const display_shared_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n  \r\n        let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(row, col);\r\n  \r\n        // if there is a shared lock displaying already, do nothing\r\n        if (cell_data.charAt(0) === \"*\") {\r\n          return;\r\n        } else {\r\n          let new_data = \"*\" + cell_data\r\n          this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_data);\r\n        }\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const display_exclusive_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n        console.log(row)\r\n        console.log(col)\r\n        let new_value = \"-----\";\r\n        this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_value);\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const toggleSharedLockReject = data => {\r\n      this.setState({\r\n        isSharedLockRejectOpen: !this.state.isSharedLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const toggleExclusiveLockReject = data => {\r\n      this.setState({\r\n        isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const change_current_user = data => {\r\n      this.setState({\r\n        users: data\r\n      });\r\n      let new_user_text = \"Currently Online: \";\r\n      for (var i = 0; i < this.state.users.length; i++) {\r\n        if (i == this.state.users.length - 1) {\r\n          new_user_text += this.state.users[i]\r\n        } else {\r\n          new_user_text += this.state.users[i] + \", \"\r\n        }\r\n      }\r\n      this.setState({\r\n        user_text_block: new_user_text\r\n      });\r\n    }\r\n\r\n    const addMessage = data => {\r\n\r\n        let change_table = data.data\r\n        for (var x = 0; x < change_table.length; x++) {\r\n          // Extract data\r\n          let j = change_table[x][0] - 1   // 0 --> y_coord\r\n          let value = change_table[x][1] // 1 --> actual value\r\n          let i = change_table[x][2] - 1 // 2 --> x_coord\r\n\r\n          // Update spreadsheet\r\n          if (i < data_display.length) {\r\n            data_display[i][j] = value     \r\n            this.state.data_original[i][j] = value\r\n          }\r\n\r\n          // check buffer\r\n          else if ((i + 1) < current_fetch_index) {\r\n            i++; // change i and j to 1-based index\r\n            if (buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] != value) {\r\n              buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] = value  // update both buffer and buffer_copy\r\n              buffer[i + PREFETCH_SIZE - current_fetch_index][j] = value\r\n            }\r\n          }\r\n        }\r\n        console.log(\"after socket, buffer_copy is: \", buffer_copy)\r\n        this.setState({\r\n          test_block: data.try_message\r\n        });\r\n    };\r\n\r\n    this.toggleSelectionPrompt = this.toggleSelectionPrompt.bind()\r\n    this.toggleShowHistory = this.toggleShowHistory.bind()\r\n    this.toggleConflictModal = this.toggleConflictModal.bind()\r\n    this.toggleNavbar = this.toggleNavbar.bind()\r\n    this.toggleSharedLockReject = this.toggleSharedLockReject.bind();\r\n    this.toggleExclusiveLockReject = this.toggleExclusiveLockReject.bind();\r\n  }\r\n\r\n  // fetch 50 rows of data into the buffer\r\n  async componentDidMount() {\r\n    recorded_time = Date.now() / 1000;\r\n\r\n    display_dataset_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.display} >Display Dataset</Button> \r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n      // currently_editing = true;\r\n      // console.log(\"current editing \", current_i, current_j);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      // console.log(select_i, select_j);\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n      // console.log(\"index: \", index);\r\n      // console.log(\"amount: \", amount);\r\n      // console.log(\"source: \", source);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n      // console.log(\"index: \", index);\r\n      // console.log(\"amount: \", amount);\r\n      // console.log(\"source: \", source);\r\n    });\r\n  }\r\n\r\n  request_shared_lock = () => {\r\n    // send request for a shared lock to backend\r\n    let shared_lock_request = {\r\n      row: select_i,\r\n      col: select_j\r\n    }\r\n    this.socket.emit('REQUEST_SHARED_LOCK', shared_lock_request);\r\n  }\r\n\r\n  request_exclusive_lock = (i, j) => {\r\n    // send request for a exclusive lock to backend\r\n    let exclusive_lock_request = {\r\n      row: i,\r\n      col: j\r\n    }\r\n    this.socket.emit('REQUEST_EXCLUSIVE_LOCK', exclusive_lock_request);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  toggleExclusiveLockReject = () => {\r\n    this.setState({\r\n      isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleSharedLockReject = () => {\r\n    this.setState({\r\n      isSharedLockRejectOpen: !this.state.isSharedLockRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleConflictModal = () => {\r\n    this.setState({\r\n      isConflictModalOpen: !this.state.isConflictModalOpen\r\n    })\r\n  }\r\n\r\n  toggleShowHistory = () => {\r\n    this.setState({\r\n      isShowHistoryOpen: !this.state.isShowHistoryOpen\r\n    })\r\n  }\r\n\r\n  toggleSelectionPrompt = () => {\r\n    this.setState({\r\n        isSelectPromptOpen: !this.state.isSelectPromptOpen\r\n    })\r\n  }\r\n\r\n  display = () => {\r\n    display_dataset_button = \"\";\r\n    if (this.state.transaction_mode) {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    } else {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    }\r\n    this.setState({\r\n      data_original: this.state.data_original.concat(buffer)\r\n    })\r\n\r\n    // fill in column headers and row headers\r\n    if (data_display.length == 0) {\r\n      data_display.push(col_headers);\r\n    }\r\n    data_display = data_display.concat(buffer_copy) \r\n    console.log(\"data display is: \", data_display);\r\n  }\r\n\r\n  redirect_import = () => {\r\n    this.setState( {\r\n      redirect_import_page: true\r\n    })\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n    if (bottom) {\r\n      // this.display()\r\n    }\r\n    prev_scrolltop = e.target.scrollTop;\r\n  }\r\n\r\n  show_state = () => {\r\n    console.log(chn_copy);\r\n    console.log(change_detected);\r\n  }\r\n\r\n  sendMessage = (message) => {\r\n    this.socket.emit('SEND_MESSAGE', message);\r\n  }\r\n\r\n  check_cell_change = () => {\r\n    // create a message to socket\r\n    if (change_detected) {\r\n\r\n      // find current state\r\n      let state = \"Y\"; //  Y means in a transaction\r\n      if (!this.state.transaction_mode) {\r\n        state = \"N\";\r\n      }\r\n\r\n      // extract features of the new value\r\n      let feature = \"\";\r\n      if (isNaN(chn_copy[0][3])) {\r\n        feature = \"STR\";\r\n      } else {\r\n        feature = \"DIGIT\";\r\n      }\r\n\r\n      // record user action\r\n      user_actions.push([\"edit_cell\", chn_copy[0][0], chn_copy[0][1], feature, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n\r\n      // this.request_exclusive_lock(chn_copy[0][0], chn_copy[0][1]);\r\n      \r\n      pending_changes.user = this.state.user_name\r\n  \r\n      let temp = [];\r\n      let y_coord = parseInt(chn_copy[0][0]) + 1;\r\n      let x_coord = parseInt(chn_copy[0][1]) + 1;\r\n      let actual_value = chn_copy[0][3];\r\n      temp[0] = x_coord;\r\n      temp[1] = actual_value;\r\n      temp[2] = y_coord;\r\n      pending_changes.data.push(temp);\r\n      change_detected = false;\r\n    } else {\r\n      console.log(\"no changed detected\")\r\n    }\r\n  }\r\n\r\n  cell_read_only = (input_row, input_col) => {\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      cells: function(row, col, prop){\r\n       var cellProperties = {};\r\n         if(row == input_row && col == input_col){\r\n           cellProperties.readOnly = 'true'\r\n         }\r\n       return cellProperties\r\n     }\r\n   })\r\n  }\r\n\r\n\r\n  hangleUsername = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  send_default_username = () => {\r\n    let name_package = {\r\n      user_name: \"anonymous user\"\r\n    }\r\n    this.socket.emit('SEND_USERNAME', name_package);\r\n    this.toggleUserNamePrompt()\r\n  }\r\n\r\n  onSelectionSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"call username\")\r\n      let name_package = {\r\n        user_name: this.state.user_name\r\n      }\r\n      this.socket.emit('SEND_USERNAME', name_package);\r\n      this.toggleUserNamePrompt();\r\n  }\r\n\r\n  resolve_conflict = (e) => {\r\n      e.preventDefault();\r\n      data_display[conflict_i][conflict_j] = incoming_value;\r\n      this.state.data_original[conflict_i][conflict_j] = incoming_value;\r\n\r\n      // reset conflict records\r\n      conflict_i = -1;\r\n      conflict_j = -1;\r\n      incoming_value = -1;\r\n      conflict_message = \"\";\r\n      this.toggleConflictModal();\r\n  }\r\n\r\n  start_transaction = () => {\r\n    pending_changes.data = []\r\n    this.setState({\r\n      transaction_mode: true\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    //apply_read_only_lock_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.request_shared_lock} >Apply Read-Only Lock</Button> \r\n  }\r\n\r\n  end_transaction = () => {\r\n    // setTimeout(() => {\r\n    //   this.commit_transaction();\r\n    // }, 500);\r\n    this.setState({\r\n      transaction_mode: false\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n\r\n    // tell the backend that transaction is completed\r\n    // this.socket.emit('FINISH_TRANSACTION');\r\n  }\r\n\r\n  track_action = (e, action_type) => {\r\n\r\n    // find current state\r\n    let state = \"Y\"; //  Y means in a transaction\r\n    if (!this.state.transaction_mode) {\r\n      state = \"N\";\r\n    }\r\n\r\n    // calculate idle time and record idle action if necessary\r\n    let idle_duration = (Date.now() / 1000) - recorded_time;\r\n    recorded_time = (Date.now() / 1000);\r\n    if (idle_duration > 3) {\r\n\r\n      // check if we can merge two idle periods together\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][0] == \"idle\") {\r\n        let prev_idle_time = user_actions[user_actions.length - 1][1];\r\n        user_actions.pop();\r\n        user_actions.push([\"idle\", parseInt(idle_duration) + prev_idle_time, null, null, null, null, state]);\r\n      } else {\r\n        user_actions.push([\"idle\", parseInt(idle_duration), null, null, null, null, state]);\r\n      }\r\n    }\r\n\r\n    // check and update possible spreadsheet layout change\r\n    if (layout_changes.layout_changed) { \r\n      \r\n      // remove prev idle action\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][0] == \"idle\") {\r\n        user_actions.pop();\r\n      }\r\n\r\n      // add in all layout changes\r\n      for (var i = 0; i < layout_changes.changes.length; i++) {\r\n        let layout_change_type = layout_changes.changes[i][0];\r\n        let layout_change_direction = layout_changes.changes[i][1];\r\n        let change_index = layout_changes.changes[i][2];\r\n        user_actions.push([layout_change_type, change_index, layout_change_direction, null, null, null, state]); \r\n      }\r\n\r\n      // clear up current layout_changes recorder\r\n      layout_changes.changes.length = 0;\r\n      layout_changes.layout_changed = false;\r\n    }\r\n\r\n    // handle scroll actions\r\n    if (action_type == \"scroll\") {\r\n\r\n      let scroll_diff = prev_scrolltop - e.target.scrollTop;\r\n      let action_length = user_actions.length;\r\n\r\n      // don't hace scroll_diff === 0 because each scroll on mouse will result in two identical function calls\r\n      if (scroll_diff > 0) {\r\n        \r\n        // check if previous is a large up scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][0] === \"up_scroll_l\") {\r\n          // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small up scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][0] !== \"up_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n\r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([\"up_scroll_l\", null, null, null, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([\"up_scroll_s\", null, null, null, null, null, state]);\r\n          }\r\n        }\r\n\r\n        else {\r\n          user_actions.push([\"up_scroll_s\", null, null, null, null, null, state]);\r\n        }\r\n\r\n      } else if (scroll_diff < 0) {\r\n\r\n        // check if previous is a large down scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][0] === \"down_scroll_l\") {\r\n            // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][0] !== \"down_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n          \r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([\"down_scroll_l\", null, null, null, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([\"down_scroll_s\", null, null, null, null, null, state]);\r\n          }\r\n        } \r\n\r\n        else {\r\n          user_actions.push([\"down_scroll_s\", null, null, null, null, null, state]);\r\n        }\r\n      }\r\n      this.handleScroll(e);\r\n    }\r\n\r\n    // calculate click action\r\n    else if (action_type == \"click\") {\r\n\r\n      if (currently_editing) {\r\n        \r\n        // select a row\r\n        if (select_j < 0) {\r\n          user_actions.push([\"select_r\", select_i, null, null, null, null, state]);\r\n        }\r\n\r\n        // select a column\r\n        else if (select_i < 0) {\r\n          user_actions.push([\"select_c\", select_j, null, null, null, null, state]);\r\n        }\r\n        \r\n        // select a cell\r\n        else {\r\n          user_actions.push([action_type, select_i, select_j, null, select_i + 1, col_headers[select_j], state]);\r\n        }\r\n        currently_editing = false;\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n\r\n    // calculate kepress action\r\n    else if (action_type == \"key_press\") {\r\n\r\n      if (change_detected) {\r\n        // handle enter press\r\n        if (e.key == \"Enter\") {\r\n          user_actions.push([\"keyPress_enter\", chn_copy[0][0], chn_copy[0][1], null, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state ]);\r\n        }\r\n\r\n        // handle tab press\r\n        else if (e.key == \"Tab\") {\r\n          user_actions.push([\"keyPress_tab\", chn_copy[0][0], chn_copy[0][1], null, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n\r\n        // all other press \r\n        else {\r\n          user_actions.push([\"keyPress\", chn_copy[0][0], chn_copy[0][1], null, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n    console.log(user_actions);\r\n  }\r\n\r\n  store_training_data = () => {\r\n    user_actions.push([\"END_TRAINING_DATA\", null, null, null, null, null, \"END\"]);\r\n    let action_package = {\r\n      user_actions: user_actions\r\n    }\r\n    //POST req here\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({action_package})\r\n    };\r\n    fetch('/training/send-training-data/' + simulation_type, requestOptions)\r\n  }\r\n\r\n  select_simulation = (e) => {\r\n    e.preventDefault();\r\n    simulation_type = e.target.name;\r\n    if (simulation_type == \"academic\") {\r\n      this.setState({\r\n        redirect_academic_page: true\r\n      })\r\n    }\r\n    if (simulation_type == \"management\") {\r\n      this.setState({\r\n        redirect_management_page: true\r\n      })\r\n    }\r\n    if (simulation_type == \"financing\") {\r\n      this.setState({\r\n        redirect_financing_page: true\r\n      })\r\n    }\r\n    // console.log(\"simulation type is: \", simulation_type);\r\n    // this.toggleSelectionPrompt();\r\n\r\n    // buffer = [];\r\n    // buffer_copy = [];\r\n    // utils.load_simulation(1, simulation_type, buffer, buffer_copy, col_headers);\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.redirect_import_page) {\r\n      return <Redirect to={this.state.import_page_link} />\r\n    }\r\n    if (this.state.redirect_academic_page) {\r\n      return <Redirect to={this.state.academic_page_link} />\r\n    }\r\n    if (this.state.redirect_management_page) {\r\n      return <Redirect to={this.state.management_page_link} />\r\n    }\r\n    if (this.state.redirect_financing_page) {\r\n      return <Redirect to={this.state.financing_page_link} />\r\n    }\r\n    return (\r\n      <div onClick={e => this.track_action(e, \"click\")} onKeyUp={e => this.track_action(e, \"key_press\")} className=\"App\">\r\n        <script src=\"node_modules/handsontable/dist/handsontable.full.min.js\"></script>\r\n        <link href=\"node_modules/handsontable/dist/handsontable.full.min.css\" rel=\"stylesheet\" media=\"screen\"></link>\r\n         <Jumbotron className='logo-jumbo'>\r\n          </Jumbotron >\r\n          <div>\r\n          <Jumbotron >\r\n            {/* <Container fluid> */}\r\n                <Navbar color=\"faded\" light>\r\n                  <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                  <Collapse isOpen={this.state.collapsed} navbar>\r\n                    <Nav tabs>\r\n                      <NavItem>\r\n                        <NavLink href=\"/result\">Import Page</NavLink>\r\n                      </NavItem>\r\n                    </Nav>\r\n                  </Collapse>\r\n                </Navbar>\r\n                  <h1 className=\"display-3\">Hi {this.state.user_name}, welcome to spreadsheet web!</h1>\r\n                  <p className=\"lead\">This is a simple web interface that allows you to upload spreadsheets and retrieve data.</p>\r\n                  <hr className=\"my-2\" />\r\n                  <p>{this.state.user_text_block}</p>\r\n                  <p className=\"lead\">\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleShowHistory} >Edit History</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {display_dataset_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {transaction_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {apply_read_only_lock_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.store_training_data} >Complete Simulation</Button>\r\n                  </p>\r\n                  <p>{this.state.edit_message}</p>\r\n                  \r\n\r\n                  <Modal size='lg' isOpen={this.state.isSelectPromptOpen} >\r\n                    <ModalHeader >Please Choose Your Assigned Simulation </ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <Card body>\r\n                                <CardTitle tag=\"h5\">Academic Simulation</CardTitle>\r\n                                <CardText>Simulation on a university class environment</CardText>\r\n                                <Button color=\"primary\" name=\"academic\" id=\"academic\" onClick={e => this.select_simulation(e)}> Choose This Simulation</Button>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col sm=\"6\">\r\n                                <Card body>\r\n                                <CardTitle tag=\"h5\">Management Simulation</CardTitle>\r\n                                <CardText>Simulation on management of employee schedules and project progress</CardText>\r\n                                <Button color=\"info\" name=\"management\" id=\"management\" onClick={e => this.select_simulation(e)}>Choose This Simulation</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <Card body>\r\n                                <CardTitle tag=\"h5\">Financing Simulation</CardTitle>\r\n                                <CardText>Simulation family or company financing, involving expenses and incomes</CardText>\r\n                                <Button color=\"primary\" name=\"financing\" id=\"financing\" onClick={e => this.select_simulation(e)}>Choose This Simulation</Button>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isShowHistoryOpen} toggle={this.toggleShowHistory}>\r\n                    <ModalHeader toggle={this.toggleShowHistory}>File Edit History</ModalHeader>\r\n                    <ModalBody>\r\n                      <Table striped className=\"history-table\">\r\n                        <tbody>\r\n                            {this.state.history.map(line => \r\n                              <tr key = {line}>\r\n                                <td>{line}</td>\r\n                              </tr>\r\n                            )}\r\n                        </tbody>\r\n                      </Table>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className='single_search_submit' onClick={this.toggleShowHistory}>Close</Button> {' '}\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isConflictModalOpen} toggle={this.toggleConflictModal}>\r\n                    <ModalHeader toggle={this.toggleConflictModal}>Conflicting Incoming Changes from Other Users </ModalHeader>\r\n                    <ModalBody>\r\n                      {conflict_message}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className=\"btn btn-primary btn-sm\" onClick={this.resolve_conflict} block>Accept Incoming Changes</Button> {' '}\r\n                      <Button size='lg' color=\"secondary\" className=\"btn btn-primary btn-sm\" onClick={this.toggleConflictModal} block>Ignore Incoming Changes</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isSharedLockRejectOpen} toggle={this.toggleSharedLockReject}>\r\n                    <ModalHeader toggle={this.toggleSharedLockReject}>Lock Request Rejection </ModalHeader>\r\n                    <ModalBody>\r\n                      Cannot place a read-only lock on a cell with an exclusive lock!\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className=\"btn btn-primary btn-sm\" onClick={this.toggleSharedLockReject} block>Got it</Button> {' '}\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isExclusiveLockRejectOpen} toggle={this.toggleExclusiveLockReject}>\r\n                    <ModalHeader toggle={this.toggleExclusiveLockReject}>Lock Request Rejection </ModalHeader>\r\n                    <ModalBody>\r\n                      Cannot place an exclusive lock on a cell with a lock already! \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' color=\"primary\" className=\"btn btn-primary btn-sm\" onClick={this.toggleExclusiveLockReject} block>Got it</Button> {' '}\r\n                    </ModalFooter>\r\n                  </Modal>\r\n            {/* </Container> */}\r\n        </Jumbotron>\r\n        </div>\r\n\r\n        <hr />\r\n        Below Is The Entire Data Set  \r\n        {/* <div id = \"display_portion\" onClick={this.check_cell_change} onKeyUp={this.check_cell_change} onScroll={this.handleScroll}  tabIndex=\"1\"> */}\r\n        <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n          <HotTable className=\"handsontable\" id =\"display_table\" data={data_display} ref={this.hotTableComponent} id={this.id}\r\n            colHeaders={true} \r\n            rowHeaders={true} \r\n            width=\"100%\" \r\n            height=\"300\"\r\n            colWidths=\"100%\"\r\n            rowHeights=\"25\"\r\n            contextMenu={true}\r\n            formulas={true}\r\n            readOnly={!this.state.transaction_mode}\r\n            />\r\n        </div>\r\n          \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Simulation;\r\n","import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport { HotTable } from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input, ListGroup, Card, CardTitle, CardText, TabContent, TabPane, ButtonDropdown, Dropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Spreadsheet from \"react-spreadsheet\";\r\nimport { ReactCanvasGrid } from 'react-canvas-grid';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport io from \"socket.io-client\";\r\nimport classnames from 'classnames';\r\n\r\nconst Utils = require('../utils');\r\nlet utils = new Utils();\r\n\r\nlet attendance_display = [];\r\nlet greadebook_display = [];\r\nlet student_status_display = [];\r\n\r\n//default order: 6\r\nconst BPlusTree = require('bplustree');\r\nlet tree = new BPlusTree()\r\n\r\nlet simulation_type = \"\";\r\n\r\n// A JSON object that keeps track of previous layout changes\r\nlet layout_changes = {\r\n  layout_changed: false,\r\n  changes: [] // 1st element: action;  2nd element: index\r\n}\r\n\r\nlet col_headers = []\r\nlet attendance_col_headers = [];\r\nlet grade_book_col_headers = [];\r\nlet student_status_col_headers = [];\r\nlet table_loaded = false;\r\n\r\nlet user_actions = []\r\nlet recorded_time = 0;\r\n\r\nlet SCROLL_SIZE = 5;\r\n\r\nlet data = [], dataMatrix = [], columns = [], buffer = [], buffer_copy = []\r\nlet PREFETCH_SIZE = 50\r\nlet noData = true\r\nlet ATT_NUM = 7\r\nlet prev_scrolltop = 0\r\nlet data_display = []\r\nlet chn_copy = []\r\nlet change_detected = false;\r\n\r\nlet current_fetch_index = 1 //initial pre-prefetch index\r\nlet num_attr = 0;\r\n\r\nlet current_i = -1;\r\nlet current_j = -1;\r\nlet currently_editing = false;\r\n\r\nlet conflict_i = -1;\r\nlet conflict_j = -1;\r\nlet incoming_value = \"\";\r\nlet conflict_message = \"\";\r\n\r\nlet select_i = -1; \r\nlet select_j = -1;\r\n\r\nlet transaction_button = \"\";\r\nlet apply_read_only_lock_button = \"\";\r\nlet display_dataset_button = \"\";\r\n\r\nlet pending_changes = {\r\n  data:[], // 2d array to store difference: y, value, x, \r\n  try_message: \"SENT MESSAGE! SUCCESS!\", \r\n  user: \"\"\r\n}\r\n\r\nlet socket_id = \"\";\r\n\r\nlet ref1 = \"\";\r\nlet ref2 = \"\";\r\nlet ref3 = \"\";\r\n\r\nclass Academic extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.id = \"hot\";\r\n    this.hotTableComponent = React.createRef();\r\n    this.hotTableComponent1 = React.createRef();\r\n    this.hotTableComponent2 = React.createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      redirect_import_page: false, \r\n      import_page_link: '/result', \r\n\r\n      data_original: [], \r\n      check_cell_update: false, \r\n\r\n      test_block: \"ORIGINAL MESSAGE\", \r\n      users:[], \r\n      user_text_block: \"\", \r\n\r\n      isSelectPromptOpen: true, \r\n      user_name: \"\", \r\n\r\n      edit_message: \"Last Edit: No modification yet\", \r\n      history: [], \r\n      isShowHistoryOpen: false, \r\n\r\n      transaction_mode: false, \r\n      isSharedLockRejectOpen: false,\r\n      isExclusiveLockRejectOpen: false, \r\n\r\n      isInstructionOpen: true,\r\n      activeTab: '1', \r\n\r\n      redirect_link: \"\", \r\n      isRedirectConfirmOpen: false, \r\n      redirect: false, \r\n\r\n      isNameModalOpen: false, \r\n      name: \"\", \r\n      curr_table: \"attendance\", \r\n\r\n      isRestartModalOpen: false\r\n    }\r\n\r\n    this.socket = io('localhost:3001');\r\n\r\n    this.socket.on('RECEIVE_MESSAGE', function(data){\r\n      addMessage(data);\r\n    });\r\n\r\n    this.socket.on('RECEIVE_ID', function(id){\r\n      change_id(id);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_REJECT', function(shared_lock_reject){\r\n      toggleSharedLockReject(shared_lock_reject);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_ACCEPT', function(shared_lock_accept){\r\n      let row = shared_lock_accept.row;\r\n      let col = shared_lock_accept.col;\r\n      \r\n      display_shared_lock(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_REJECT', function(exclusive_lock_reject){\r\n      let row = exclusive_lock_reject.row;\r\n      let col = exclusive_lock_reject.col;\r\n      \r\n      toggleExclusiveLockReject(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_ACCEPT', function(exclusive_lock_accept){\r\n      let row = exclusive_lock_accept.row;\r\n      let col = exclusive_lock_accept.col;\r\n      let id = exclusive_lock_accept.id\r\n      \r\n      if (id !== socket_id) {\r\n        display_exclusive_lock(row, col);\r\n      }\r\n    });\r\n\r\n    this.socket.on('CHANGE_CURRENT_USER', function(data) {\r\n      change_current_user(data);\r\n    });\r\n\r\n    this.socket.on('ADD_NEW_USER', function(data) {\r\n      addNewUser(data);\r\n    });\r\n\r\n    this.socket.on('UPDATE_EDIT_MESSAGE', function(message_package) {\r\n      update_edit_message(message_package);\r\n    });\r\n\r\n    const update_edit_message = message_package => {\r\n      this.setState({\r\n        edit_message: message_package.new_message, \r\n        history: message_package.history\r\n      })\r\n    }\r\n\r\n    const change_id = id => {\r\n      socket_id = id;\r\n    }\r\n\r\n    const addNewUser = data => {\r\n      this.setState({\r\n        history: data.history\r\n      })\r\n      change_current_user(data.current_users);\r\n    }\r\n\r\n    const cell_read_only = () => {\r\n      console.log(\"setting to read only...\")\r\n      this.hotTableComponent.current.hotInstance.updateSettings({\r\n        cells: function(row, col, prop){\r\n         var cellProperties = {};\r\n         console.log(\"undefined is: \", data_display[row][col], \" \", row, \" \", col)\r\n           if(data_display[row][col] !== null && data_display[row][col].length !== 0 &&  (data_display[row][col] == \"-----\" || data_display[row][col].charAt(0) === \"*\")){\r\n             cellProperties.readOnly = 'true'\r\n           }\r\n         return cellProperties\r\n       }\r\n     })\r\n    }\r\n\r\n    const display_shared_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n  \r\n        let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(row, col);\r\n  \r\n        // if there is a shared lock displaying already, do nothing\r\n        if (cell_data.charAt(0) === \"*\") {\r\n          return;\r\n        } else {\r\n          let new_data = \"*\" + cell_data\r\n          this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_data);\r\n        }\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const display_exclusive_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n        console.log(row)\r\n        console.log(col)\r\n        let new_value = \"-----\";\r\n        this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_value);\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const toggleSharedLockReject = data => {\r\n      this.setState({\r\n        isSharedLockRejectOpen: !this.state.isSharedLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const toggleExclusiveLockReject = data => {\r\n      this.setState({\r\n        isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const change_current_user = data => {\r\n      this.setState({\r\n        users: data\r\n      });\r\n      let new_user_text = \"Currently Online: \";\r\n      for (var i = 0; i < this.state.users.length; i++) {\r\n        if (i == this.state.users.length - 1) {\r\n          new_user_text += this.state.users[i]\r\n        } else {\r\n          new_user_text += this.state.users[i] + \", \"\r\n        }\r\n      }\r\n      this.setState({\r\n        user_text_block: new_user_text\r\n      });\r\n    }\r\n\r\n    const addMessage = data => {\r\n\r\n        let change_table = data.data\r\n        for (var x = 0; x < change_table.length; x++) {\r\n          // Extract data\r\n          let j = change_table[x][0] - 1   // 0 --> y_coord\r\n          let value = change_table[x][1] // 1 --> actual value\r\n          let i = change_table[x][2] - 1 // 2 --> x_coord\r\n\r\n          // Update spreadsheet\r\n          if (i < data_display.length) {\r\n            data_display[i][j] = value     \r\n            this.state.data_original[i][j] = value\r\n          }\r\n\r\n          // check buffer\r\n          else if ((i + 1) < current_fetch_index) {\r\n            i++; // change i and j to 1-based index\r\n            if (buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] != value) {\r\n              buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] = value  // update both buffer and buffer_copy\r\n              buffer[i + PREFETCH_SIZE - current_fetch_index][j] = value\r\n            }\r\n          }\r\n        }\r\n        console.log(\"after socket, buffer_copy is: \", buffer_copy)\r\n        this.setState({\r\n          test_block: data.try_message\r\n        });\r\n    };\r\n\r\n    this.toggleSelectionPrompt = this.toggleSelectionPrompt.bind()\r\n    this.toggleShowHistory = this.toggleShowHistory.bind()\r\n    this.toggleNavbar = this.toggleNavbar.bind()\r\n    this.toggleExclusiveLockReject = this.toggleExclusiveLockReject.bind();\r\n    this.toggleInstructionModal = this.toggleInstructionModal.bind();\r\n    this.toggleRedirectConfirmModal = this.toggleRedirectConfirmModal.bind();\r\n    this.toggleNameModal = this.toggleNameModal.bind();\r\n    this.toggleRestartModal = this.toggleRestartModal.bind();\r\n  }\r\n\r\n  // fetch 50 rows of data into the buffer\r\n  async componentDidMount() {\r\n\r\n    recorded_time = Date.now() / 1000;\r\n\r\n    // display_dataset_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.display} >Display Dataset</Button> \r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n\r\n\r\n    // FIRST COMPONENT REF ========================================================================================\r\n    this.hotTableComponent.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // SECOND COMPONENT REF ========================================================================================\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // THIRD COMPONENT REF ========================================================================================\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  toggleRestartModal = () => {\r\n    this.setState({\r\n      isRestartModalOpen: !this.state.isRestartModalOpen\r\n    })\r\n  }\r\n\r\n  toggleNameModal = () => {\r\n    this.setState({\r\n      isNameModalOpen: !this.state.isNameModalOpen\r\n    })\r\n  }\r\n\r\n  toggleRedirectConfirmModal = () => {\r\n    this.setState({\r\n      isRedirectConfirmOpen: !this.state.isRedirectConfirmOpen\r\n    })\r\n  }\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  toggleExclusiveLockReject = () => {\r\n    this.setState({\r\n      isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleShowHistory = () => {\r\n    this.setState({\r\n      isShowHistoryOpen: !this.state.isShowHistoryOpen\r\n    })\r\n  }\r\n\r\n  toggleSelectionPrompt = () => {\r\n    this.setState({\r\n        isSelectPromptOpen: !this.state.isSelectPromptOpen\r\n    })\r\n  }\r\n\r\n  toggleInstructionModal = () => {\r\n      this.setState({\r\n          isInstructionOpen: !this.state.isInstructionOpen\r\n      })\r\n  }\r\n\r\n  display = () => {\r\n    display_dataset_button = \"\";\r\n    if (this.state.transaction_mode) {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    } else {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    }\r\n    this.setState({\r\n      data_original: this.state.data_original.concat(buffer)\r\n    })\r\n\r\n    // fill in column headers and row headers\r\n    if (data_display.length == 0) {\r\n      data_display.push(col_headers);\r\n    }\r\n    data_display = data_display.concat(buffer_copy) \r\n    console.log(\"data display is: \", data_display);\r\n  }\r\n\r\n  redirect_import = () => {\r\n    this.setState( {\r\n      redirect_import_page: true\r\n    })\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n    if (bottom) {\r\n      // this.display()\r\n    }\r\n    prev_scrolltop = e.target.scrollTop;\r\n  }\r\n\r\n  show_state = () => {\r\n    console.log(chn_copy);\r\n    console.log(change_detected);\r\n  }\r\n\r\n  sendMessage = (message) => {\r\n    this.socket.emit('SEND_MESSAGE', message);\r\n  }\r\n\r\n  check_cell_change = () => {\r\n    // create a message to socket\r\n    if (change_detected) {\r\n\r\n      // find current state\r\n      let state = \"Y\"; //  Y means in a transaction\r\n      if (!this.state.transaction_mode) {\r\n        state = \"N\";\r\n      }\r\n\r\n      // extract features of the new value\r\n      let feature = \"\";\r\n      if (isNaN(chn_copy[0][3])) {\r\n        feature = \"STR\";\r\n      } else {\r\n        feature = \"DIGIT\";\r\n      }\r\n\r\n      // record user action\r\n      user_actions.push([this.state.name, \"edit_cell\", chn_copy[0][0], chn_copy[0][1], feature, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n      \r\n      pending_changes.user = this.state.user_name\r\n  \r\n      let temp = [];\r\n      let y_coord = parseInt(chn_copy[0][0]) + 1;\r\n      let x_coord = parseInt(chn_copy[0][1]) + 1;\r\n      let actual_value = chn_copy[0][3];\r\n      temp[0] = x_coord;\r\n      temp[1] = actual_value;\r\n      temp[2] = y_coord;\r\n      pending_changes.data.push(temp);\r\n      change_detected = false;\r\n    } else {\r\n      console.log(\"no changed detected\")\r\n    }\r\n  }\r\n\r\n  cell_read_only = (input_row, input_col) => {\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      cells: function(row, col, prop){\r\n       var cellProperties = {};\r\n         if(row == input_row && col == input_col){\r\n           cellProperties.readOnly = 'true'\r\n         }\r\n       return cellProperties\r\n     }\r\n   })\r\n  }\r\n\r\n\r\n  hangleUsername = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  send_default_username = () => {\r\n    let name_package = {\r\n      user_name: \"anonymous user\"\r\n    }\r\n    this.socket.emit('SEND_USERNAME', name_package);\r\n    this.toggleUserNamePrompt()\r\n  }\r\n\r\n  onSelectionSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"call username\")\r\n      let name_package = {\r\n        user_name: this.state.user_name\r\n      }\r\n      this.socket.emit('SEND_USERNAME', name_package);\r\n      this.toggleUserNamePrompt();\r\n  }\r\n\r\n  resolve_conflict = (e) => {\r\n      e.preventDefault();\r\n      data_display[conflict_i][conflict_j] = incoming_value;\r\n      this.state.data_original[conflict_i][conflict_j] = incoming_value;\r\n\r\n      // reset conflict records\r\n      conflict_i = -1;\r\n      conflict_j = -1;\r\n      incoming_value = -1;\r\n      conflict_message = \"\";\r\n      this.toggleConflictModal();\r\n  }\r\n\r\n  start_transaction = () => {\r\n    pending_changes.data = []\r\n    this.setState({\r\n      transaction_mode: true\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    //apply_read_only_lock_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.request_shared_lock} >Apply Read-Only Lock</Button> \r\n  }\r\n\r\n  end_transaction = () => {\r\n    // setTimeout(() => {\r\n    //   this.commit_transaction();\r\n    // }, 500);\r\n    this.setState({\r\n      transaction_mode: false\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n  }\r\n\r\n  track_action = (e, action_type) => {\r\n\r\n    // find current state\r\n    let state = \"Y\"; //  Y means in a transaction\r\n    if (!this.state.transaction_mode) {\r\n      state = \"N\";\r\n    }\r\n\r\n    // calculate idle time and record idle action if necessary\r\n    let idle_duration = (Date.now() / 1000) - recorded_time;\r\n    recorded_time = (Date.now() / 1000);\r\n    if (idle_duration > 3) {\r\n\r\n      // check if we can merge two idle periods together\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] == \"idle\") {\r\n        let prev_idle_time = user_actions[user_actions.length - 1][2];\r\n        user_actions.pop();\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration) + prev_idle_time, null, null, this.state.curr_table, null, null, state]);\r\n      } else {\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration), null, null, this.state.curr_table, null, null, state]);\r\n      }\r\n    }\r\n\r\n    // check and update possible spreadsheet layout change\r\n    if (layout_changes.layout_changed) { \r\n      \r\n      // remove prev idle action\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] == \"idle\") {\r\n        user_actions.pop();\r\n      }\r\n\r\n      // add in all layout changes\r\n      for (var i = 0; i < layout_changes.changes.length; i++) {\r\n        let layout_change_type = layout_changes.changes[i][0];\r\n        let layout_change_direction = layout_changes.changes[i][1];\r\n        let change_index = layout_changes.changes[i][2];\r\n        user_actions.push([this.state.name, layout_change_type, change_index, layout_change_direction, null, this.state.curr_table, null, null, state]); \r\n      }\r\n\r\n      // clear up current layout_changes recorder\r\n      layout_changes.changes.length = 0;\r\n      layout_changes.layout_changed = false;\r\n    }\r\n\r\n    // handle scroll actions\r\n    if (action_type == \"scroll\") {\r\n\r\n      let scroll_diff = prev_scrolltop - e.target.scrollTop;\r\n      let action_length = user_actions.length;\r\n\r\n      // don't hace scroll_diff === 0 because each scroll on mouse will result in two identical function calls\r\n      if (scroll_diff > 0) {\r\n        \r\n        // check if previous is a large up scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"up_scroll_l\") {\r\n          // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small up scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"up_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n\r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"up_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        }\r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n      } else if (scroll_diff < 0) {\r\n\r\n        // check if previous is a large down scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"down_scroll_l\") {\r\n            // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"down_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n          \r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"down_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        } \r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n      }\r\n      this.handleScroll(e);\r\n    }\r\n\r\n    // calculate click action\r\n    else if (action_type == \"click\") {\r\n\r\n      if (currently_editing) {\r\n        \r\n        // select a row\r\n        if (select_j < 0) {\r\n          user_actions.push([this.state.name, \"select_r\", select_i, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n        // select a column\r\n        else if (select_i < 0) {\r\n          user_actions.push([this.state.name, \"select_c\", select_j, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n        \r\n        // select a cell\r\n        else {\r\n          user_actions.push([this.state.name, action_type, select_i, select_j, null, this.state.curr_table, select_i + 1, col_headers[select_j], state]);\r\n        }\r\n        currently_editing = false;\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n\r\n    // calculate kepress action\r\n    else if (action_type == \"key_press\") {\r\n\r\n      if (change_detected) {\r\n        // handle enter press\r\n        if (e.key == \"Enter\") {\r\n          user_actions.push([this.state.name, \"keyPress_enter\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state ]);\r\n        }\r\n\r\n        // handle tab press\r\n        else if (e.key == \"Tab\") {\r\n          user_actions.push([this.state.name, \"keyPress_tab\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n\r\n        // all other press \r\n        else {\r\n          user_actions.push([this.state.name, \"keyPress\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n    console.log(user_actions);\r\n  }\r\n\r\n  store_training_data = () => {\r\n    user_actions.push([this.state.name, \"END_TRAINING_DATA\", null, null, null, this.state.curr_table, null, null, \"END\"]);\r\n    let action_package = {\r\n      user_actions: user_actions\r\n    }\r\n    //POST req here\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({action_package})\r\n    };\r\n    fetch('/training/send-training-data/academic', requestOptions)\r\n  }\r\n\r\n  select_simulation = (e) => {\r\n    // e.preventDefault();\r\n    console.log(\"called this function with: \", e.target.name)\r\n    if (e.target.name == \"academic\") {\r\n      this.setState({\r\n        redirect_link: '/academic'\r\n      })\r\n    }\r\n    if (e.target.name == \"financing\") {\r\n      this.setState({\r\n        redirect_link: '/financing'\r\n      })\r\n    }\r\n    if (e.target.name == \"management\") {\r\n      this.setState({\r\n        redirect_link: '/management'\r\n      })\r\n    }\r\n    this.toggleRedirectConfirmModal();\r\n  }\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n    if (tab === '1') {  \r\n      this.setState({\r\n        curr_table: \"attendance\" \r\n      })\r\n      col_headers = attendance_col_headers;\r\n      \r\n    } else if (tab === '2') {\r\n      this.setState({\r\n        curr_table: \"cs225_gradebook\"\r\n      })\r\n      col_headers = grade_book_col_headers;\r\n\r\n    } else if (tab === '3') {\r\n      this.setState({\r\n        curr_table: \"student_status\"\r\n      })\r\n      col_headers = student_status_col_headers\r\n    }\r\n  }\r\n\r\n  load_tables = (e) => {\r\n    e.preventDefault();\r\n    if (table_loaded) {\r\n      this.toggleInstructionModal();\r\n    } else {\r\n      table_loaded = true;\r\n      utils.load_simulation_v2(1, \"attendance\", attendance_display, buffer_copy, attendance_col_headers);\r\n      utils.load_simulation_v2(1, \"grade_book\", greadebook_display, buffer_copy, grade_book_col_headers);\r\n      utils.load_simulation_v2(1, \"student_status\", student_status_display, buffer_copy, student_status_col_headers);\r\n      setTimeout(() => {\r\n          attendance_display = [attendance_col_headers].concat(attendance_display);\r\n          greadebook_display = [grade_book_col_headers].concat(greadebook_display);\r\n          student_status_display = [student_status_col_headers].concat(student_status_display);\r\n          // this.toggleInstructionModal();\r\n          this.setState({\r\n            isInstructionOpen: false\r\n          })\r\n      }, 500);\r\n      col_headers = attendance_col_headers;\r\n      // this.toggleNameModal();\r\n      this.setState({\r\n        isNameModalOpen: false\r\n      })\r\n    }\r\n  }\r\n\r\n  reload_tables = () => {\r\n    table_loaded = true;\r\n    utils.load_simulation_v2(1, \"attendance\", attendance_display, buffer_copy, attendance_col_headers);\r\n    utils.load_simulation_v2(1, \"grade_book\", greadebook_display, buffer_copy, grade_book_col_headers);\r\n    utils.load_simulation_v2(1, \"student_status\", student_status_display, buffer_copy, student_status_col_headers);\r\n    setTimeout(() => {\r\n        attendance_display = [attendance_col_headers].concat(attendance_display);\r\n        greadebook_display = [grade_book_col_headers].concat(greadebook_display);\r\n        student_status_display = [student_status_col_headers].concat(student_status_display);\r\n    }, 500);\r\n    col_headers = attendance_col_headers;\r\n  }\r\n\r\n  redirect = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  onNameSubmit = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  submitName = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"state name is: \", this.state.name);\r\n    this.toggleNameModal();\r\n  }\r\n\r\n  restart = () => {\r\n    // reset all display\r\n    attendance_display = [];\r\n    greadebook_display = [];\r\n    student_status_display = [];\r\n    attendance_col_headers = [];\r\n    grade_book_col_headers = [];\r\n    student_status_col_headers = [];\r\n\r\n    // reload all tables\r\n    this.reload_tables();\r\n\r\n    // clear recorded actions\r\n    user_actions = [];\r\n\r\n    // set tab\r\n    this.setState({\r\n      activeTab: '1'\r\n    })\r\n    this.toggle('1');\r\n\r\n    // toggle restart confirmation\r\n    this.toggleRestartModal();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect_link} />\r\n    }\r\n    return (\r\n\r\n      <div onClick={e => this.track_action(e, \"click\")} onKeyUp={e => this.track_action(e, \"key_press\")} className=\"App\">\r\n        <script src=\"node_modules/handsontable/dist/handsontable.full.min.js\"></script>\r\n        <link href=\"node_modules/handsontable/dist/handsontable.full.min.css\" rel=\"stylesheet\" media=\"screen\"></link>\r\n         <Jumbotron className='logo-jumbo'>\r\n          <ButtonDropdown isOpen={this.state.collapsed} toggle={this.toggleNavbar} style={{float: 'left'}} className=\"up-margin-one\">\r\n                <DropdownToggle color=\"#61dafb\"  caret style={{float: 'right'}}>\r\n                  Change Simulation\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem name=\"financing\" id=\"financing\" onClick={e => this.select_simulation(e)}>Financing Simulation</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem name=\"management\" id=\"management\" onClick={e => this.select_simulation(e)}>Management Simulation</DropdownItem>\r\n                </DropdownMenu>\r\n            </ButtonDropdown>\r\n          </Jumbotron >\r\n          <div>\r\n            <Jumbotron >\r\n                  <h1 className=\"display-3\">Hi {this.state.user_name}, welcome to Academic Simulation!</h1>\r\n                  <p className=\"lead\">This is a simple web interface that allows you to upload spreadsheets and retrieve data.</p>\r\n                  <hr className=\"my-2\" />\r\n                  <p className=\"lead\">\r\n                    {/* <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleShowHistory} >Edit History</Button> */}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {transaction_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.store_training_data} >Complete Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.restart} >Restart Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleInstructionModal} >Instruction</Button>\r\n                  </p>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isInstructionOpen} >\r\n                    {/* <ModalHeader ><header>Simulation Instruction</header>  </ModalHeader> */}\r\n                    <ModalBody>\r\n                        <h2>Welcome</h2>\r\n                        Welcome to Academic Simulation! This instruction can be accessed at any time by clicking the \"Instruction\" button on this webpage. \r\n                        Under this simulation, there are three tables: attendance table, gradebook table, and a student status table. This simulation has two parts.  \r\n                        <hr className=\"my-2\" />\r\n                        \r\n                        <p className=\"margin-one\">\r\n                        <h2>Part 1</h2>\r\n                        Part 1 simulates a seven-day period. For each day from Monday to Friday, you are to fill our the attendance table and then the student status table. \r\n                        First, you will pretend it is a Monday, and you are to fill out the attendance table for Monday on all of your \r\n                        students. After taking the Monday's attendance, you will open up the student status table, and increment the number of tardies and \r\n                        absents for each student based on Monday's attendance in the following manner: First, 3 tardies count as 1 absent. For example, a student with \r\n                        4 tardies and 1 absent will be updated to have 1 tardy and 2 absent. Second, 3 absents result in a disciplinary action, so a student with \r\n                        3 absent and 1 disciplinary action will be updated to 1 absent and 2 disciplinary action. Third, update the status based on how many \r\n                        disciplinary action the student has. If the student has 1 disciplinary action, the status will be changed to \"warning\"; for 2 \r\n                        disciplinary actions, the status will be \"final warning\"; for 3 disciplinary actions, the status will be \"drop out\". Next, you will pretend that \r\n                        the day is Tuesday, and you will need repeat the above procedures for this day. You need to complete the same procedures for each day from Monday to \r\n                        Friday. \r\n                        <h5>Note: </h5>\r\n                        Make sure to follow the procedures day-by-day! That is, fill out Monday attendance, and the update student status; then fill our Tuesday attendance, and \r\n                        then update student status; then Wednesday attendance... etc. Do not jump ahead. \r\n                        </p>\r\n                        <hr className=\"my-2\" />\r\n\r\n                        <h2>Part 2</h2>\r\n                        In part 2, you need to log each students' grade into the grade book. The grades for each assignment for each individual student is included in the email\r\n                        we sent you. If you did not get the email, please exit the simulation and contact ninghan2@illinois.edu. Note we are simulating the course progress in chronological \r\n                        order, where MP1 is due, and then MP2, then MP3, then MP4, then Lab1...etc. So, when filling out the gradebook, please make sure to fill out the table\r\n                        assignment-by-assignment. That is. fill out all students' score for a particular assignment before moving to the next assignment. After filling out all the assignment, \r\n                        please calculate each students' final grade (by hand, since we don't support formula function here). The total score for the course is 1000 points, and the students' final\r\n                        grade is in percentage. After filling out the grade book, you will go to the student status table and update it in the following manner. For each student that has a final \r\n                        grade less than 60%, update that student's status to \"warning\" if the student's current status is normal. If that student's current status is not normal, don't change anything\r\n                        for that student. \r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size='lg' className='display-button' color=\"info\" onClick={this.load_tables}>Got it!</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRedirectConfirmOpen} toggle={this.toggleRedirectConfirmModal}>\r\n                    <ModalHeader toggle={this.toggleRedirectConfirmModal}>Are you sure you want to leave this page?</ModalHeader>\r\n                    <ModalBody>\r\n                      Note that once you leave this simulation page, you will lose all the records and progress on this simulation. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.redirect}>Confirm</Button> {' '}\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRedirectConfirmModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isNameModalOpen} toggle={this.toggleNameModal}>\r\n                    <ModalHeader toggle={this.toggleNameModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.submitName}>\r\n                        <FormGroup>\r\n                          <Label for=\"user_name\">Enter Full Name</Label>\r\n                          <Input type=\"text\" name=\"name\" id=\"name\" onChange={e => this.onNameSubmit(e)} />\r\n                        </FormGroup>\r\n                        <Button size='lg' color=\"primary\" className='single_search_submit' type=\"submit\" >Confirm</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRestartModalOpen} toggle={this.toggleRestartModal}>\r\n                    <ModalHeader toggle={this.toggleRestartModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      Your simulation has been restarted. All the changes that haven't been committed yet are clearned. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRestartModal}>Got It</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                  \r\n                        \r\n            </Jumbotron>\r\n        </div>\r\n        {/* <hr /> */}\r\n\r\n        <Nav tabs>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                    onClick={() => { this.toggle('1'); }}>\r\n                    Attendance Table\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                    onClick={() => { this.toggle('2'); }}>\r\n                    Gradebook\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '3' })}\r\n                    onClick={() => { this.toggle('3'); }}>\r\n                    Student Status\r\n                </NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"1\">\r\n                <h4>\r\n                    Attendance\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={attendance_display} ref={this.hotTableComponent} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n                <h4>\r\n                    Gradebook\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={greadebook_display} ref={this.hotTableComponent1} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"3\">\r\n                <h4>\r\n                    Student Status Table\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={student_status_display} ref={this.hotTableComponent2} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n        </TabContent>\r\n          \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Academic;\r\n","import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport { HotTable } from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input, ListGroup, Card, CardTitle, CardText, TabContent, TabPane, ButtonDropdown, Dropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Spreadsheet from \"react-spreadsheet\";\r\nimport { ReactCanvasGrid } from 'react-canvas-grid';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport io from \"socket.io-client\";\r\nimport classnames from 'classnames';\r\n\r\nconst Utils = require('../utils');\r\nlet utils = new Utils();\r\n\r\nlet schedule_v1_display = [];\r\nlet schedule_v2_display = [];\r\nlet progress_display = [];\r\nlet table_loaded = false;\r\n\r\n//default order: 6\r\nconst BPlusTree = require('bplustree');\r\nlet tree = new BPlusTree()\r\n\r\nlet simulation_type = \"\";\r\n\r\n// A JSON object that keeps track of previous layout changes\r\nlet layout_changes = {\r\n  layout_changed: false,\r\n  changes: [] // 1st element: action;  2nd element: index\r\n}\r\n\r\nlet col_headers = []\r\nlet schedule_v1_col_headers = [];\r\nlet schedule_v2_col_headers = [];\r\nlet progress_col_headers = [];\r\n\r\nlet user_actions = []\r\nlet recorded_time = 0;\r\n\r\nlet SCROLL_SIZE = 5;\r\n\r\nlet data = [], dataMatrix = [], columns = [], buffer = [], buffer_copy = []\r\nlet PREFETCH_SIZE = 50\r\nlet noData = true\r\nlet ATT_NUM = 7\r\nlet prev_scrolltop = 0\r\nlet data_display = []\r\nlet chn_copy = []\r\nlet change_detected = false;\r\n\r\nlet current_fetch_index = 1 //initial pre-prefetch index\r\nlet num_attr = 0;\r\n\r\nlet current_i = -1;\r\nlet current_j = -1;\r\nlet currently_editing = false;\r\n\r\nlet conflict_i = -1;\r\nlet conflict_j = -1;\r\nlet incoming_value = \"\";\r\nlet conflict_message = \"\";\r\n\r\nlet select_i = -1; \r\nlet select_j = -1;\r\n\r\nlet transaction_button = \"\";\r\nlet apply_read_only_lock_button = \"\";\r\nlet display_dataset_button = \"\";\r\n\r\nlet pending_changes = {\r\n  data:[], // 2d array to store difference: y, value, x, \r\n  try_message: \"SENT MESSAGE! SUCCESS!\", \r\n  user: \"\"\r\n}\r\n\r\nlet socket_id = \"\";\r\n\r\nclass Management extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.id = \"hot\";\r\n    this.hotTableComponent = React.createRef();\r\n    this.hotTableComponent1 = React.createRef();\r\n    this.hotTableComponent2 = React.createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      redirect_import_page: false, \r\n      import_page_link: '/result', \r\n\r\n      data_original: [], \r\n      check_cell_update: false, \r\n\r\n      test_block: \"ORIGINAL MESSAGE\", \r\n      users:[], \r\n      user_text_block: \"\", \r\n\r\n      isSelectPromptOpen: true, \r\n      user_name: \"\", \r\n\r\n      edit_message: \"Last Edit: No modification yet\", \r\n      history: [], \r\n      isShowHistoryOpen: false, \r\n\r\n      transaction_mode: false, \r\n      isSharedLockRejectOpen: false,\r\n      isExclusiveLockRejectOpen: false, \r\n\r\n      isInstructionOpen: true,\r\n      activeTab: '1', \r\n\r\n      redirect_link: \"\", \r\n      isRedirectConfirmOpen: false, \r\n      redirect: false, \r\n\r\n      isRestartModalOpen: false\r\n    }\r\n\r\n    this.socket = io('localhost:3001');\r\n\r\n    this.socket.on('RECEIVE_MESSAGE', function(data){\r\n      addMessage(data);\r\n    });\r\n\r\n    this.socket.on('RECEIVE_ID', function(id){\r\n      change_id(id);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_REJECT', function(shared_lock_reject){\r\n      toggleSharedLockReject(shared_lock_reject);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_ACCEPT', function(shared_lock_accept){\r\n      let row = shared_lock_accept.row;\r\n      let col = shared_lock_accept.col;\r\n      \r\n      display_shared_lock(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_REJECT', function(exclusive_lock_reject){\r\n      let row = exclusive_lock_reject.row;\r\n      let col = exclusive_lock_reject.col;\r\n      \r\n      toggleExclusiveLockReject(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_ACCEPT', function(exclusive_lock_accept){\r\n      let row = exclusive_lock_accept.row;\r\n      let col = exclusive_lock_accept.col;\r\n      let id = exclusive_lock_accept.id\r\n      \r\n      if (id !== socket_id) {\r\n        display_exclusive_lock(row, col);\r\n      }\r\n    });\r\n\r\n    this.socket.on('CHANGE_CURRENT_USER', function(data) {\r\n      change_current_user(data);\r\n    });\r\n\r\n    this.socket.on('ADD_NEW_USER', function(data) {\r\n      addNewUser(data);\r\n    });\r\n\r\n    this.socket.on('UPDATE_EDIT_MESSAGE', function(message_package) {\r\n      update_edit_message(message_package);\r\n    });\r\n\r\n    const update_edit_message = message_package => {\r\n      this.setState({\r\n        edit_message: message_package.new_message, \r\n        history: message_package.history\r\n      })\r\n    }\r\n\r\n    const change_id = id => {\r\n      socket_id = id;\r\n    }\r\n\r\n    const addNewUser = data => {\r\n      this.setState({\r\n        history: data.history\r\n      })\r\n      change_current_user(data.current_users);\r\n    }\r\n\r\n    const cell_read_only = () => {\r\n      console.log(\"setting to read only...\")\r\n      this.hotTableComponent.current.hotInstance.updateSettings({\r\n        cells: function(row, col, prop){\r\n         var cellProperties = {};\r\n         console.log(\"undefined is: \", data_display[row][col], \" \", row, \" \", col)\r\n           if(data_display[row][col] !== null && data_display[row][col].length !== 0 &&  (data_display[row][col] == \"-----\" || data_display[row][col].charAt(0) === \"*\")){\r\n             cellProperties.readOnly = 'true'\r\n           }\r\n         return cellProperties\r\n       }\r\n     })\r\n    }\r\n\r\n    const display_shared_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n  \r\n        let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(row, col);\r\n  \r\n        // if there is a shared lock displaying already, do nothing\r\n        if (cell_data.charAt(0) === \"*\") {\r\n          return;\r\n        } else {\r\n          let new_data = \"*\" + cell_data\r\n          this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_data);\r\n        }\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const display_exclusive_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n        console.log(row)\r\n        console.log(col)\r\n        let new_value = \"-----\";\r\n        this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_value);\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const toggleSharedLockReject = data => {\r\n      this.setState({\r\n        isSharedLockRejectOpen: !this.state.isSharedLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const toggleExclusiveLockReject = data => {\r\n      this.setState({\r\n        isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const change_current_user = data => {\r\n      this.setState({\r\n        users: data\r\n      });\r\n      let new_user_text = \"Currently Online: \";\r\n      for (var i = 0; i < this.state.users.length; i++) {\r\n        if (i == this.state.users.length - 1) {\r\n          new_user_text += this.state.users[i]\r\n        } else {\r\n          new_user_text += this.state.users[i] + \", \"\r\n        }\r\n      }\r\n      this.setState({\r\n        user_text_block: new_user_text\r\n      });\r\n    }\r\n\r\n    const addMessage = data => {\r\n\r\n        let change_table = data.data\r\n        for (var x = 0; x < change_table.length; x++) {\r\n          // Extract data\r\n          let j = change_table[x][0] - 1   // 0 --> y_coord\r\n          let value = change_table[x][1] // 1 --> actual value\r\n          let i = change_table[x][2] - 1 // 2 --> x_coord\r\n\r\n          // Update spreadsheet\r\n          if (i < data_display.length) {\r\n            data_display[i][j] = value     \r\n            this.state.data_original[i][j] = value\r\n          }\r\n\r\n          // check buffer\r\n          else if ((i + 1) < current_fetch_index) {\r\n            i++; // change i and j to 1-based index\r\n            if (buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] != value) {\r\n              buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] = value  // update both buffer and buffer_copy\r\n              buffer[i + PREFETCH_SIZE - current_fetch_index][j] = value\r\n            }\r\n          }\r\n        }\r\n        console.log(\"after socket, buffer_copy is: \", buffer_copy)\r\n        this.setState({\r\n          test_block: data.try_message\r\n        });\r\n    };\r\n\r\n    this.toggleSelectionPrompt = this.toggleSelectionPrompt.bind()\r\n    this.toggleShowHistory = this.toggleShowHistory.bind()\r\n    this.toggleNavbar = this.toggleNavbar.bind()\r\n    this.toggleExclusiveLockReject = this.toggleExclusiveLockReject.bind();\r\n    this.toggleInstructionModal = this.toggleInstructionModal.bind();\r\n    this.toggleRedirectConfirmModal = this.toggleRedirectConfirmModal.bind();\r\n    this.toggleNameModal = this.toggleNameModal.bind();\r\n    this.toggleRestartModal = this.toggleRestartModal.bind();\r\n  }\r\n\r\n  // fetch 50 rows of data into the buffer\r\n  async componentDidMount() {\r\n    recorded_time = Date.now() / 1000;\r\n\r\n    // display_dataset_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.display} >Display Dataset</Button> \r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n\r\n    // FIRST REF =====================================================================================\r\n    this.hotTableComponent.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // SECOND REF =====================================================================================\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // THIRD REF =====================================================================================\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n  }\r\n\r\n  request_shared_lock = () => {\r\n    // send request for a shared lock to backend\r\n    let shared_lock_request = {\r\n      row: select_i,\r\n      col: select_j\r\n    }\r\n    this.socket.emit('REQUEST_SHARED_LOCK', shared_lock_request);\r\n  }\r\n\r\n  request_exclusive_lock = (i, j) => {\r\n    // send request for a exclusive lock to backend\r\n    let exclusive_lock_request = {\r\n      row: i,\r\n      col: j\r\n    }\r\n    this.socket.emit('REQUEST_EXCLUSIVE_LOCK', exclusive_lock_request);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  toggleRestartModal = () => {\r\n    this.setState({\r\n      isRestartModalOpen: !this.state.isRestartModalOpen\r\n    })\r\n  }\r\n\r\n  toggleNameModal = () => {\r\n    this.setState({\r\n      isNameModalOpen: !this.state.isNameModalOpen\r\n    })\r\n  }\r\n\r\n  toggleRedirectConfirmModal = () => {\r\n    this.setState({\r\n      isRedirectConfirmOpen: !this.state.isRedirectConfirmOpen\r\n    })\r\n  }\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  toggleExclusiveLockReject = () => {\r\n    this.setState({\r\n      isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleShowHistory = () => {\r\n    this.setState({\r\n      isShowHistoryOpen: !this.state.isShowHistoryOpen\r\n    })\r\n  }\r\n\r\n  toggleSelectionPrompt = () => {\r\n    this.setState({\r\n        isSelectPromptOpen: !this.state.isSelectPromptOpen\r\n    })\r\n  }\r\n\r\n  toggleInstructionModal = () => {\r\n      this.setState({\r\n          isInstructionOpen: !this.state.isInstructionOpen\r\n      })\r\n  }\r\n\r\n  display = () => {\r\n    display_dataset_button = \"\";\r\n    if (this.state.transaction_mode) {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    } else {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    }\r\n    this.setState({\r\n      data_original: this.state.data_original.concat(buffer)\r\n    })\r\n\r\n    // fill in column headers and row headers\r\n    if (data_display.length == 0) {\r\n      data_display.push(col_headers);\r\n    }\r\n    data_display = data_display.concat(buffer_copy) \r\n    console.log(\"data display is: \", data_display);\r\n  }\r\n\r\n  redirect_import = () => {\r\n    this.setState( {\r\n      redirect_import_page: true\r\n    })\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n    if (bottom) {\r\n      // this.display()\r\n    }\r\n    prev_scrolltop = e.target.scrollTop;\r\n  }\r\n\r\n  show_state = () => {\r\n    console.log(chn_copy);\r\n    console.log(change_detected);\r\n  }\r\n\r\n  sendMessage = (message) => {\r\n    this.socket.emit('SEND_MESSAGE', message);\r\n  }\r\n\r\n  check_cell_change = () => {\r\n    // create a message to socket\r\n    if (change_detected) {\r\n\r\n      // find current state\r\n      let state = \"Y\"; //  Y means in a transaction\r\n      if (!this.state.transaction_mode) {\r\n        state = \"N\";\r\n      }\r\n\r\n      // extract features of the new value\r\n      let feature = \"\";\r\n      if (isNaN(chn_copy[0][3])) {\r\n        feature = \"STR\";\r\n      } else {\r\n        feature = \"DIGIT\";\r\n      }\r\n\r\n      // record user action\r\n      user_actions.push([this.state.name, \"edit_cell\", chn_copy[0][0], chn_copy[0][1], feature, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n      \r\n      pending_changes.user = this.state.user_name\r\n  \r\n      let temp = [];\r\n      let y_coord = parseInt(chn_copy[0][0]) + 1;\r\n      let x_coord = parseInt(chn_copy[0][1]) + 1;\r\n      let actual_value = chn_copy[0][3];\r\n      temp[0] = x_coord;\r\n      temp[1] = actual_value;\r\n      temp[2] = y_coord;\r\n      pending_changes.data.push(temp);\r\n      change_detected = false;\r\n    } else {\r\n      console.log(\"no changed detected\")\r\n    }\r\n  }\r\n\r\n  cell_read_only = (input_row, input_col) => {\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      cells: function(row, col, prop){\r\n       var cellProperties = {};\r\n         if(row == input_row && col == input_col){\r\n           cellProperties.readOnly = 'true'\r\n         }\r\n       return cellProperties\r\n     }\r\n   })\r\n  }\r\n\r\n\r\n  hangleUsername = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  send_default_username = () => {\r\n    let name_package = {\r\n      user_name: \"anonymous user\"\r\n    }\r\n    this.socket.emit('SEND_USERNAME', name_package);\r\n    this.toggleUserNamePrompt()\r\n  }\r\n\r\n  onSelectionSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"call username\")\r\n      let name_package = {\r\n        user_name: this.state.user_name\r\n      }\r\n      this.socket.emit('SEND_USERNAME', name_package);\r\n      this.toggleUserNamePrompt();\r\n  }\r\n\r\n  resolve_conflict = (e) => {\r\n      e.preventDefault();\r\n      data_display[conflict_i][conflict_j] = incoming_value;\r\n      this.state.data_original[conflict_i][conflict_j] = incoming_value;\r\n\r\n      // reset conflict records\r\n      conflict_i = -1;\r\n      conflict_j = -1;\r\n      incoming_value = -1;\r\n      conflict_message = \"\";\r\n      this.toggleConflictModal();\r\n  }\r\n\r\n  start_transaction = () => {\r\n    pending_changes.data = []\r\n    this.setState({\r\n      transaction_mode: true\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n  }\r\n\r\n  end_transaction = () => {\r\n    this.setState({\r\n      transaction_mode: false\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n  }\r\n\r\n  track_action = (e, action_type) => {\r\n\r\n    // find current state\r\n    let state = \"Y\"; //  Y means in a transaction\r\n    if (!this.state.transaction_mode) {\r\n      state = \"N\";\r\n    }\r\n\r\n    // calculate idle time and record idle action if necessary\r\n    let idle_duration = (Date.now() / 1000) - recorded_time;\r\n    recorded_time = (Date.now() / 1000);\r\n    if (idle_duration > 3) {\r\n\r\n      // check if we can merge two idle periods together\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] == \"idle\") {\r\n        let prev_idle_time = user_actions[user_actions.length - 1][2];\r\n        user_actions.pop();\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration) + prev_idle_time, null, null, this.state.curr_table, null, null, state]);\r\n      } else {\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration), null, null, this.state.curr_table, null, null, state]);\r\n      }\r\n    }\r\n\r\n    // check and update possible spreadsheet layout change\r\n    if (layout_changes.layout_changed) { \r\n      \r\n      // remove prev idle action\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] == \"idle\") {\r\n        user_actions.pop();\r\n      }\r\n\r\n      // add in all layout changes\r\n      for (var i = 0; i < layout_changes.changes.length; i++) {\r\n        let layout_change_type = layout_changes.changes[i][0];\r\n        let layout_change_direction = layout_changes.changes[i][1];\r\n        let change_index = layout_changes.changes[i][2];\r\n        user_actions.push([this.state.name, layout_change_type, change_index, layout_change_direction, null, this.state.curr_table, null, null, state]); \r\n      }\r\n\r\n      // clear up current layout_changes recorder\r\n      layout_changes.changes.length = 0;\r\n      layout_changes.layout_changed = false;\r\n    }\r\n\r\n    // handle scroll actions\r\n    if (action_type == \"scroll\") {\r\n\r\n      let scroll_diff = prev_scrolltop - e.target.scrollTop;\r\n      let action_length = user_actions.length;\r\n\r\n      // don't hace scroll_diff === 0 because each scroll on mouse will result in two identical function calls\r\n      if (scroll_diff > 0) {\r\n        \r\n        // check if previous is a large up scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"up_scroll_l\") {\r\n          // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small up scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"up_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n\r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"up_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        }\r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n      } else if (scroll_diff < 0) {\r\n\r\n        // check if previous is a large down scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"down_scroll_l\") {\r\n            // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"down_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n          \r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"down_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        } \r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n      }\r\n      this.handleScroll(e);\r\n    }\r\n\r\n    // calculate click action\r\n    else if (action_type == \"click\") {\r\n\r\n      if (currently_editing) {\r\n        \r\n        // select a row\r\n        if (select_j < 0) {\r\n          user_actions.push([this.state.name, \"select_r\", select_i, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n        // select a column\r\n        else if (select_i < 0) {\r\n          user_actions.push([this.state.name, \"select_c\", select_j, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n        \r\n        // select a cell\r\n        else {\r\n          user_actions.push([this.state.name, action_type, select_i, select_j, null, this.state.curr_table, select_i + 1, col_headers[select_j], state]);\r\n        }\r\n        currently_editing = false;\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n\r\n    // calculate kepress action\r\n    else if (action_type == \"key_press\") {\r\n\r\n      if (change_detected) {\r\n        // handle enter press\r\n        if (e.key == \"Enter\") {\r\n          user_actions.push([this.state.name, \"keyPress_enter\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state ]);\r\n        }\r\n\r\n        // handle tab press\r\n        else if (e.key == \"Tab\") {\r\n          user_actions.push([this.state.name, \"keyPress_tab\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n\r\n        // all other press \r\n        else {\r\n          user_actions.push([this.state.name, \"keyPress\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n    console.log(user_actions);\r\n  }\r\n\r\n  store_training_data = () => {\r\n    user_actions.push([this.state.name, \"END_TRAINING_DATA\", null, null, null, this.state.curr_table, null, null, \"END\"]);\r\n    let action_package = {\r\n      user_actions: user_actions\r\n    }\r\n    //POST req here\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({action_package})\r\n    };\r\n    fetch('/training/send-training-data/management', requestOptions)\r\n  }\r\n\r\n  select_simulation = (e) => {\r\n    // e.preventDefault();\r\n\r\n    if (e.target.name == \"academic\") {\r\n      this.setState({\r\n        redirect_link: '/academic'\r\n      })\r\n    }\r\n    if (e.target.name == \"financing\") {\r\n      this.setState({\r\n        redirect_link: '/financing'\r\n      })\r\n    }\r\n    if (e.target.name == \"management\") {\r\n      this.setState({\r\n        redirect_link: '/management'\r\n      })\r\n    }\r\n    this.toggleRedirectConfirmModal();\r\n  }\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n    if (tab === \"1\") {  \r\n      this.setState({\r\n        curr_table: \"schedule_v1\"\r\n      })\r\n      col_headers = schedule_v1_col_headers;\r\n\r\n    } else if (tab === \"2\") {\r\n      this.setState({\r\n        curr_table: \"schedule_v2\"\r\n      })\r\n      col_headers = schedule_v2_col_headers;\r\n\r\n    } else if (tab === \"3\") {\r\n      this.setState({\r\n        curr_table: \"progress_log\"\r\n      })\r\n      col_headers = progress_col_headers;\r\n    }\r\n  }\r\n\r\n  load_tables = (e) => {\r\n    e.preventDefault();\r\n    if (table_loaded) {\r\n      this.toggleInstructionModal();\r\n    } else {\r\n      table_loaded = true;\r\n      utils.load_simulation_v2(1, \"employee_schedule_v1\", schedule_v1_display, buffer_copy, schedule_v1_col_headers);\r\n      utils.load_simulation_v2(1, \"employee_schedule_v2\", schedule_v2_display, buffer_copy, schedule_v2_col_headers);\r\n      utils.load_simulation_v2(1, \"progress_log\", progress_display, buffer_copy, progress_col_headers);\r\n      setTimeout(() => {\r\n          schedule_v1_display = [schedule_v1_col_headers].concat(schedule_v1_display);\r\n          schedule_v2_display = [schedule_v2_col_headers].concat(schedule_v2_display);\r\n          progress_display = [progress_col_headers].concat(progress_display);\r\n          this.toggleInstructionModal();\r\n      }, 500);\r\n      col_headers = schedule_v1_col_headers;\r\n      this.toggleNameModal();\r\n    }\r\n  }\r\n\r\n  reload_tables = () => {\r\n    utils.load_simulation_v2(1, \"employee_schedule_v1\", schedule_v1_display, buffer_copy, schedule_v1_col_headers);\r\n    utils.load_simulation_v2(1, \"employee_schedule_v2\", schedule_v2_display, buffer_copy, schedule_v2_col_headers);\r\n    utils.load_simulation_v2(1, \"progress_log\", progress_display, buffer_copy, progress_col_headers);\r\n    setTimeout(() => {\r\n        schedule_v1_display = [schedule_v1_col_headers].concat(schedule_v1_display);\r\n        schedule_v2_display = [schedule_v2_col_headers].concat(schedule_v2_display);\r\n        progress_display = [progress_col_headers].concat(progress_display);\r\n    }, 500);\r\n    col_headers = schedule_v1_col_headers;\r\n  }\r\n\r\n  redirect = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  onNameSubmit = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  submitName = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"state name is: \", this.state.name);\r\n    this.toggleNameModal();\r\n  }\r\n\r\n  restart = () => {\r\n    // reset all display\r\n    schedule_v1_display = [];\r\n    schedule_v2_display = [];\r\n    progress_display = [];\r\n    schedule_v1_col_headers = [];\r\n    schedule_v2_col_headers = [];\r\n    progress_col_headers = [];\r\n\r\n    // reload all tables\r\n    this.reload_tables();\r\n\r\n    // clear recorded actions\r\n    user_actions = [];\r\n\r\n    // set tab\r\n    this.setState({\r\n      activeTab: '1'\r\n    })\r\n    this.toggle('1');\r\n\r\n    // toggle restart confirmation\r\n    this.toggleRestartModal();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect_link} />\r\n    }\r\n    return (\r\n      <div onClick={e => this.track_action(e, \"click\")} onKeyUp={e => this.track_action(e, \"key_press\")} className=\"App\">\r\n        <script src=\"node_modules/handsontable/dist/handsontable.full.min.js\"></script>\r\n        <link href=\"node_modules/handsontable/dist/handsontable.full.min.css\" rel=\"stylesheet\" media=\"screen\"></link>\r\n         <Jumbotron className='logo-jumbo'>\r\n         <ButtonDropdown isOpen={this.state.collapsed} toggle={this.toggleNavbar} style={{float: 'left'}} className=\"up-margin-one\">\r\n              <DropdownToggle color=\"#61dafb\"  caret style={{float: 'right'}}>\r\n                Change Simulation\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem name=\"academic\" id=\"academic\" onClick={e => this.select_simulation(e)}>Academic Simulation</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem name=\"financing\" id=\"financing\" onClick={e => this.select_simulation(e)}>Financing Simulation</DropdownItem>\r\n              </DropdownMenu>\r\n          </ButtonDropdown>\r\n          </Jumbotron >\r\n          <div>\r\n            <Jumbotron >\r\n                \r\n                  <h1 className=\"display-3\">Hi {this.state.user_name}, welcome to Management Simulation!</h1>\r\n                  <p className=\"lead\">This is a simple web interface that allows you to upload spreadsheets and retrieve data.</p>\r\n                  <hr className=\"my-2\" />\r\n                  <p className=\"lead\">\r\n                    {/* <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleShowHistory} >Edit History</Button> */}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {transaction_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.store_training_data} >Complete Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.restart} >Restart Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleInstructionModal} >Instruction</Button>\r\n                  </p>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isInstructionOpen} >\r\n                    {/* <ModalHeader ><header>Simulation Instruction</header>  </ModalHeader> */}\r\n                    <ModalBody>\r\n                        <h2>Welcome</h2>\r\n                        Welcome to Management Simulation! This instruction can be accessed at any time by clicking the \"Instruction\" button on this webpage. \r\n                        Under this simulation, there are three tables: an employee schedule table, an enployee shifts table, and a task list. This simulation has \r\n                        three parts.  \r\n                        <hr className=\"my-2\" />\r\n                        \r\n                        <p className=\"margin-one\">\r\n                        <h2>Part 1</h2>\r\n                        For Part 1 of this simulation, you are to fill out the employee schedule table. Based on the \"weekly employee working schedule\" we emailed you (if \r\n                        you did not receive our email, please contact ninghan2@illinois.edu), fill out the weekly schedule table for each employee. \r\n                        <h5>Note: </h5>\r\n                        Make sure to fill out the employee schedule table employee-by-employee (i.e. row-by-row). It is not necessary to order the employees the same \r\n                        way as they are ordered in our emailed schedule, but please follow a row-by-row manner when filling out this table. \r\n                        </p>\r\n                        <hr className=\"my-2\" />\r\n\r\n                        <p className=\"margin-one\">\r\n                        <h2>Part 2</h2>\r\n                        In part 2, you are to fill out the employee shift table based the \"daily employee shifts\" we emailed you (again, if you did not received the \r\n                        email, please contact ninghan2@illinois.edu). \r\n                        <h5>Note: </h5>\r\n                        Make sure to fill out the employee shifts table day-by-day. That is, you need to fill out all the shifts on Monday before starting to fill out \r\n                        the shifts on Tuesday. \r\n                        </p>\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size='lg' className='display-button' color=\"info\" onClick={this.load_tables}>Got it!</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRedirectConfirmOpen} toggle={this.toggleRedirectConfirmModal}>\r\n                    <ModalHeader toggle={this.toggleRedirectConfirmModal}>Are you sure you want to leave this page?</ModalHeader>\r\n                    <ModalBody>\r\n                      Note that once you leave this simulation page, you will lose all the records and progress on this simulation. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.redirect}>Confirm</Button> {' '}\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRedirectConfirmModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isNameModalOpen} toggle={this.toggleNameModal}>\r\n                    <ModalHeader toggle={this.toggleNameModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.submitName}>\r\n                        <FormGroup>\r\n                          <Label for=\"user_name\">Enter Full Name</Label>\r\n                          <Input type=\"text\" name=\"name\" id=\"name\" onChange={e => this.onNameSubmit(e)} />\r\n                        </FormGroup>\r\n                        <Button size='lg' color=\"primary\" className='single_search_submit' type=\"submit\" >Confirm</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRestartModalOpen} toggle={this.toggleRestartModal}>\r\n                    <ModalHeader toggle={this.toggleRestartModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      Your simulation has been restarted. All the changes that haven't been committed yet are clearned. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRestartModal}>Got It</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                        \r\n            </Jumbotron>\r\n        </div>\r\n        {/* <hr /> */}\r\n\r\n        <Nav tabs>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                    onClick={() => { this.toggle('1'); }}>\r\n                    Employee Schedule\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                    onClick={() => { this.toggle('2'); }}>\r\n                    Employee Shifts\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '3' })}\r\n                    onClick={() => { this.toggle('3'); }}>\r\n                    Task List\r\n                </NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"1\">\r\n                <h4>\r\n                    Employee Weekly Schedule\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={schedule_v1_display} ref={this.hotTableComponent} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n                <h4>\r\n                    Employee Shifts Schedule\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={schedule_v2_display} ref={this.hotTableComponent1} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"3\">\r\n                <h4>\r\n                    Projects Progress Table\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={progress_display} ref={this.hotTableComponent2} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n        </TabContent>\r\n          \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Management;\r\n","import React, { Component, useState } from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport { HotTable } from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport 'handsontable/dist/handsontable.full.css';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Table, Modal, ModalHeader, ModalFooter, ModalBody, Form, FormGroup, Label, Input, ListGroup, Card, CardTitle, CardText, TabContent, TabPane, ButtonDropdown, Dropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Spreadsheet from \"react-spreadsheet\";\r\nimport { ReactCanvasGrid } from 'react-canvas-grid';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport io from \"socket.io-client\";\r\nimport classnames from 'classnames';\r\n\r\nconst Utils = require('../utils');\r\nlet utils = new Utils();\r\n\r\nlet monthly_expense_display = [];\r\nlet monthly_income_display = [];\r\nlet check_book_display = [];\r\nlet table_loaded = false;\r\n\r\n//default order: 6\r\nconst BPlusTree = require('bplustree');\r\nlet tree = new BPlusTree()\r\n\r\nlet simulation_type = \"\";\r\n\r\n// A JSON object that keeps track of previous layout changes\r\nlet layout_changes = {\r\n  layout_changed: false,\r\n  changes: [] // 1st element: action;  2nd element: index\r\n}\r\n\r\nlet col_headers = []\r\nlet monthly_expense_col_headers = [];\r\nlet monthly_income_col_headers = [];\r\nlet check_book_col_headers = [];\r\n\r\nlet user_actions = []\r\nlet recorded_time = 0;\r\n\r\nlet SCROLL_SIZE = 5;\r\n\r\nlet data = [], dataMatrix = [], columns = [], buffer = [], buffer_copy = []\r\nlet PREFETCH_SIZE = 50\r\nlet noData = true\r\nlet ATT_NUM = 7\r\nlet prev_scrolltop = 0\r\nlet data_display = []\r\nlet chn_copy = []\r\nlet change_detected = false;\r\n\r\nlet current_fetch_index = 1 //initial pre-prefetch index\r\nlet num_attr = 0;\r\n\r\nlet current_i = -1;\r\nlet current_j = -1;\r\nlet currently_editing = false;\r\n\r\nlet conflict_i = -1;\r\nlet conflict_j = -1;\r\nlet incoming_value = \"\";\r\nlet conflict_message = \"\";\r\n\r\nlet select_i = -1; \r\nlet select_j = -1;\r\n\r\nlet transaction_button = \"\";\r\nlet apply_read_only_lock_button = \"\";\r\nlet display_dataset_button = \"\";\r\n\r\nlet pending_changes = {\r\n  data:[], // 2d array to store difference: y, value, x, \r\n  try_message: \"SENT MESSAGE! SUCCESS!\", \r\n  user: \"\"\r\n}\r\n\r\nlet socket_id = \"\";\r\n\r\nclass Financing extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.id = \"hot\";\r\n    this.hotTableComponent = React.createRef();\r\n    this.hotTableComponent1 = React.createRef();\r\n    this.hotTableComponent2 = React.createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      items: Array.from({ length: 0 }),\r\n      hasMore: false,\r\n      load_from_buffer_to_matrix: false, \r\n\r\n      //retrieval display variables\r\n      hasMoreResult: false,\r\n      resultItems: Array.from({ length: 0 }), \r\n      load_result_from_buffer_to_matrix: false, \r\n\r\n      redirect_import_page: false, \r\n      import_page_link: '/result', \r\n\r\n      data_original: [], \r\n      check_cell_update: false, \r\n\r\n      test_block: \"ORIGINAL MESSAGE\", \r\n      users:[], \r\n      user_text_block: \"\", \r\n\r\n      isSelectPromptOpen: true, \r\n      user_name: \"\", \r\n\r\n      edit_message: \"Last Edit: No modification yet\", \r\n      history: [], \r\n      isShowHistoryOpen: false, \r\n\r\n      transaction_mode: false, \r\n      isSharedLockRejectOpen: false,\r\n      isExclusiveLockRejectOpen: false, \r\n\r\n      isInstructionOpen: true,\r\n      activeTab: '1', \r\n\r\n      redirect_link: \"\", \r\n      isRedirectConfirmOpen: false, \r\n      redirect: false, \r\n\r\n      isRestartModalOpen: false\r\n    }\r\n\r\n    this.socket = io('localhost:3001');\r\n\r\n    this.socket.on('RECEIVE_MESSAGE', function(data){\r\n      addMessage(data);\r\n    });\r\n\r\n    this.socket.on('RECEIVE_ID', function(id){\r\n      change_id(id);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_REJECT', function(shared_lock_reject){\r\n      toggleSharedLockReject(shared_lock_reject);\r\n    });\r\n\r\n    this.socket.on('REQUEST_SHARED_ACCEPT', function(shared_lock_accept){\r\n      let row = shared_lock_accept.row;\r\n      let col = shared_lock_accept.col;\r\n      \r\n      display_shared_lock(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_REJECT', function(exclusive_lock_reject){\r\n      let row = exclusive_lock_reject.row;\r\n      let col = exclusive_lock_reject.col;\r\n      \r\n      toggleExclusiveLockReject(row, col);\r\n    });\r\n\r\n    this.socket.on('REQUEST_EXCLUSIVE_ACCEPT', function(exclusive_lock_accept){\r\n      let row = exclusive_lock_accept.row;\r\n      let col = exclusive_lock_accept.col;\r\n      let id = exclusive_lock_accept.id\r\n      \r\n      if (id !== socket_id) {\r\n        display_exclusive_lock(row, col);\r\n      }\r\n    });\r\n\r\n    this.socket.on('CHANGE_CURRENT_USER', function(data) {\r\n      change_current_user(data);\r\n    });\r\n\r\n    this.socket.on('ADD_NEW_USER', function(data) {\r\n      addNewUser(data);\r\n    });\r\n\r\n    // this.socket.on('RECEIVE_FREED_CELLS', function(free_cells_package) {\r\n    //   update_freed_cells(free_cells_package);\r\n    // });\r\n\r\n    this.socket.on('UPDATE_EDIT_MESSAGE', function(message_package) {\r\n      update_edit_message(message_package);\r\n    });\r\n\r\n    const update_edit_message = message_package => {\r\n      this.setState({\r\n        edit_message: message_package.new_message, \r\n        history: message_package.history\r\n      })\r\n    }\r\n\r\n    const update_freed_cells = free_cells_package => {\r\n\r\n      let free_cells = free_cells_package.free_cells;\r\n      let disconnect = free_cells_package.disconnect;\r\n\r\n      console.log(\"the free cells are \", free_cells);\r\n\r\n      for (var i = 0; i < free_cells.length; i++) {\r\n        let location = free_cells[i];\r\n        if (location[0] < data_display.length) {\r\n          \r\n          let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(location[0], location[1]);\r\n\r\n          // update read-only cells\r\n          if (cell_data[0] == \"*\") {\r\n            let new_data = cell_data.substring(1);\r\n            this.hotTableComponent.current.hotInstance.setDataAtCell(location[0], location[1], new_data);\r\n          }\r\n\r\n          if (cell_data == \"-----\" && disconnect == true) {\r\n            data_display[location[0], location[1]] = this.state.data_original[location[0], location[1]];\r\n          }\r\n        }\r\n      }\r\n      cell_read_only();\r\n    }\r\n\r\n    const change_id = id => {\r\n      socket_id = id;\r\n    }\r\n\r\n    const addNewUser = data => {\r\n      this.setState({\r\n        history: data.history\r\n      })\r\n      change_current_user(data.current_users);\r\n    }\r\n\r\n    const cell_read_only = () => {\r\n      console.log(\"setting to read only...\")\r\n      this.hotTableComponent.current.hotInstance.updateSettings({\r\n        cells: function(row, col, prop){\r\n         var cellProperties = {};\r\n         console.log(\"undefined is: \", data_display[row][col], \" \", row, \" \", col)\r\n           if(data_display[row][col] !== null && data_display[row][col].length !== 0 &&  (data_display[row][col] == \"-----\" || data_display[row][col].charAt(0) === \"*\")){\r\n             cellProperties.readOnly = 'true'\r\n           }\r\n         return cellProperties\r\n       }\r\n     })\r\n    }\r\n\r\n    const display_shared_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n  \r\n        let cell_data = this.hotTableComponent.current.hotInstance.getDataAtCell(row, col);\r\n  \r\n        // if there is a shared lock displaying already, do nothing\r\n        if (cell_data.charAt(0) === \"*\") {\r\n          return;\r\n        } else {\r\n          let new_data = \"*\" + cell_data\r\n          this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_data);\r\n        }\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const display_exclusive_lock = (row, col) => {\r\n      if (row < data_display.length) {\r\n        console.log(row)\r\n        console.log(col)\r\n        let new_value = \"-----\";\r\n        this.hotTableComponent.current.hotInstance.setDataAtCell(row, col, new_value);\r\n        cell_read_only();\r\n      }\r\n    }\r\n\r\n    const toggleSharedLockReject = data => {\r\n      this.setState({\r\n        isSharedLockRejectOpen: !this.state.isSharedLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const toggleExclusiveLockReject = data => {\r\n      this.setState({\r\n        isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n      })\r\n    }\r\n\r\n    const change_current_user = data => {\r\n      this.setState({\r\n        users: data\r\n      });\r\n      let new_user_text = \"Currently Online: \";\r\n      for (var i = 0; i < this.state.users.length; i++) {\r\n        if (i == this.state.users.length - 1) {\r\n          new_user_text += this.state.users[i]\r\n        } else {\r\n          new_user_text += this.state.users[i] + \", \"\r\n        }\r\n      }\r\n      this.setState({\r\n        user_text_block: new_user_text\r\n      });\r\n    }\r\n\r\n    const addMessage = data => {\r\n\r\n        let change_table = data.data\r\n        for (var x = 0; x < change_table.length; x++) {\r\n          // Extract data\r\n          let j = change_table[x][0] - 1   // 0 --> y_coord\r\n          let value = change_table[x][1] // 1 --> actual value\r\n          let i = change_table[x][2] - 1 // 2 --> x_coord\r\n\r\n          // Update spreadsheet\r\n          if (i < data_display.length) {\r\n            data_display[i][j] = value     \r\n            this.state.data_original[i][j] = value\r\n          }\r\n\r\n          // check buffer\r\n          else if ((i + 1) < current_fetch_index) {\r\n            i++; // change i and j to 1-based index\r\n            if (buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] != value) {\r\n              buffer_copy[i + PREFETCH_SIZE - current_fetch_index][j] = value  // update both buffer and buffer_copy\r\n              buffer[i + PREFETCH_SIZE - current_fetch_index][j] = value\r\n            }\r\n          }\r\n        }\r\n        console.log(\"after socket, buffer_copy is: \", buffer_copy)\r\n        this.setState({\r\n          test_block: data.try_message\r\n        });\r\n    };\r\n\r\n    this.toggleSelectionPrompt = this.toggleSelectionPrompt.bind()\r\n    this.toggleShowHistory = this.toggleShowHistory.bind()\r\n    this.toggleNavbar = this.toggleNavbar.bind()\r\n    this.toggleExclusiveLockReject = this.toggleExclusiveLockReject.bind();\r\n    this.toggleInstructionModal = this.toggleInstructionModal.bind();\r\n    this.toggleRedirectConfirmModal = this.toggleRedirectConfirmModal.bind();\r\n    this.toggleNameModal = this.toggleNameModal.bind();\r\n    this.toggleRestartModal = this.toggleRestartModal.bind();\r\n  }\r\n\r\n  // fetch 50 rows of data into the buffer\r\n  async componentDidMount() {\r\n    recorded_time = Date.now() / 1000;\r\n\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n\r\n    // FIRST REF ====================================================================================================\r\n    this.hotTableComponent.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // SECOND REF ====================================================================================================\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent1.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n\r\n    // THIRD REF ====================================================================================================\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterChange', function(chn, src) {\r\n      if (src === 'edit') {\r\n        console.log(chn);\r\n        \r\n        // call check_cell_change if original and new data differ\r\n        if (chn[0][2] !== chn[0][3] && chn[0][3].charAt(0) !== \"*\" && chn[0][3] !== \"-----\") {\r\n          console.log(\"differ!\");\r\n          chn_copy = chn;\r\n          change_detected = true;\r\n\r\n          // remove currently editing state\r\n          current_i = -1;\r\n          current_j = -1;\r\n          currently_editing = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterBeginEditing', function(row, col) {\r\n\r\n      // record the currently editing location and state. \r\n      current_i = row;\r\n      current_j = col;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterSelection', function(row, column, row2, column2, preventScrolling, selectionLayerLevel) {\r\n\r\n      // record the currently editing location and state. \r\n      select_i = row;\r\n      select_j = column;\r\n      currently_editing = true;\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateRow', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.rowBelow\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"below\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_r\", \"above\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterCreateCol', function(index, amount, source) {\r\n      console.log(\"insert index is: \", index);\r\n      if (source == \"ContextMenu.columnRight\") {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"right\", index]);\r\n      } else {\r\n        layout_changes.layout_changed = true;\r\n        layout_changes.changes.push([\"insert_c\", \"left\", index]);\r\n      }\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveRow', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_r\", null, index]);\r\n    });\r\n\r\n    this.hotTableComponent2.current.hotInstance.addHook('afterRemoveCol', function(index, amount, physicalRows, source) {\r\n      layout_changes.layout_changed = true;\r\n      layout_changes.changes.push([\"remove_c\", null, index]);\r\n    });\r\n  }\r\n\r\n  request_shared_lock = () => {\r\n    // send request for a shared lock to backend\r\n    let shared_lock_request = {\r\n      row: select_i,\r\n      col: select_j\r\n    }\r\n    this.socket.emit('REQUEST_SHARED_LOCK', shared_lock_request);\r\n  }\r\n\r\n  request_exclusive_lock = (i, j) => {\r\n    // send request for a exclusive lock to backend\r\n    let exclusive_lock_request = {\r\n      row: i,\r\n      col: j\r\n    }\r\n    this.socket.emit('REQUEST_EXCLUSIVE_LOCK', exclusive_lock_request);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  toggleRestartModal = () => {\r\n    this.setState({\r\n      isRestartModalOpen: !this.state.isRestartModalOpen\r\n    })\r\n  }\r\n\r\n  toggleNameModal = () => {\r\n    this.setState({\r\n      isNameModalOpen: !this.state.isNameModalOpen\r\n    })\r\n  }\r\n\r\n  toggleRedirectConfirmModal = () => {\r\n    this.setState({\r\n      isRedirectConfirmOpen: !this.state.isRedirectConfirmOpen\r\n    })\r\n  }\r\n\r\n  toggleNavbar = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    })\r\n  }\r\n\r\n  toggleExclusiveLockReject = () => {\r\n    this.setState({\r\n      isExclusiveLockRejectOpen: !this.state.isExclusiveLockRejectOpen\r\n    })\r\n  }\r\n\r\n  toggleShowHistory = () => {\r\n    this.setState({\r\n      isShowHistoryOpen: !this.state.isShowHistoryOpen\r\n    })\r\n  }\r\n\r\n  toggleSelectionPrompt = () => {\r\n    this.setState({\r\n        isSelectPromptOpen: !this.state.isSelectPromptOpen\r\n    })\r\n  }\r\n\r\n  toggleInstructionModal = () => {\r\n      this.setState({\r\n          isInstructionOpen: !this.state.isInstructionOpen\r\n      })\r\n  }\r\n\r\n  display = () => {\r\n    display_dataset_button = \"\";\r\n    if (this.state.transaction_mode) {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    } else {\r\n      transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n    }\r\n    this.setState({\r\n      data_original: this.state.data_original.concat(buffer)\r\n    })\r\n\r\n    // fill in column headers and row headers\r\n    if (data_display.length == 0) {\r\n      data_display.push(col_headers);\r\n    }\r\n    data_display = data_display.concat(buffer_copy) \r\n    console.log(\"data display is: \", data_display);\r\n  }\r\n\r\n  redirect_import = () => {\r\n    this.setState( {\r\n      redirect_import_page: true\r\n    })\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n    if (bottom) {\r\n      // this.display()\r\n    }\r\n    prev_scrolltop = e.target.scrollTop;\r\n  }\r\n\r\n  show_state = () => {\r\n    console.log(chn_copy);\r\n    console.log(change_detected);\r\n  }\r\n\r\n  sendMessage = (message) => {\r\n    this.socket.emit('SEND_MESSAGE', message);\r\n  }\r\n\r\n  check_cell_change = () => {\r\n    // create a message to socket\r\n    if (change_detected) {\r\n\r\n      // find current state\r\n      let state = \"Y\"; //  Y means in a transaction\r\n      if (!this.state.transaction_mode) {\r\n        state = \"N\";\r\n      }\r\n\r\n      // extract features of the new value\r\n      let feature = \"\";\r\n      if (isNaN(chn_copy[0][3])) {\r\n        feature = \"STR\";\r\n      } else {\r\n        feature = \"DIGIT\";\r\n      }\r\n\r\n      // record user action\r\n      user_actions.push([this.state.name, \"edit_cell\", chn_copy[0][0], chn_copy[0][1], feature, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n\r\n      // this.request_exclusive_lock(chn_copy[0][0], chn_copy[0][1]);\r\n      \r\n      pending_changes.user = this.state.user_name\r\n  \r\n      let temp = [];\r\n      let y_coord = parseInt(chn_copy[0][0]) + 1;\r\n      let x_coord = parseInt(chn_copy[0][1]) + 1;\r\n      let actual_value = chn_copy[0][3];\r\n      temp[0] = x_coord;\r\n      temp[1] = actual_value;\r\n      temp[2] = y_coord;\r\n      pending_changes.data.push(temp);\r\n      change_detected = false;\r\n    } else {\r\n      console.log(\"no changed detected\")\r\n    }\r\n  }\r\n\r\n  cell_read_only = (input_row, input_col) => {\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      cells: function(row, col, prop){\r\n       var cellProperties = {};\r\n         if(row == input_row && col == input_col){\r\n           cellProperties.readOnly = 'true'\r\n         }\r\n       return cellProperties\r\n     }\r\n   })\r\n  }\r\n\r\n\r\n  hangleUsername = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  send_default_username = () => {\r\n    let name_package = {\r\n      user_name: \"anonymous user\"\r\n    }\r\n    this.socket.emit('SEND_USERNAME', name_package);\r\n    this.toggleUserNamePrompt()\r\n  }\r\n\r\n  onSelectionSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"call username\")\r\n      let name_package = {\r\n        user_name: this.state.user_name\r\n      }\r\n      this.socket.emit('SEND_USERNAME', name_package);\r\n      this.toggleUserNamePrompt();\r\n  }\r\n\r\n  resolve_conflict = (e) => {\r\n      e.preventDefault();\r\n      data_display[conflict_i][conflict_j] = incoming_value;\r\n      this.state.data_original[conflict_i][conflict_j] = incoming_value;\r\n\r\n      // reset conflict records\r\n      conflict_i = -1;\r\n      conflict_j = -1;\r\n      incoming_value = -1;\r\n      conflict_message = \"\";\r\n      this.toggleConflictModal();\r\n  }\r\n\r\n  start_transaction = () => {\r\n    pending_changes.data = []\r\n    this.setState({\r\n      transaction_mode: true\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.end_transaction} >End Transaction</Button> \r\n    //apply_read_only_lock_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.request_shared_lock} >Apply Read-Only Lock</Button> \r\n  }\r\n\r\n  end_transaction = () => {\r\n    // setTimeout(() => {\r\n    //   this.commit_transaction();\r\n    // }, 500);\r\n    this.setState({\r\n      transaction_mode: false\r\n    })\r\n    transaction_button = <Button size='lg' className='display-button' color=\"primary\" onClick={this.start_transaction} >Start Transaction</Button>\r\n  }\r\n\r\n  track_action = (e, action_type) => {\r\n\r\n    // find current state\r\n    let state = \"Y\"; //  Y means in a transaction\r\n    if (!this.state.transaction_mode) {\r\n      state = \"N\";\r\n    }\r\n\r\n    // calculate idle time and record idle action if necessary\r\n    let idle_duration = (Date.now() / 1000) - recorded_time;\r\n    recorded_time = (Date.now() / 1000);\r\n    if (idle_duration > 3) {\r\n\r\n      // check if we can merge two idle periods together\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] == \"idle\") {\r\n        let prev_idle_time = user_actions[user_actions.length - 1][2];\r\n        user_actions.pop();\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration) + prev_idle_time, null, null, this.state.curr_table, null, null, state]);\r\n      } else {\r\n        user_actions.push([this.state.name, \"idle\", parseInt(idle_duration), null, null, this.state.curr_table, null, null, state]);\r\n      }\r\n    }\r\n\r\n    // check and update possible spreadsheet layout change\r\n    if (layout_changes.layout_changed) { \r\n      \r\n      // remove prev idle action\r\n      if (user_actions.length > 0 && user_actions[user_actions.length - 1][1] == \"idle\") {\r\n        user_actions.pop();\r\n      }\r\n\r\n      // add in all layout changes\r\n      for (var i = 0; i < layout_changes.changes.length; i++) {\r\n        let layout_change_type = layout_changes.changes[i][0];\r\n        let layout_change_direction = layout_changes.changes[i][1];\r\n        let change_index = layout_changes.changes[i][2];\r\n        user_actions.push([this.state.name, layout_change_type, change_index, layout_change_direction, null, this.state.curr_table, null, null, state]); \r\n      }\r\n\r\n      // clear up current layout_changes recorder\r\n      layout_changes.changes.length = 0;\r\n      layout_changes.layout_changed = false;\r\n    }\r\n\r\n    // handle scroll actions\r\n    if (action_type == \"scroll\") {\r\n\r\n      let scroll_diff = prev_scrolltop - e.target.scrollTop;\r\n      let action_length = user_actions.length;\r\n\r\n      // don't hace scroll_diff === 0 because each scroll on mouse will result in two identical function calls\r\n      if (scroll_diff > 0) {\r\n        \r\n        // check if previous is a large up scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"up_scroll_l\") {\r\n          // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small up scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"up_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n\r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"up_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        }\r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"up_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n      } else if (scroll_diff < 0) {\r\n\r\n        // check if previous is a large down scroll. If so, do nothing\r\n        if (action_length >= 1 && user_actions[action_length - 1][1] === \"down_scroll_l\") {\r\n            // deliberately do nothing here\r\n        }\r\n\r\n        // check for combining 6 small scrolls\r\n        else if (action_length >= SCROLL_SIZE) {\r\n          let combine = true;\r\n          for (var i = 0; i < SCROLL_SIZE; i++) {\r\n              if (user_actions[action_length - 1 - i][1] !== \"down_scroll_s\") {\r\n                combine = false;\r\n                break;\r\n              }\r\n          }\r\n          \r\n          if (combine) {\r\n            for (var i = 0; i < SCROLL_SIZE; i++) {\r\n                user_actions.pop();\r\n            }\r\n            user_actions.push([this.state.name, \"down_scroll_l\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n\r\n          else {\r\n            user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n          }\r\n        } \r\n\r\n        else {\r\n          user_actions.push([this.state.name, \"down_scroll_s\", null, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n      }\r\n      this.handleScroll(e);\r\n    }\r\n\r\n    // calculate click action\r\n    else if (action_type == \"click\") {\r\n\r\n      if (currently_editing) {\r\n        \r\n        // select a row\r\n        if (select_j < 0) {\r\n          user_actions.push([this.state.name, \"select_r\", select_i, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n\r\n        // select a column\r\n        else if (select_i < 0) {\r\n          user_actions.push([this.state.name, \"select_c\", select_j, null, null, this.state.curr_table, null, null, state]);\r\n        }\r\n        \r\n        // select a cell\r\n        else {\r\n          user_actions.push([this.state.name, action_type, select_i, select_j, null, this.state.curr_table, select_i + 1, col_headers[select_j], state]);\r\n        }\r\n        currently_editing = false;\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n\r\n    // calculate kepress action\r\n    else if (action_type == \"key_press\") {\r\n\r\n      if (change_detected) {\r\n        // handle enter press\r\n        if (e.key == \"Enter\") {\r\n          user_actions.push([this.state.name, \"keyPress_enter\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state ]);\r\n        }\r\n\r\n        // handle tab press\r\n        else if (e.key == \"Tab\") {\r\n          user_actions.push([this.state.name, \"keyPress_tab\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n\r\n        // all other press \r\n        else {\r\n          user_actions.push([this.state.name, \"keyPress\", chn_copy[0][0], chn_copy[0][1], null, this.state.curr_table, chn_copy[0][0] + 1, col_headers[chn_copy[0][1]], state]);\r\n        }\r\n      }\r\n      this.check_cell_change();\r\n    }\r\n    console.log(user_actions);\r\n  }\r\n\r\n  store_training_data = () => {\r\n    user_actions.push([this.state.name, \"END_TRAINING_DATA\", null, null, null, this.state.curr_table, null, null, \"END\"]);\r\n    let action_package = {\r\n      user_actions: user_actions\r\n    }\r\n    //POST req here\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({action_package})\r\n    };\r\n    fetch('/training/send-training-data/financing', requestOptions)\r\n  }\r\n\r\n  select_simulation = (e) => {\r\n    // e.preventDefault();\r\n    if (e.target.name == \"academic\") {\r\n      this.setState({\r\n        redirect_link: '/academic'\r\n      })\r\n    }\r\n    if (e.target.name == \"financing\") {\r\n      this.setState({\r\n        redirect_link: '/financing'\r\n      })\r\n    }\r\n    if (e.target.name == \"management\") {\r\n      this.setState({\r\n        redirect_link: '/management'\r\n      })\r\n    }\r\n    this.toggleRedirectConfirmModal();\r\n  }\r\n\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n        this.setState({ activeTab: tab });\r\n    }\r\n    if (tab === \"1\") {  \r\n      this.setState({\r\n        curr_table: \"monthly_expenses\"\r\n      })\r\n      col_headers = monthly_expense_col_headers;\r\n\r\n    } else if (tab === \"2\") {\r\n      this.setState({\r\n        curr_table: \"montly_income\"\r\n      })\r\n      col_headers = monthly_income_col_headers;\r\n\r\n    } else if (tab === \"3\") {\r\n      this.setState({\r\n        curr_table: \"check_book\"\r\n      })\r\n      col_headers = check_book_col_headers;\r\n    }\r\n  }\r\n\r\n  load_tables = (e) => {\r\n    e.preventDefault();\r\n    if (table_loaded) {\r\n      this.toggleInstructionModal();\r\n    } else {\r\n      table_loaded = true;\r\n      utils.load_simulation_v2(1, \"monthly_expense\", monthly_expense_display, buffer_copy, monthly_expense_col_headers);\r\n      utils.load_simulation_v2(1, \"monthly_income\", monthly_income_display, buffer_copy, monthly_income_col_headers);\r\n      utils.load_simulation_v2(1, \"check_book\", check_book_display, buffer_copy, check_book_col_headers);\r\n      setTimeout(() => {\r\n          monthly_expense_display = [monthly_expense_col_headers].concat(monthly_expense_display);\r\n          monthly_income_display = [monthly_income_col_headers].concat(monthly_income_display);\r\n          check_book_display = [check_book_col_headers].concat(check_book_display);\r\n          this.toggleInstructionModal();\r\n      }, 500);\r\n      col_headers = monthly_expense_col_headers;\r\n      this.toggleNameModal();\r\n    }\r\n  }\r\n\r\n  reload_tables = () => {\r\n    utils.load_simulation_v2(1, \"monthly_expense\", monthly_expense_display, buffer_copy, monthly_expense_col_headers);\r\n    utils.load_simulation_v2(1, \"monthly_income\", monthly_income_display, buffer_copy, monthly_income_col_headers);\r\n    utils.load_simulation_v2(1, \"check_book\", check_book_display, buffer_copy, check_book_col_headers);\r\n    setTimeout(() => {\r\n        monthly_expense_display = [monthly_expense_col_headers].concat(monthly_expense_display);\r\n        monthly_income_display = [monthly_income_col_headers].concat(monthly_income_display);\r\n        check_book_display = [check_book_col_headers].concat(check_book_display);\r\n    }, 500);\r\n    col_headers = monthly_expense_col_headers;\r\n  }\r\n\r\n  redirect = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  onNameSubmit = (e) => {\r\n    this.setState({\r\n        [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  submitName = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"state name is: \", this.state.name);\r\n    this.toggleNameModal();\r\n  }\r\n\r\n  restart = () => {\r\n    // reset all display\r\n    monthly_expense_display = [];\r\n    monthly_income_display = [];\r\n    check_book_display = [];\r\n    monthly_expense_col_headers = [];\r\n    monthly_income_col_headers = [];\r\n    check_book_col_headers = [];\r\n\r\n    // reload all tables\r\n    this.reload_tables();\r\n\r\n    // clear recorded actions\r\n    user_actions = [];\r\n\r\n    // set tab\r\n    this.setState({\r\n      activeTab: '1'\r\n    })\r\n    this.toggle('1');\r\n\r\n    // toggle restart confirmation\r\n    this.toggleRestartModal();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect_link} />\r\n    }\r\n    return (\r\n      <div onClick={e => this.track_action(e, \"click\")} onKeyUp={e => this.track_action(e, \"key_press\")} className=\"App\">\r\n        <script src=\"node_modules/handsontable/dist/handsontable.full.min.js\"></script>\r\n        <link href=\"node_modules/handsontable/dist/handsontable.full.min.css\" rel=\"stylesheet\" media=\"screen\"></link>\r\n         <Jumbotron className='logo-jumbo'>\r\n          <ButtonDropdown isOpen={this.state.collapsed} toggle={this.toggleNavbar} style={{float: 'left'}} className=\"up-margin-one\">\r\n                <DropdownToggle color=\"#61dafb\"  caret style={{float: 'right'}}>\r\n                  Change Simulation\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <DropdownItem name=\"academic\" id=\"academic\" onClick={e => this.select_simulation(e)}>Academic Simulation</DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem name=\"management\" id=\"management\" onClick={e => this.select_simulation(e)}>Management Simulation</DropdownItem>\r\n                </DropdownMenu>\r\n          </ButtonDropdown>\r\n          </Jumbotron >\r\n          <div>\r\n            <Jumbotron >\r\n                  <h1 className=\"display-3\">Hi {this.state.user_name}, welcome to Financing Simulation!</h1>\r\n                  <p className=\"lead\">This is a simple web interface that allows you to upload spreadsheets and retrieve data.</p>\r\n                  <hr className=\"my-2\" />\r\n                  <p className=\"lead\">\r\n                    {/* <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleShowHistory} >Edit History</Button> */}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    {transaction_button}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.store_training_data} >Complete Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.restart} >Restart Simulation</Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleInstructionModal} >Instruction</Button>\r\n                  </p>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isInstructionOpen} >\r\n                    {/* <ModalHeader ><header>Simulation Instruction</header>  </ModalHeader> */}\r\n                    <ModalBody>\r\n                        <h2>Welcome</h2>\r\n                        Welcome to Academic Simulation! This instruction can be accessed at any time by clicking the \"Instruction\" button on this webpage. \r\n                        Under this simulation, there are three tables: a monthly expense table, a monthly income table, and a transaction table\r\n                        <hr className=\"my-2\" />\r\n                        \r\n                        <p className=\"margin-one\">\r\n                        <h2>Procedures</h2>\r\n                        You are given a list of expenditures and earnings with corresponding data and discriptions from our email (If you didn't receive our email for the list, please contact \r\n                        ninghan2@illinois.edu). Following that list from top to bottom (i.e. oldest to most recent), for each entry, you are to first log that entry into the \r\n                        transanction table by filling out the corresponding coloum. For an expenditure, leave the \"deposit\" plank, and for an income, leave the \"withdraw\" plank. Also \r\n                        for each entry, you need to manually calculate the remaining balance, assuming that your initial balance is $10,000. For each entry that you log into the transaction\r\n                        table, update the monthly income table or monthly expense table, depending on whether the entry is an expenditure or income. \r\n                        <h5>Note: </h5>\r\n                        Make sure to follow the procedures entry-by-entry from the list we send you from our email. That is, for each entry from the list (from top to bottom), log that \r\n                        entry into the transaction table first, and then update either monthly expense or monthly income table with the correct month and expense/income category. After that, \r\n                        move on the the next entry from the list, and log it into the transaction table...etc. Make sure do not skip procedures. Specifically, DO NOT log multiple entry from \r\n                        the list into the transaction table and do multiple updates on monthly expense or monthly income at once. \r\n                        </p>\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button size='lg' className='display-button' color=\"info\" onClick={this.load_tables}>Got it!</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRedirectConfirmOpen} toggle={this.toggleRedirectConfirmModal}>\r\n                    <ModalHeader toggle={this.toggleRedirectConfirmModal}>Are you sure you want to leave this page?</ModalHeader>\r\n                    <ModalBody>\r\n                      Note that once you leave this simulation page, you will lose all the records and progress on this simulation. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.redirect}>Confirm</Button> {' '}\r\n                    <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRedirectConfirmModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isNameModalOpen} toggle={this.toggleNameModal}>\r\n                    <ModalHeader toggle={this.toggleNameModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      <Form onSubmit={this.submitName}>\r\n                        <FormGroup>\r\n                          <Label for=\"user_name\">Enter Full Name</Label>\r\n                          <Input type=\"text\" name=\"name\" id=\"name\" onChange={e => this.onNameSubmit(e)} />\r\n                        </FormGroup>\r\n                        <Button size='lg' color=\"primary\" className='single_search_submit' type=\"submit\" >Confirm</Button> {' '}\r\n                      </Form>\r\n                    </ModalBody>\r\n                  </Modal>\r\n\r\n                  <Modal size='lg' isOpen={this.state.isRestartModalOpen} toggle={this.toggleRestartModal}>\r\n                    <ModalHeader toggle={this.toggleRestartModal}>Please Enter Your Full Name</ModalHeader>\r\n                    <ModalBody>\r\n                      Your simulation has been restarted. All the changes that haven't been committed yet are clearned. \r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <Button size='lg' className='display-button' color=\"info\" onClick={this.toggleRestartModal}>Got It</Button>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                  \r\n                        \r\n            </Jumbotron>\r\n        </div>\r\n        {/* <hr /> */}\r\n\r\n        <Nav tabs>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '1' })}\r\n                    onClick={() => { this.toggle('1'); }}>\r\n                    Monthly Expenses\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '2' })}\r\n                    onClick={() => { this.toggle('2'); }}>\r\n                    Monthly Income\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                    className={classnames({ active: this.state.activeTab === '3' })}\r\n                    onClick={() => { this.toggle('3'); }}>\r\n                    Transaction Log\r\n                </NavLink>\r\n            </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"1\">\r\n                <h4>\r\n                    Monthly Expenses Table\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={monthly_expense_display} ref={this.hotTableComponent} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n                <h4>\r\n                    Monthly Income Table\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={monthly_income_display} ref={this.hotTableComponent1} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n            <TabPane tabId=\"3\">\r\n                <h4>\r\n                    Transaction Log\r\n                </h4> \r\n                <div id = \"display_portion\" onScroll={e => this.track_action(e, \"scroll\")}  tabIndex=\"1\">\r\n                    <HotTable className=\"handsontable\" id =\"display_table\" data={check_book_display} ref={this.hotTableComponent2} id={this.id}\r\n                        colHeaders={true} \r\n                        rowHeaders={true} \r\n                        width=\"100%\" \r\n                        height=\"300\"\r\n                        colWidths=\"100%\"\r\n                        rowHeights=\"25\"\r\n                        contextMenu={true}\r\n                        formulas={true}\r\n                        readOnly={!this.state.transaction_mode}\r\n                    />\r\n                </div>\r\n                    \r\n            </TabPane>\r\n        </TabContent>\r\n          \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Financing;\r\n","import React, { Component, useState } from 'react';\nimport ReactDOM from \"react-dom\"\nimport logo from './logo.svg';\nimport './App.css';\nimport {ExcelRenderer, OutTable} from 'react-excel-renderer';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Row,\n  Col,\n  Jumbotron,\n  Button,\n  Table, Modal, ModalHeader, ModalFooter, ModalBody\n} from 'reactstrap';\nimport ReactDataSheet from 'react-datasheet';\n// Be sure to include styles at some point, probably during your bootstrapping\nimport 'react-datasheet/lib/react-datasheet.css';\n\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom';\nimport Start from './components/Start';\nimport Result from './components/Result';\nimport Simulations from './components/Simulations';\nimport Academic from './components/Academic';\nimport Management from './components/Management';\nimport Financing from './components/Financing';\n\nconst BPlusTree = require('bplustree');\n\n//default order: 6\n// \"start\": \"react-scripts start\",\n// \"proxy\": \"http://localhost:3001\",\nconst tree = new BPlusTree()\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      rows: [],\n      cols: [],\n      attri: [],\n      isSearchSelectionModalOpen: false, \n      isRangeSearchModalOpen: false, \n      isSingelSearchModalOpen: false\n    }\n\n    this.toggleSearchSelectionModal = this.toggleSearchSelectionModal.bind()\n    this.toggleRangeSearchModal = this.toggleRangeSearchModal.bind()\n    this.toggleSingleSearchModal = this.toggleSearchSelectionModal.bind()\n  }\n\n  toggleSearchSelectionModal = () => {\n    this.setState({\n      isSearchSelectionModalOpen: !this.state.isSearchSelectionModalOpen\n    })\n  }\n\n  toggleRangeSearchModal = () => {\n    this.setState({\n      isRangeSearchModalOpen: !this.state.isRangeSearchModalOpen,\n      isSearchSelectionModalOpen: !this.state.isSearchSelectionModalOpen\n    })\n  }\n\n  toggleSingleSearchModal = () => {\n    this.setState({\n      isSingelSearchModalOpen: !this.state.isSingelSearchModalOpen,\n      isSearchSelectionModalOpen: !this.state.isSearchSelectionModalOpen\n    })\n  }\n\n  onRetrieveSelectionClick = () => {\n    this.toggleSearchSelectionModal();\n  }\n\n  fileHandler = (event) => {\n    let fileObj = event.target.files[0];\n  \n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if(err){\n        console.log(err);            \n      }\n      else{\n        this.setState({\n          cols: resp.cols,\n          rows: resp.rows\n        });\n      }\n    });               \n  \n  }\n\n  render() { \n\n    return (\n      <div className=\"App\">\n\n           <HashRouter basename={`${process.env.PUBLIC_URL}`}>\n                <div>\n                  {/* <Navbar /> */}\n                  <Switch>\n                    <Route path=\"/\" component={Simulations} exact/>\n                    <Route path=\"/result\" component={Result}/>\n                    <Route path=\"/start\" component={Start}/>\n                    <Route path=\"/academic\" component={Academic}/>\n                    <Route path=\"/management\" component={Management}/>\n                    <Route path=\"/financing\" component={Financing}/>\n                  </Switch>\n                </div> \n            </HashRouter>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}